This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Bruno Le Floch
============================================================
TEST 1: on token lists
============================================================
The token list contains the tokens:
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character }).
<recently read> }
l.28 }
The token list contains the tokens:
>  { (begin-group character {)
>  i (the letter i)
>  j (the letter j)
>  k (the letter k)
>  } (end-group character }).
<recently read> }
l.28 }
The token list contains the tokens:
>  a (the letter a)
>  b (the letter b)
>  \undef (control sequence=undefined).
<recently read> }
l.28 }
The token list contains the tokens:
>  c (the letter c).
<recently read> }
l.28 }
The token list contains the tokens:
>  d (the letter d)
>  \foobar (control sequence=undefined)
>  d (the letter d)
>  e (the letter e)
>  f (the letter f).
<recently read> }
l.28 }
The token list contains the tokens:
>  \de: (control sequence=undefined).
<recently read> }
l.28 }
The token list contains the tokens:
>  \hi: (control sequence=undefined)
>  \jk: (control sequence=undefined).
<recently read> }
l.28 }
The token list contains the tokens:
>  \uv: (control sequence=undefined).
<recently read> }
l.28 }
The token list contains the tokens:
>  \ab (control sequence=undefined)
>  X (the letter X)
>  \cd (control sequence=undefined).
<recently read> }
l.28 }
The token list contains the tokens:
>  \deX (control sequence=undefined)
>  \f (control sequence=undefined)
>  \  (control sequence=\ )
>  X (the letter X)
>  X (the letter X)
>  \O (control sequence=macro:->\OT1-cmd \O \OT1\O ).
<recently read> }
l.28 }
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/sequence-unbalanced"
! 
! Missing left and right braces inserted in extracted match.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.28 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to extract submatches or split a token list according to a
| given regular expression, but some of the resulting items were not balanced.
|...............................................
The token list contains the tokens:
>  \abc (control sequence=undefined)
>  { (begin-group character {)
>  } (end-group character }).
<recently read> }
l.28 }
The token list contains the tokens:
>  b (the letter b)
>  c (the letter c).
<recently read> }
l.28 }
The token list contains the tokens:
>  { (begin-group character {)
>  d (the letter d)
>  } (end-group character }).
<recently read> }
l.28 }
The token list contains the tokens:
>  { (begin-group character {)
>  e (the letter e)
>  } (end-group character }).
<recently read> }
l.28 }
============================================================
============================================================
TEST 2: with somewhat unbalanced braces
============================================================
The token list \l_tmpa_tl contains the tokens:
>  [ (begin-group character [)
>  a (the letter a)
>  ] (end-group character ])
>  [ (begin-group character [)
>  b (the letter b)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  [ (begin-group character [)
>  c (the letter c)
>  ] (end-group character ])
>  [ (begin-group character [)
>  d (the letter d)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  \e (control sequence=undefined)
>  \e (control sequence=undefined)
>  } (end-group character })
>  } (end-group character })
>  [ (begin-group character [)
>  f (the letter f)
>  ] (end-group character ])
>  } (end-group character })
>  } (end-group character })
>  \gh (control sequence=undefined)
>  \gh (control sequence=undefined).
<recently read> }
l.35 }
============================================================
============================================================
TEST 3: Unbalanced things
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/replace-unbalanced"
! 
! The result of a replacement does not have balanced braces.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.43 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to do some regular expression replacement, and the resulting
| token list would not have the same number of begin-group and end-group
| tokens.
| 
|     A left brace was inserted.
|...............................................
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/replace-unbalanced"
! 
! The result of a replacement does not have balanced braces.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.43 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to do some regular expression replacement, and the resulting
| token list would not have the same number of begin-group and end-group
| tokens.
| 
|     A right brace was inserted.
|...............................................
The token list \l_tmpa_tl contains the tokens:
>  { (begin-group character {)
>  { (begin-group character {)
>  \{{ (control sequence=undefined)
>  > (end-group character >)
>  { (begin-group character {)
>  \>{ (control sequence=undefined)
>  } (end-group character })
>  b (the letter b)
>  \}b (control sequence=undefined)
>  } (end-group character }).
<recently read> }
l.43 }
============================================================
============================================================
TEST 4: Macro parameters
============================================================
The token list \l_tmpa_tl contains the tokens:
>  \# (control sequence=\char"23)
>  # (macro parameter character #)
>  b (the letter b).
<recently read> }
l.52 }
============================================================
============================================================
TEST 5: Nested classes
============================================================
The sequence \l_foo_seq contains the items (without outer braces):
>  {ABYZz|}
>  {zA}.
<recently read> }
l.61 }
The sequence \l_foo_seq contains the items (without outer braces):
>  {{ghi}}
>  {{q}}.
<recently read> }
l.61 }
============================================================
============================================================
TEST 6: Escaped u
============================================================
The sequence \l_foo_seq contains the items (without outer braces):
>  {x}
>  {x##|\c_empty_tl }
>  {x}.
<recently read> }
l.75 }
The token list \l_tmpc_tl contains the tokens:
>  A (the letter A)
>  B (the letter B)
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #)
>  { (begin-group character {)
>  } (end-group character })
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #).
<recently read> }
l.75 }
============================================================
============================================================
TEST 7: Catcodes shouldn't "stick"
============================================================
The sequence \l_foo_seq contains the items (without outer braces):
>  {A*012}
>  { +AZ- }.
<recently read> }
l.81 }
============================================================
============================================================
TEST 8: The \K command
============================================================
The sequence \l_foo_seq contains the items (without outer braces):
>  {d}
>  {a}
>  {d}
>  {ace}
>  {a}
>  {e}
>  {d}
>  {b}
>  {d}
>  {ce}
>  {b}
>  {e}.
<recently read> }
l.92 }
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/bad-escape"
! 
! Invalid escape \K within a control sequence.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.92 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| The escape sequence \K may not appear within a control sequence test
| introduced by \c{. 
|...............................................
> Compiled regex {\c {a|b\K }}:
+-branch
  Match
    control sequence
    +-branch
      char code 97
    +-branch
      char code 98
      char code 75.
<recently read> }
l.92 }
The sequence \l_foo_seq contains the items (without outer braces):
>  {1}
>  {a}.
<recently read> }
l.92 }
The sequence \l_foo_seq contains the items (without outer braces):
>  {c3}
>  {bc}.
<recently read> }
l.92 }
============================================================
