This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Bruno Le Floch
============================================================
TEST 1: on token lists
============================================================
The token list contains the tokens:
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character }).
<recently read> }
l.43   }
The token list contains the tokens:
>  { (begin-group character {)
>  i (the letter i)
>  j (the letter j)
>  k (the letter k)
>  } (end-group character }).
<recently read> }
l.43   }
The token list contains the tokens:
>  a (the letter a)
>  b (the letter b)
>  \undef (control sequence=undefined).
<recently read> }
l.43   }
The token list contains the tokens:
>  c (the letter c).
<recently read> }
l.43   }
The token list contains the tokens:
>  d (the letter d)
>  \foobar (control sequence=undefined)
>  d (the letter d)
>  e (the letter e)
>  f (the letter f).
<recently read> }
l.43   }
The token list contains the tokens:
>  \de: (control sequence=undefined).
<recently read> }
l.43   }
The token list contains the tokens:
>  \hi: (control sequence=undefined)
>  \jk: (control sequence=undefined).
<recently read> }
l.43   }
The token list contains the tokens:
>  \uv: (control sequence=undefined).
<recently read> }
l.43   }
The token list contains the tokens:
>  \ab (control sequence=undefined)
>  X (the letter X)
>  \cd (control sequence=undefined).
<recently read> }
l.43   }
The token list contains the tokens:
>  \deX (control sequence=undefined)
>  \f (control sequence=undefined)
>  \  (control sequence=\ )
>  X (the letter X)
>  X (the letter X)
>  \O (control sequence=macro:->\OT1-cmd \O \OT1\O ).
<recently read> }
l.43   }
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/result-unbalanced"
! 
! Missing brace inserted when splitting or extracting submatches.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.43   }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to do some regular expression operation, and the resulting
| token list would not have the same number of begin-group and end-group
| tokens. Braces were inserted: 1 left, 2 right.
|...............................................
The token list contains the tokens:
>  \abc (control sequence=undefined)
>  { (begin-group character {)
>  } (end-group character }).
<recently read> }
l.43   }
The token list contains the tokens:
>  b (the letter b)
>  c (the letter c).
<recently read> }
l.43   }
The token list contains the tokens:
>  { (begin-group character {)
>  d (the letter d)
>  } (end-group character }).
<recently read> }
l.43   }
The token list contains the tokens:
>  { (begin-group character {)
>  e (the letter e)
>  } (end-group character }).
<recently read> }
l.43   }
============================================================
============================================================
TEST 2: with somewhat unbalanced braces
============================================================
The token list \l_tmpa_tl contains the tokens:
>  [ (begin-group character [)
>  a (the letter a)
>  ] (end-group character ])
>  [ (begin-group character [)
>  b (the letter b)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  [ (begin-group character [)
>  c (the letter c)
>  ] (end-group character ])
>  [ (begin-group character [)
>  d (the letter d)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  \e (control sequence=undefined)
>  \e (control sequence=undefined)
>  } (end-group character })
>  } (end-group character })
>  [ (begin-group character [)
>  f (the letter f)
>  ] (end-group character ])
>  } (end-group character })
>  } (end-group character })
>  \gh (control sequence=undefined)
>  \gh (control sequence=undefined).
<recently read> }
l.52   }
============================================================
============================================================
TEST 3: Unbalanced things
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/result-unbalanced"
! 
! Missing brace inserted when replacing.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.62   }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to do some regular expression operation, and the resulting
| token list would not have the same number of begin-group and end-group
| tokens. Braces were inserted: 1 left, 0 right.
|...............................................
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/result-unbalanced"
! 
! Missing brace inserted when replacing.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.62   }
|'''''''''''''''''''''''''''''''''''''''''''''''
| LaTeX was asked to do some regular expression operation, and the resulting
| token list would not have the same number of begin-group and end-group
| tokens. Braces were inserted: 0 left, 1 right.
|...............................................
The token list \l_tmpa_tl contains the tokens:
>  { (begin-group character {)
>  { (begin-group character {)
>  \{{ (control sequence=undefined)
>  > (end-group character >)
>  { (begin-group character {)
>  \>{ (control sequence=undefined)
>  } (end-group character })
>  b (the letter b)
>  \}b (control sequence=undefined)
>  } (end-group character }).
<recently read> }
l.62   }
============================================================
============================================================
TEST 4: Macro parameters
============================================================
The token list \l_tmpa_tl contains the tokens:
>  \# (control sequence=\char"23=35)
>  # (macro parameter character #)
>  \#x (control sequence=undefined).
<recently read> }
l.76   }
The token list \l_tmpa_tl contains the tokens:
>  x (the character x)
>  \c_parameter_token (control sequence=macro parameter character #)
>  x (the character x).
<recently read> }
l.76   }
============================================================
============================================================
TEST 5: Nested classes
============================================================
{ABYZz|} {zA} 
{{ghi}} {{q}} 
============================================================
============================================================
TEST 6: Escaped u
============================================================
{x} {x##|\c_empty_tl } {x} 
The token list \l_tmpa_tl contains the tokens:
>  A (the letter A)
>  B (the letter B)
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #)
>  { (begin-group character {)
>  } (end-group character })
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #).
<recently read> }
l.101   }
The token list \l_tmpa_tl contains the tokens:
>  \if_false: (control sequence=\iffalse)
>  \if_false: (control sequence=\iffalse)
>  \c_parameter_token (control sequence=macro parameter character #)
>  \if_false: (control sequence=\iffalse)
>  \if_false: (control sequence=\iffalse)
>  \c_parameter_token (control sequence=macro parameter character #).
<recently read> }
l.101   }
============================================================
============================================================
TEST 7: Catcodes shouldn't "stick"
============================================================
{A*012} { +AZ- } 
============================================================
============================================================
TEST 8: The \K command
============================================================
{d} {a} {d} {ace} {a} {e} {d} {b} {d} {ce} {b} {e} 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/bad-escape"
! 
! Invalid escape \K within a control sequence.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.121   }
|'''''''''''''''''''''''''''''''''''''''''''''''
| The escape sequence \K may not appear within a control sequence test
| introduced by \c{.
|...............................................
> Compiled regex {\c {a|b\K }}:
+-branch
  Match
    control sequence
    +-branch
      char code 97
    +-branch
      char code 98
      char code 75.
<recently read> }
l.121   }
{1} {a} 
{c3} {bc} 
The token list \l_tmpa_tl contains the tokens:
>  a (the letter a)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >)
>  b (the letter b)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >)
>  c (the letter c)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >).
<recently read> }
l.121   }
{} {foo} {} {} {} {foo} {} {foo} 
{?} {?} 
============================================================
============================================================
TEST 9: Catcodes and groups
============================================================
{ab*ef} {ab*} 
============================================================
============================================================
TEST 10: Caseless matching and cs
============================================================
{\abcd e} {\abcd E} 
{xabc\abc } {Xabc\abc } 
============================================================
============================================================
TEST 11: Braces
============================================================
|\{}|
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "regex/replacement-missing-rbrace"
! 
! Missing right brace inserted in replacement text.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.147   }
|'''''''''''''''''''''''''''''''''''''''''''''''
| There were 1 missing right braces.
|...............................................
|\csname\endcsname|
============================================================
