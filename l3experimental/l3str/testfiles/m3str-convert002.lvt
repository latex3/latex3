%
% Copyright (C) 2011, 2013 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}
\RequirePackage[check-declarations]{expl3}
\RequirePackage{l3str-convert}

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

\OMIT
\cs_generate_variant:Nn \str_set_convert:Nnnn { No }
\tl_new:N \l_tmpa_str
\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_set:Nx \l_all_bytes_tl
  { \int_step_function:nnnN { 0 } { 1 } { 255 } \__str_output_byte:n }
\TIMO

\tl_map_inline:nn { {hex} {name} {string} {url} }
  {
    \TEST { Escaping~#1 }
      {
        \str_set_convert:Nonn \l_tmpa_tl { \l_all_bytes_tl }
          { latin1 } { latin1/#1 }
        \TYPE { \l_tmpa_tl }
        \str_set_convert:Nonn \l_tmpa_tl { \l_tmpa_tl }
          { latin1/#1 } { latin1 }
        \str_if_eq:NNTF \l_tmpa_tl \l_all_bytes_tl { \TRUE } { \ERROR }
      }
  }
 % need to test on invalid input

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\char_set_catcode_other:N \^^83
\TIMO

\TEST { From~utf8~to~native }
  {
    \str_set_convert:Nnnn \l_tmpa_str { c2 83 } { utf8/hex } { }
    \str_if_eq:onTF \l_tmpa_str { ^^83 } { \TRUE } { \ERROR }
  }

\TEST { From~native~to~utf8 }
  {
    \str_set_convert:Nnnn \l_tmpa_str { ^^83 } { } { utf8/hex }
    \str_if_eq:onTF { \l_tmpa_str } { C2 83 } { \TRUE } { \ERROR }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { misc }
  {
    \str_set_convert:Nnnn \l_tmpa_str
      { 0020 0034 0058 0123 1234 6C34 D834 DD1E }
      { utf16be/hex } { utf8/name }
    \exp_args:NNo \tl_replace_all:Nnn \l_tmpa_str { \c_hash_str } { * }
    \str_if_eq_x:nnTF { *20 4 X *C4*A3 *E1*88*B4 *E6*B0*B4 *F0*9D*84*9E }
      { \l_tmpa_str } { \TRUE } { \ERROR }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { iso~encoding }
  {
    \str_set_convert:Nnnn \l_tmpa_str
      { 0044 3333 0044 005E 0044 017C 0044 017D 0044 }
      { utf16/hex } { iso88592/hex }
    \str_if_eq:onTF { \l_tmpa_str } { 44445E44BF44AE44 } { \TRUE } { \ERROR }
    \str_set_convert:NnnnTF \l_tmpa_str
      { 0044 3333 0044 005E 0044 017C 0044 017D 0044 }
      { utf16/hex } { iso88592/hex }
      { \ERROR } { \FALSE }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Misc~2 }
  {
    \str_set_convert:Nnnn \l_tmpa_tl { 6C34 D834 DD1E }
      { utf16/hex } { utf16/hex }
    \str_if_eq:onTF { \l_tmpa_tl } { FEFF 6C34 D834 DD1E }
      { \TRUE } { \ERROR }
    \str_set_convert:Nnnn \l_tmpa_tl { 12 + 33 , "A0 , , }
      { clist } { latin1 }
    \str_if_eq:onTF { \l_tmpa_tl } { - ^^a0 } { \TRUE } { \ERROR }
    \str_set_convert:Nnnn \l_tmpa_tl { 6C34 D834 DD1E }
      { utf16/hex } { clist }
    \str_if_eq:onTF { \l_tmpa_tl } { 27700 , 119070 }
      { \TRUE } { \ERROR }
  }

\int_compare:nNnF \etex_currentgrouplevel:D = \c_zero { \etex_showgroups:D }
\int_compare:nNnF \etex_currentiflevel:D = \c_one { \etex_showifs:D }

\END
