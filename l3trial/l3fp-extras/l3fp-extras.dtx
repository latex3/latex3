% \iffalse
%
%% File l3fp-extras.dtx (C) Copyright 2012,2013,2017,2021 The LaTeX Project
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    http://www.latex-project.org/lppl.txt
%
% This file is part of the "l3trial bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/latex3/latex3
%
% for those people who are interested.
%
%<*driver|package>
\RequirePackage{expl3}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\usepackage{amsmath}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \title{^^A
%   The \pkg{l3fp-extras} package\\ Add ons to \pkg{l3fp}^^A
% }
%
% \author{^^A
%  The \LaTeX{} Project\thanks
%    {^^A
%      E-mail:
%        \href{mailto:latex-team@latex-project.org}
%          {latex-team@latex-project.org}^^A
%    }^^A
% }
%
% \date{Released 2018-04-30}
%
% \maketitle
%
% \begin{documentation}
%
% \section{\pkg{l3fp-extras} documentation}
%
% Additions to \pkg{l3fp}.
%
% \subsection{Symbolic expressions}
%
% The \pkg{l3fp-symbolic} package introduces support for variables.
% \begin{quote}
%   \cs{fp_new_variable:n} |{ A }|
%   \cs{fp_set:Nn} \cs{l_tmpb_fp} |{ 1 * sin(A) + 3**2 }|
%   \cs{fp_show:n} |{| \cs{l_tmpb_fp} |}|
%   \cs{fp_show:N} \cs{l_tmpb_fp}
%   \cs{fp_set_variable:nn} |{ A }| |{ pi/2 }|
%   \cs{fp_show:n} |{| \cs{l_tmpb_fp} |}|
%   \cs{fp_show:N} \cs{l_tmpb_fp}
%   \cs{fp_set_variable:nn} |{ A }| |{ 0 }|
%   \cs{fp_show:n} |{| \cs{l_tmpb_fp} |}|
%   \cs{fp_show:N} \cs{l_tmpb_fp}
% \end{quote}
% defines~|A| to be a variable, then defines \cs{l_tmpb_fp} to stand for
% |1*sin(A)+9| (note that |3**2| is evaluated, but the |1*|~product is
% not simplified away).  Until \cs{l_tmpb_fp} is changed, \cs{fp_show:N}
% \cs{l_tmpb_fp} will show |((1*sin(A))+9)| regardless of the value
% of~|A|.  The next step defines~|A| to be equal to~|pi/2|: then
% \cs{fp_show:n} |{| \cs{l_tmpb_fp} |}| will evaluate \cs{l_tmpb_fp} and
% show~|10|.  We then redefine~|A| to be~|0|: since \cs{l_tmpb_fp} still
% stands for |1*sin(A)+9|, the value shown is then~|9|.  Variables can
% be set with \cs{fp_set_variable:nn} to arbitrary floating point
% expressions including other variables.
%
% \begin{macro}{\fp_new_variable:n}
%   \begin{syntax}
%     \cs{fp_new_variable:n} \Arg{identifier}
%   \end{syntax}
%   Declares the \meta{identifier} as a variable, which allows it to be
%   used in floating point expressions.  For instance,
%   \begin{quote}
%     \cs{fp_new_variable:n} |{ A }| \\
%     \cs{fp_show:n} |{ A**2 - A + 1 }|
%   \end{quote}
%   shows |(((A^2)-A)+1)|.  If the declaration was missing, the parser
%   would complain about an \enquote{\texttt{Unknown fp word 'A'}}.  The
%   \meta{identifier} must consist entirely of Latin letters among
%   |[a-zA-Z]|.
% \end{macro}
%
% \begin{macro}{\fp_set_variable:nn}
%   \begin{syntax}
%     \cs{fp_set_variable:nn} \Arg{identifier} \Arg{fpexpr}
%   \end{syntax}
%   Defines the \meta{identifier} to stand in any further expression for
%   the result of evaluating the \meta{floating point expression} as
%   much as possible.  The result may contain other variables, which are
%   then replaced by their values if they have any.  For instance,
%   \begin{quote}
%     \cs{fp_new_variable:n} |{ A }|
%     \cs{fp_new_variable:n} |{ B }|
%     \cs{fp_new_variable:n} |{ C }|
%     \cs{fp_set_variable:nn} |{ A } { 3 }|
%     \cs{fp_set_variable:nn} |{ C } { A ** 2 + B * 1 }|
%     \cs{fp_show:n} |{ C + 4 }|
%     \cs{fp_set_variable:nn} |{ A } { 4 }|
%     \cs{fp_show:n} |{ C + 4 }|
%   \end{quote}
%   shows |((9+(B*1))+4)| twice: changing the value of~|A| to~|4| does
%   not alter~|C| because |A|~was replaced by its value~|3| when
%   evaluating |A**2+B*1|.
% \end{macro}
%
% \begin{macro}{\fp_clear_variable:n}
%   \begin{syntax}
%     \cs{fp_clear_variable:n} \Arg{identifier}
%   \end{syntax}
%   Removes any value given by \cs{fp_set_variable:nn} to the variable
%   with this \meta{identifier}.  For instance,
%   \begin{quote}
%     \cs{fp_new_variable:n} |{ A }|
%     \cs{fp_set_variable:nn} |{ A } { 3 }|
%     \cs{fp_show:n} |{ A ^ 2 }|
%     \cs{fp_clear_variable:n} |{ A }|
%     \cs{fp_show:n} |{ A ^ 2 }|
%   \end{quote}
%   shows~|9|, then~|(A^2)|.
% \end{macro}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{l3fp-extras} implementation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
\ProvidesExplPackage{l3fp-extras}{2018-04-30}{}
  {L3 Experimental additions to l3fp}
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex
