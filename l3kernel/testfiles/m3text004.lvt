%
% Copyright (C) 2020,2022 LaTeX Project
%
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
  \tl_set:Nn \l_tmpa_tl { Hello }
  \tl_set:Nn \l_tmpb_tl { \l_tmpa_tl }
  \cs_set_protected:Npn \cs_tmp:w { \l_tmpa_tl }
\TIMO

\TESTEXP { Purify~content }
  {
    \text_purify:n { Some~\emph{text}~\l_tmpa_tl }
    \NEWLINE
    \text_purify:n { \l_tmpa_tl \c_space_tl some { \bfseries text } }
  }

\TESTEXP { Purify~in~braces }
  {
    \text_purify:n { { \emph { \l_tmpa_tl } }~world~\par with~\ERROR & # }
  }

\TESTEXP { Purification~exclusions }
  {
    \text_purify:n { FOO~\cite { \l_tmpa_tl } ~ { BAZ } }
    \NEWLINE
    \text_purify:n { \label { BAR } ~ { BAZ } }
  }

\TESTEXP { Math-mode~escape }
  {
    \text_purify:n { Some~text~$y~=~\sin \theta$ }
    \NEWLINE
    \text_purify:n { Opps~not~close~token~in~$y~=~\sin \theta }
    \NEWLINE
    \text_purify:n { \ensuremath { y = mx + c }~is~an~equation }
  }

\sys_if_engine_ptex:T { \END }

\TESTEXP { Letter-like~commands }
  {
    \text_purify:n { \AA \aa \J \ae \dh \ss \l \O }
  }

\TESTEXP { Accents }
  {
    \text_purify:n { \"{a} \u{e} \H{i} \v{o} \.{u} } \NEWLINE
    \text_purify:n { \~{n} \k{r} }
  }

\END
