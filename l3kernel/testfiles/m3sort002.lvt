%
% Copyright (C) 2012-2015,2017,2018,2021 The LaTeX Project
%
\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\prg_new_conditional:Npnn \test_compare:nn #1#2 { TF }
  {
    \int_compare:nNnTF {#1} > {#2}
      { \prg_return_false: } { \prg_return_true: }
  }
\TIMO

\TESTEXP { Sort~expandably }
  {
    | \tl_sort:nN { } \ERROR |
    \NEWLINE
    \tl_sort:nN { {a\par b} } \ERROR
    \NEWLINE
    \tl_sort:nN { 81 } \test_compare:nnTF
    \NEWLINE
    \tl_sort:nN { 815 } \test_compare:nnTF
    \NEWLINE
    \tl_sort:nN { {\if_true: 8\fi:}15 } \test_compare:nnTF
    \NEWLINE
    \tl_sort:nN { {\if_true: 8\else: 6\fi:}15 } \test_compare:nnTF
    \NEWLINE
    \tl_sort:nN { {\if_false: 8\else: 6\fi:}15 } \test_compare:nnTF
    \NEWLINE
    \tl_sort:nN { 8{+2}3461{-0}2{00}3748 } \test_compare:nnTF
    \NEWLINE
    \exp_args:Nf \tl_sort:nN
      { \prg_replicate:nn { 10 } { 8{+2}3461{-0}2{00}3748 } }
      \test_compare:nnTF
  }

\OMIT
\prg_set_conditional:Npnn \test_compare:nn #1#2 { TF }
  {
    \if_int_compare:w \__str_if_eq:nn {#1} {#2} > \c_zero_int
      \prg_return_false:
    \else:
      \prg_return_true:
    \fi:
  }
\cs_set:Npn \test:n #1 { { \int_to_roman:n {#1} } }
\tl_set:Nx \l_tmpa_tl { \int_step_function:nnnN { 5 } { 3 } { 432 } \test:n }
\TIMO

\TESTEXP { More~expandable~sorting }
  {
    \exp_args:No \tl_sort:nN \l_tmpa_tl \test_compare:nnTF
  }

\OMIT
\prg_set_conditional:Npnn \test_compare:nn #1#2 { TF }
  {
    \if_int_compare:w 
        \__str_if_eq:nn { \tl_to_str:n {#1} } { \tl_to_str:n {#2} }
        > 0 \exp_stop_f:
      \prg_return_false:
    \else:
      \prg_return_true:
    \fi:
  }
\TIMO

\TESTEXP { Sorting~unbalanced~conditionals }
  {
    \tl_sort:nN { \if_true: \if_false: \else: \fi: } \test_compare:nnTF
  }

\OMIT
\box_new:N \l_test_box
\TIMO

\TEST { halign~robust }
  {
    \vbox_set:Nn \l_test_box
      {
        \tex_halign:D { \TYPE{0} # \TYPE{1} & # \ERROR \tex_cr:D
          \exp_after:wN \use_none:nnnn
          \exp:w \exp_end_continue_f:w
          \tl_sort:nN { & & \tex_cr:D \tex_cr:D } \test_compare:nnTF
          \tex_cr:D }
      }
  }

\OMIT
\prg_set_conditional:Npnn \test_compare:nn #1#2 { TF }
  {
    \int_compare:nNnTF {#1} > {#2}
      { \prg_return_false: } { \prg_return_true: }
  }
\clist_new:N \l_test_many_clist
\clist_new:N \l_test_I_clist
\clist_new:N \l_test_II_clist
\clist_new:N \l_test_III_clist
\clist_new:N \l_test_IV_clist
\clist_set:Nn \l_test_I_clist { \ZERO }
\clist_set:Nn \l_test_II_clist { 1,\ZERO }
\clist_set:Nn \l_test_III_clist { 1,\ZERO,2 }
\clist_set:Nn \l_test_IV_clist { 1,\ZERO,3,2 }
\clist_set:Nn \l_test_many_clist { 5,1,7,8,10,{1~} }
\cs_new:Npn \ZERO { 0 }
\TIMO

\TESTEXP { clist~sort }
  {
    |
    \clist_sort:nN { } \ERROR
    \clist_sort:nN { , } \ERROR
    \clist_sort:nN { ,~, } \ERROR
    \clist_sort:NN \c_empty_clist \ERROR
    |
    \NEWLINE
    \clist_sort:nN { ,~,\ZERO,~, } \ERROR
    \NEWLINE
    \clist_sort:nN { 1, \ZERO } \test_compare:nnTF
    \NEWLINE
    \clist_sort:nN { 1, \ZERO, 2 } \test_compare:nnTF
    \NEWLINE
    \clist_sort:nN { 1, \ZERO, 3, 2 } \test_compare:nnTF
    \NEWLINE
    \clist_sort:nN { ,~,1,,~5,8~,~7~,~{10}~,{1~} } \test_compare:nnTF
    \NEWLINE
    \clist_sort:NN \l_test_I_clist \ERROR
    \NEWLINE
    \clist_sort:NN \l_test_II_clist \test_compare:nnTF
    \NEWLINE
    \clist_sort:NN \l_test_III_clist \test_compare:nnTF
    \NEWLINE
    \clist_sort:NN \l_test_IV_clist \test_compare:nnTF
    \NEWLINE
    \clist_sort:NN \l_test_many_clist \test_compare:nnTF
  }

\END
