This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Bruno Le Floch
============================================================
TEST 1: new_linked
============================================================
Defining \l_a_prop on line ...
Defining \g_b_prop on line ...
The linked property list \l_a_prop is empty
> .
The linked property list \g_b_prop is empty
> .
============================================================
============================================================
TEST 2: clear
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test l\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test g\par }.
The linked property list \l_a_prop is empty
> .
The linked property list \g_b_prop is empty
> .
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test l\par }.
The linked property list \g_b_prop is empty
> .
============================================================
============================================================
TEST 3: clear_new_linked
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test l\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test g\par }.
Defining \l_cc_prop on line ...
Defining \g_dd_prop on line ...
The linked property list \l_a_prop is empty
> .
The linked property list \g_b_prop is empty
> .
The linked property list \l_cc_prop is empty
> .
The linked property list \g_dd_prop is empty
> .
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmp}  =>  {test l\par }.
The linked property list \g_b_prop is empty
> .
The linked property list \l_cc_prop is empty
> .
The linked property list \g_dd_prop contains the pairs (without outer braces):
>  {}  =>  {dd}.
============================================================
============================================================
TEST 4: set_eq
============================================================
The linked property list \l_a_prop is empty
> .
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \g_d_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \l_a_prop is empty
> .
The linked property list \g_d_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
============================================================
============================================================
TEST 5: put
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {test empty\par }
>  {tmp}  =>  {test l\par }
>  {tmp\par }  =>  {test l}.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {test empty\par }
>  {tmp}  =>  {test g\par }
>  {tmp\par }  =>  {test g}.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {test empty\par }
>  {tmp}  =>  {test l csname\par }
>  {tmp\par }  =>  {test l}.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {test empty\par }
>  {tmp}  =>  {test g\par }
>  {tmp\par }  =>  {test g}.
The linked property list \l_a_prop is empty
> .
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {test empty\par }
>  {tmp}  =>  {test g\par }
>  {tmp\par }  =>  {test g}.
============================================================
============================================================
TEST 6: put_if_new
============================================================
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {test}  =>  {test a\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test a\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test b\par }
>  {test d}  =>  {test d\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {test}  =>  {test a\par }.
============================================================
============================================================
TEST 7: get
============================================================
macro:->##test a\par 
macro:->
macro:->##test empty\par 
============================================================
============================================================
TEST 8: pop
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {##test empty\par }
>  {tmpa}  =>  {##test a\par }
>  {tmpb}  =>  {##test b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {##test empty\par }
>  {tmpa}  =>  {##test a\par }
>  {tmpb}  =>  {##test b\par }.
macro:->##test a\par 
macro:->##test a\par 
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {##test empty\par }
>  {tmpa}  =>  {##test a\par }
>  {tmpb}  =>  {##test b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {##test empty\par }
>  {tmpb}  =>  {##test b\par }.
============================================================
============================================================
TEST 9: remove
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmpa}  =>  {##test l a\par }
>  {tmpb}  =>  {##test l b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmpa}  =>  {##test g a\par }
>  {tmpb}  =>  {##test g b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmpb}  =>  {##test l b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmpb}  =>  {##test g b\par }.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {tmpa}  =>  {##test l a\par }
>  {tmpb}  =>  {##test l b\par }.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmpb}  =>  {##test g b\par }.
============================================================
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {tmpb}  =>  {##test g b\par }.
============================================================
============================================================
TEST 10: if_empty (expect T/F/F)
============================================================
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 11: if_in (expect T/T/T/F/F)
============================================================
TRUE
TRUE
TRUE
FALSE
FALSE
============================================================
TRUE
TRUE
TRUE
FALSE
FALSE
============================================================
TRUE
TRUE
TRUE
FALSE
FALSE
============================================================
TRUE
TRUE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 12: map_function
============================================================
>---##test\par <
>a---##testa\par <
>\q_recursion_tail ---?<
>b---##testb\par <
============================================================
============================================================
TEST 13: map_function (EXP)
============================================================
>a---testa<
>\q_recursion_tail ---?<
>b---testb<
============================================================
============================================================
TEST 14: map_inline
============================================================
>---##test\par <
>a---##testa\par <
>\q_recursion_tail ---?<
>b---##testb\par <
============================================================
============================================================
TEST 15: map_break
============================================================
>---##test\par <
>a---##testa\par <
>\q_recursion_tail ---?<
>b---##testb\par <
>---##test\par <
>a---##testa\par <
>\q_recursion_tail ---?<
##testb\par 
============================================================
============================================================
TEST 16: map_tokens
============================================================
>---##test\par <
>aa---##testa\par <
>\q_recursion_tail ---?<
>bb---##testb\par <
>cc---##testc\par <
>dd---##testd\par <
============================================================
============================================================
TEST 17: item
============================================================
|##testa\par |
|##testb\par |
||
============================================================
============================================================
TEST 18: count
============================================================
6|0
============================================================
============================================================
TEST 19: prop_if_exist
============================================================
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 20: prop_get:NnNTF
============================================================
TRUE: macro:->3
FALSE: macro:->3
TRUE: macro:->a
TRUE: macro:->3
macro:->
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {a}
>  {a}  =>  {aa}
>  {aa}  =>  {aaa}
>  {1}  =>  {2}
>  {2}  =>  {3}.
============================================================
============================================================
TEST 21: prop_pop:NnNTF
============================================================
TRUE: macro:->3
FALSE: macro:->3
TRUE: macro:->a
FALSE: macro:->a
macro:->
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {}  =>  {a}
>  {a}  =>  {aa}
>  {aa}  =>  {aaa}
>  {1}  =>  {2}
>  {2}  =>  {3}.
============================================================
============================================================
TEST 22: prop_gpop:NnNTF
============================================================
TRUE: macro:->3
FALSE: macro:->3
TRUE: macro:->a
FALSE: macro:->a
macro:->
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {a}  =>  {aa}
>  {aa}  =>  {aaa}
>  {1}  =>  {2}.
============================================================
============================================================
TEST 23: prop from_keyval
============================================================
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {\a }  =>  {b}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {\a }  =>  {b}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
Defining \c_A_prop on line ...
The linked property list \c_A_prop contains the pairs (without outer braces):
>  {\a }  =>  {Z}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
============================================================
============================================================
TEST 24: prop from_keyval invalid
============================================================
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The linked property list \l_a_prop is empty
> .
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The linked property list \g_b_prop is empty
> .
Defining \c_B_prop on line ...
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The linked property list \c_B_prop is empty
> .
============================================================
============================================================
TEST 25: prop_concat
============================================================
TRUE
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {x}  =>  {y}
>  {\a }  =>  {c}
>  {\c }  =>  { \D =E }
>  {}  =>  {?}
>  {=}  =>  {}.
The property list \l_tmpa_prop contains the pairs (without outer braces):
>  {x}  =>  {y}
>  {\a }  =>  {c}
>  {\c }  =>  { \D =E }
>  {}  =>  {?}
>  {=}  =>  {}.
The property list \l_tmpb_prop contains the pairs (without outer braces):
>  {x}  =>  {Z}
>  {\a }  =>  {Z}
>  {\c }  =>  { \D =E }
>  {}  =>  {?}
>  {=}  =>  {}.
The linked property list \l_a_prop contains the pairs (without outer braces):
>  {x}  =>  {Z}
>  {\a }  =>  {Z}
>  {\c }  =>  { \D =E }
>  {}  =>  {?}
>  {=}  =>  {}.
============================================================
============================================================
TEST 26: prop_put_from_keyval
============================================================
TRUE
The linked property list \g_b_prop contains the pairs (without outer braces):
>  {}  =>  {}
>  {\a }  =>  {c}
>  {\c }  =>  {=}
>  { \a }  =>  {c}.
The linked property list \l_a_prop is empty
> .
============================================================
============================================================
TEST 27: prop to keyval expansion
============================================================
The token list contains the tokens:
>    (blank space  )
>  { (begin-group character {)
>  a (the character a)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  b (the character b)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character })
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  c (the character c)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  # (macro parameter character #)
>  1 (the character 1)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  d (the character d)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  , (the character ,)
>  b (the letter b)
>  , (the character ,)
>  c (the letter c)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  e (the character e)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  = (the character =)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  f (the character f)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \tex_cr:D (control sequence=\cr)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  & (the character &)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  & (alignment tab character &)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>    (blank space  )
>  { (begin-group character {)
>  a (the character a)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  b (the character b)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character })
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  c (the character c)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  # (macro parameter character #)
>  1 (the character 1)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  d (the character d)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  , (the character ,)
>  b (the letter b)
>  , (the character ,)
>  c (the letter c)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  e (the character e)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  = (the character =)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  f (the character f)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \tex_cr:D (control sequence=\cr)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  & (the character &)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  & (alignment tab character &)
>  } (end-group character }).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 28: prop to keyval in halign
============================================================
0
1
============================================================
