This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Will Robertson
Defining \l_ii_tl on line ...
============================================================
TEST 1: to_str
============================================================
abc
\ERROR 
##
============================================================
============================================================
TEST 2: str_if_eq
============================================================
TRUE
TRUE
TRUE
FALSE
TRUE
TRUE
============================================================
TRUE
TRUE
TRUE
TRUE
TRUE
============================================================
FALSE
============================================================
FALSE
FALSE
FALSE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 3: str_if_eq variants
============================================================
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 4: if_empty (expect T/F/F repeated)
============================================================
\c_true_bool  \c_false_bool  \c_false_bool 
TRUE
FALSE
FALSE
\c_true_bool  \c_false_bool  \c_false_bool 
TRUE
FALSE
FALSE
\c_true_bool  \c_false_bool  \c_false_bool 
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 5: if_blank (expect T/T/F repeated)
============================================================
\c_true_bool  \c_true_bool  \c_false_bool 
TRUE
TRUE
FALSE
\c_true_bool  \c_true_bool  \c_false_bool 
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 6: if_in
============================================================
TRUE
TRUE
============================================================
TRUE
============================================================
============================================================
TEST 7: Reversing (TLIST)
============================================================
cba {abc} cba
cba {abc} cba
============================================================
============================================================
TEST 8: count
============================================================
9
8
9
9
8
9
============================================================
============================================================
TEST 9: to_lowercase/uppercase
============================================================
abc
a{b}c
ABC
A{B}C
============================================================
============================================================
TEST 10: Token list heads and tails
============================================================
a
a
a
##
a
a
bc
bc
 bc
##abc
bcxyz
bcxyz
============================================================
============================================================
TEST 11: Token list heads and tails with par tokens
============================================================
macro:->a
macro:->ab
============================================================
============================================================
TEST 12: map_function
============================================================
[a] [b] [c] [{A}B] [C] [a] [b] [c] [{A}B] [C] 
============================================================
============================================================
TEST 13: map_inline
============================================================
[a]
[b]
[c]
[{A}B]
[C]
============================================================
============================================================
TEST 14: map_variable
============================================================
[a] 
[b] 
[c{A}B] 
[C] 
============================================================
============================================================
TEST 15: map_break inline/variable
============================================================
[a]
[b]
============================================================
[a]
[b]
============================================================
============================================================
TEST 16: map_break function
============================================================
[a][b]
============================================================
============================================================
TEST 17: head_eq_meaning
============================================================
\c_true_bool 
TRUE
FALSE
TRUE
TRUE
TRUE
============================================================
============================================================
TEST 18: head_eq_charcode:nN
============================================================
\c_true_bool 
TRUE
TRUE
FALSE
TRUE
TRUE
TRUE
============================================================
============================================================
TEST 19: head_eq_charcode:fN
============================================================
\c_true_bool 
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 20: head_eq_catcode
============================================================
\c_true_bool 
TRUE
FALSE
TRUE
TRUE
TRUE
============================================================
