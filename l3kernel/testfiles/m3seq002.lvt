%
% Copyright (C) 2008-2012,2014,2015,2018-2021 The LaTeX Project
%
\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}
\START
\AUTHOR{Will Robertson}
\ExplSyntaxOn

\tl_clear:N \l_tmpa_tl
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{creation}{
  {
    \seq_new:N \l_a_seq
    \seq_new:N \g_b_seq
    \cs_if_eq:NNTF \l_a_seq \c_empty_seq { \TRUE } { \ERROR }
    \cs_if_eq:NNTF \g_b_seq \c_empty_seq { \TRUE } { \ERROR }
  }
  \TYPE { \cs_meaning:N \l_a_seq }
  \TYPE { \cs_meaning:N \g_b_seq }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{clearing}{
  \seq_put_left:Nn \l_a_seq { test~ a }
  \seq_gput_left:Nn \g_b_seq { test~ b }
  {
    \seq_clear:N \l_a_seq
    \seq_gclear:N \g_b_seq
    \TYPE { \cs_meaning:N \l_a_seq }
  }
  \TYPE { \cs_meaning:N \l_a_seq }
  \TYPE { \cs_meaning:N \g_b_seq }
  \SEPARATOR
  {
    \TYPE { \cs_meaning:N \l_undefined_seq }
    \TYPE { \cs_meaning:N \g_undefined_seq }
    \seq_clear:N \l_undefined_seq
    \seq_gclear:N \g_undefined_seq
    \TYPE { \cs_meaning:N \l_undefined_seq }
    \TYPE { \cs_meaning:N \g_undefined_seq }
  }
  \TYPE { \cs_meaning:N \l_undefined_seq }
  \TYPE { \cs_meaning:N \g_undefined_seq }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{clear_new}{
  \seq_put_left:Nn \l_a_seq { test~ a }
  \seq_gput_left:Nn \g_b_seq { test~ b }
  {
    \seq_clear_new:N  \l_a_seq
    \seq_clear_new:N  \l_c_seq % previously undefined
    \seq_gclear_new:N \g_b_seq
    \seq_gclear_new:N \g_d_seq % previously undefined
    \TYPE { \cs_meaning:N \l_a_seq }
    \TYPE { \cs_meaning:N \l_c_seq }
  }
  \TYPE { \cs_meaning:N \l_a_seq }
  \TYPE { \cs_meaning:N \l_c_seq }% STILL UNDEFINED?!
  \TYPE { \cs_meaning:N \g_b_seq }
  \TYPE { \cs_meaning:N \g_d_seq }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{(g)set_eq}{
  \seq_clear:N \l_tmpa_seq
  \seq_clear:N \l_a_seq
  \seq_put_left:Nn \l_tmpa_seq { abc }
  {
    \seq_set_eq:NN  \l_a_seq  \l_tmpa_seq
    \seq_set_eq:NN  \l_e_seq  \l_tmpa_seq % previously undefined
    \seq_gset_eq:NN \g_b_seq  \l_tmpa_seq
    \seq_gset_eq:NN \g_f_seq  \l_tmpa_seq % previously undefined
    \TYPE{ \cs_meaning:N \l_tmpa_seq }
    \TYPE{ \cs_meaning:N \l_e_seq    }
    \TYPE{ \cs_meaning:N \l_a_seq    }
    \SEPARATOR
  }
  \TYPE{ \cs_meaning:N \l_tmpa_seq }
  \TYPE{ \cs_meaning:N \l_e_seq    }
  \TYPE{ \cs_meaning:N \l_a_seq    }
  \SEPARATOR
  \TYPE{ \cs_meaning:N \l_tmpa_seq }
  \TYPE{ \cs_meaning:N \g_f_seq    }
  \TYPE{ \cs_meaning:N \g_b_seq    }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{gconcat}{
  {
    \seq_clear:N     \l_tmpa_seq
    \seq_put_left:Nn \l_tmpa_seq {def}
    \seq_put_left:Nn \l_tmpa_seq {abc}
    \seq_put_left:Nn \l_a_seq    {xyz}
    \seq_put_left:Nn \l_a_seq    {uvw}
    \seq_gconcat:NNN \g_b_seq \l_tmpa_seq \l_a_seq
  }
  \seq_log:N \g_b_seq
  \SEPARATOR
  \seq_gclear:c {g_b_seq}
  \seq_clear:c {l_tmpa_seq}
  \seq_clear:c {l_a_seq}
  {
    \seq_put_left:cn {l_tmpa_seq} {DEF}
    \seq_put_left:cn {l_tmpa_seq} {ABC}
    \seq_put_left:cn {l_a_seq}    {XYZ}
    \seq_put_left:cn {l_a_seq}    {UVW}
    \seq_gconcat:ccc  {g_b_seq} {l_tmpa_seq} {l_a_seq}
  }
  \seq_log:N \g_b_seq
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_new:N \l_tmpc_tl
\TIMO

\TEST{put~left}{
  \seq_clear:N \l_tmpa_seq
  \tl_set:Nn  \l_tmpa_tl { \l_tmpb_tl }
  \tl_set:Nn  \l_tmpb_tl { \l_tmpc_tl }
  \tl_set:Nn  \l_tmpc_tl { FULL~EXPANSION }
  \seq_put_left:Nn \l_tmpa_seq  { \ERROR A    \par }
  \seq_put_left:No \l_tmpa_seq  { \l_tmpa_tl \par }
  \seq_put_left:Nx \l_tmpa_seq  { \l_tmpa_tl \par }
  \seq_put_left:cn {l_tmpa_seq} { \ERROR B    \par }
  \seq_put_left:co {l_tmpa_seq} { \l_tmpb_tl \par }
  \seq_log:N \l_tmpa_seq
}

\TEST{put~right}{
  \seq_clear:N \l_tmpa_seq
  \tl_set:Nn  \l_tmpa_tl { \l_tmpb_tl }
  \tl_set:Nn  \l_tmpb_tl { \l_tmpc_tl }
  \tl_set:Nn  \l_tmpc_tl { FULL~EXPANSION }
  \seq_put_right:Nn \l_tmpa_seq  { \ERROR A    \par }
  \seq_put_right:No \l_tmpa_seq  { \l_tmpa_tl \par }
  \seq_put_right:Nx \l_tmpa_seq  { \l_tmpa_tl \par }
  \seq_put_right:cn {l_tmpa_seq} { \ERROR B    \par }
  \seq_put_right:co {l_tmpa_seq} { \l_tmpb_tl \par }
  \seq_log:N \l_tmpa_seq
}

\TEST{gput~left}{
  \seq_gclear:N \g_b_seq
  \tl_set:Nn  \l_tmpa_tl { \l_tmpb_tl }
  \tl_set:Nn  \l_tmpb_tl { \l_tmpc_tl }
  \tl_set:Nn  \l_tmpc_tl { FULL~EXPANSION }
  {
    \seq_gput_left:Nn \g_b_seq  { \ERROR A    \par }
    \seq_gput_left:No \g_b_seq  { \l_tmpa_tl \par }
    \seq_gput_left:Nx \g_b_seq  { \l_tmpa_tl \par }
    \seq_gput_left:cn {g_b_seq} { \ERROR B    \par }
    \seq_gput_left:co {g_b_seq} { \l_tmpb_tl \par }
  }
  \seq_log:N \g_b_seq
}

\TEST{gput~right}{
  \seq_gclear:N \g_b_seq
  \tl_set:Nn  \l_tmpa_tl { \l_tmpb_tl }
  \tl_set:Nn  \l_tmpb_tl { \l_tmpc_tl }
  \tl_set:Nn  \l_tmpc_tl { FULL~EXPANSION }
  {
    \seq_gput_right:Nn \g_b_seq  { \ERROR A    \par }
    \seq_gput_right:No \g_b_seq  { \l_tmpa_tl \par }
    \seq_gput_right:Nx \g_b_seq  { \l_tmpa_tl \par }
    \seq_gput_right:cn {g_b_seq} { \ERROR B    \par }
    \seq_gput_right:co {g_b_seq} { \l_tmpb_tl \par }
  }
  \seq_log:N \g_b_seq
}

%% Probably to be removed:
% \seq_gput_right:Nc

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{seq_if_empty~(expect~Y/N/N)}{
  \seq_clear:N      \l_tmpa_seq
  \seq_if_empty:NTF \l_tmpa_seq {\YES}{\NO}
  \seq_put_left:Nn  \l_tmpa_seq {}
  \seq_if_empty:NTF \l_tmpa_seq {\YES}{\NO}
  \seq_clear:N      \l_tmpa_seq
  \seq_put_left:Nn  \l_tmpa_seq {x}
  \seq_if_empty:NTF \l_tmpa_seq {\YES}{\NO}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{seq_get}{
  \seq_clear:N     \l_tmpa_seq

  \seq_get:NN      \l_tmpa_seq \l_tmpa_tl
  \tl_log:N \l_tmpa_tl

  \seq_put_left:Nn \l_tmpa_seq {}
  \seq_get:NN      \l_tmpa_seq \l_tmpa_tl
  \tl_log:N \l_tmpa_tl

  \seq_put_left:Nn \l_tmpa_seq {a\par}
  {
    \seq_get:NN    \l_tmpa_seq \l_tmpa_tl
    \tl_log:N \l_tmpa_tl
  }
  \tl_log:N \l_tmpa_tl

  \seq_put_left:Nn \l_tmpa_seq {b\par}
  \seq_get:NN      \l_tmpa_seq \l_tmpa_tl
  \tl_log:N \l_tmpa_tl
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{push~(same~as~put_left)}{
  \seq_clear:N \l_tmpa_seq
  \tl_set:Nn  \l_tmpa_tl { \ERROR B }
  \seq_push:Nn \l_tmpa_seq  { \ERROR A    \par }
  \seq_push:No \l_tmpa_seq  { \l_tmpa_tl \par }
  \seq_push:cn {l_tmpa_seq} { \ERROR C    \par }
  \seq_log:N \l_tmpa_seq
}

\TEST{gpush~(same~as~gput_left)}{
  \seq_gclear:N \g_b_seq
  \tl_set:Nn  \l_tmpa_tl { \ERROR B }
  {
    \seq_gpush:Nn \g_b_seq  { \ERROR A    \par }
    \seq_gpush:No \g_b_seq  { \l_tmpa_tl \par }
    \seq_gpush:cn {g_b_seq} { \ERROR C    \par }
    \seq_gpush:Nv \g_b_seq  { l_tmpa_tl }
  }
  \seq_log:N \g_b_seq
}

\TEST{top~(same~as~get)}{
  \seq_clear:N     \l_tmpa_seq
  %% Function deprecated.
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\seq_clear:N \l_tmpa_seq
\seq_push:Nn \l_tmpa_seq {a\par}
\seq_push:Nn \l_tmpa_seq {b\par}
\seq_push:Nn \l_tmpa_seq {ZZZ}
\seq_push:Nn \l_tmpa_seq {}
\seq_push:Nn \l_tmpa_seq {~}
\seq_push:Nn \l_tmpa_seq {\par}
\seq_push:Nn \l_tmpa_seq {\ERROR}

\TEST{if_in~(expect~2~first~false)}{
  \seq_if_in:NnTF \l_tmpa_seq {a}      {\ERROR} {\FALSE}
  \seq_if_in:NnTF \l_tmpa_seq {ZZ}     {\ERROR} {\FALSE}
  \seq_if_in:NnTF \l_tmpa_seq {a\par}  {\TRUE}  {\ERROR}
  \seq_if_in:NnTF \l_tmpa_seq {}       {\TRUE}  {\ERROR}
  \seq_if_in:NnTF \l_tmpa_seq {~}      {\TRUE}  {\ERROR}
  \seq_if_in:NnTF \l_tmpa_seq {\par}   {\TRUE}  {\ERROR}
  \seq_if_in:NnTF \l_tmpa_seq {\ERROR} {\TRUE}  {\ERROR}
}

\TEST{if_in~(T)}{
  \seq_if_in:NnT \l_tmpa_seq {a\par}  {\TRUE}
  \seq_if_in:NnT \l_tmpa_seq {}       {\TRUE}
  \seq_if_in:NnT \l_tmpa_seq {~}      {\TRUE}
  \seq_if_in:NnT \l_tmpa_seq {\par}   {\TRUE}
  \seq_if_in:NnT \l_tmpa_seq {\ERROR} {\TRUE}
}

\TEST{if_in~(F)}{
  \seq_if_in:NnF \l_tmpa_seq {a}     {\FALSE}
  \seq_if_in:NnF \l_tmpa_seq {ZZ}    {\FALSE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\seq_clear:N \l_tmpa_seq
\seq_push:Nn \l_tmpa_seq {a}
\seq_push:Nn \l_tmpa_seq {b\par}
\seq_push:Nn \l_tmpa_seq {c}

\TEST{map_inline}{
  \seq_map_inline:Nn \l_tmpa_seq  { \exp_args:No \TYPE {\tl_to_str:n{#1}} }
  \seq_map_inline:cn {l_tmpa_seq} { \exp_args:No \TYPE {\tl_to_str:n{#1}} }
}

\TEST{map}{
  \cs_set:Npn \MAP:n #1 { \exp_args:No \TYPE {\tl_to_str:n{#1}} }
  \seq_map_function:NN \l_tmpa_seq  \MAP:n
  \seq_map_function:cN {l_tmpa_seq} \MAP:n
}

\TEST{map_variable}{
  \seq_map_variable:NNn \l_tmpa_seq  \l_tmpa_tl {
    \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  }
  \TYPE { Final:~ [\tl_to_str:N \l_tmpa_tl] }
  \seq_map_variable:cNn {l_tmpa_seq} \l_tmpa_tl {
    \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  }
  \seq_map_variable:NNn \c_empty_seq \l_tmpa_tl { \ERROR }
  \TYPE { Final:~ [\tl_to_str:N \l_tmpa_tl] }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{pop}{
  \seq_pop:NN \l_tmpa_seq \l_tmpa_tl
  \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  \seq_log:N \l_tmpa_seq

  \seq_pop:NN \l_tmpa_seq \l_tmpa_tl
  \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  \seq_log:N \l_tmpa_seq

  \seq_pop:NN \l_tmpa_seq \l_tmpa_tl
  \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  \seq_log:N \l_tmpa_seq

  \SEPARATOR
  \seq_pop:NN \l_tmpa_seq \l_tmpa_tl
  \exp_args:No \TYPE { \tl_to_str:N \l_tmpa_tl }
  \seq_log:N \l_tmpa_seq
}
\seq_gset_eq:NN \g_tmpb_seq \l_tmpa_seq
\TEST{gpop}{
  {
    \seq_gpop:NN \g_tmpb_seq \l_tmpa_tl
    \TYPE { local->\tl_to_str:N \l_tmpa_tl .}
  }
  \TYPE { global->\tl_to_str:N \l_tmpa_tl .}
  \seq_log:N \g_tmpb_seq

  {
    \seq_gpop:NN \g_tmpb_seq \l_tmpa_tl
    \TYPE { local->\tl_to_str:N \l_tmpa_tl .}
  }
  \TYPE { global->\tl_to_str:N \l_tmpa_tl .}
  \seq_log:N \g_tmpb_seq

  {
    \seq_gpop:NN \g_tmpb_seq \l_tmpa_tl
    \TYPE { local->\tl_to_str:N \l_tmpa_tl .}
  }
  \TYPE { global->\tl_to_str:N \l_tmpa_tl .}
  \seq_log:N \g_tmpb_seq

  \SEPARATOR
  {
    \seq_gpop:NN \g_tmpb_seq \l_tmpa_tl
    \TYPE { local->\tl_to_str:N \l_tmpa_tl .}
  }
  \TYPE { global->\tl_to_str:N \l_tmpa_tl .}
  \seq_log:N \g_tmpb_seq
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\END

