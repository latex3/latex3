%
% Copyright (C) 2009-2012 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}


\RequirePackage[check-declarations,log-functions]{expl3}


\begin{document}
\START
\AUTHOR{Will Robertson \& Joseph Wright}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{new}{
  { \OMIT
    \prop_new:N \l_a_prop
    \prop_new:c {g_b_prop}
    \TIMO
  }
  \prop_show:N \l_a_prop
  \prop_show:c {g_b_prop}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{clear}{
  \prop_put:Nnn \l_a_prop {tmp} { test~l \par }
  \prop_put:Nnn \g_b_prop {tmp} { test~g \par }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
  {
    \prop_clear:N  \l_a_prop
    \prop_gclear:N \g_b_prop
    \prop_show:N \l_a_prop
    \prop_show:N \g_b_prop
  }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{put}{
  \prop_clear:N  \l_a_prop
  \prop_gclear:N \g_b_prop
  {
    \prop_put:Nnn  \l_a_prop { } { test~empty\par }
    \prop_gput:Nnn \g_b_prop { } { test~empty\par }
    \prop_put:Nnn  \l_a_prop {tmp} { test~l \par }
    \prop_gput:Nnn \g_b_prop {tmp} { test~g \par }
    \prop_put:Nnn  \l_a_prop {tmp\par} { test~l }
    \prop_gput:Nnn \g_b_prop {tmp\par} { test~g }
    \prop_show:N \l_a_prop
    \prop_show:N \g_b_prop
    \prop_put:cnn  {l_a_prop} {tmp} { test~l~csname \par }
    \prop_show:N \l_a_prop
    \prop_show:N \g_b_prop
  }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{put_if_new}{
  \prop_gclear:N \g_b_prop
  \prop_gput_if_new:Nnn \g_b_prop { test } { test~a \par }
  \prop_show:N \g_b_prop
  \prop_gput:Nnn        \g_b_prop { test } { test~b \par }
  \prop_show:N \g_b_prop
  \prop_gput_if_new:Nnn \g_b_prop { test } { test~c \par }
  \prop_show:N \g_b_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\prop_new:N \g_d_prop

\TEST{set_eq}{
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
  {
    \prop_set_eq:NN  \l_a_prop \g_b_prop
    \prop_show:N \l_a_prop
    \prop_gset_eq:NN \g_d_prop \g_b_prop
    \prop_show:N \g_d_prop
  }
  \prop_show:N \l_a_prop
  \prop_show:N \g_d_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\tl_clear:N \l_tmpa_tl \tl_clear:N \l_tmpb_tl
\TEST{get}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn  \l_a_prop {tmpa} { # test~a \par }
  {
    \prop_get:NnN  \l_a_prop {tmpa} \l_tmpa_tl
    \TYPE{ \meaning \l_tmpa_tl }
  }
  \TYPE{ \meaning \l_tmpa_tl }
  \prop_put:Nnn  \l_a_prop { } { # test~empty \par }
  \prop_get:NnN  \l_a_prop { } \l_tmpa_tl
  \TYPE{ \meaning \l_tmpa_tl }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tl_clear:N \l_tmpa_tl

\TEST{pop}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn  \l_a_prop { } { # test~empty \par }
  \prop_put:Nnn  \l_a_prop {tmpa} { # test~a \par }
  \prop_put:Nnn  \l_a_prop {tmpb} { # test~b \par }
  \prop_show:N \l_a_prop
  \prop_gclear:N  \g_b_prop
  \prop_gput:Nnn  \g_b_prop { } { # test~empty \par }
  \prop_gput:Nnn  \g_b_prop {tmpa} { # test~a \par }
  \prop_gput:Nnn  \g_b_prop {tmpb} { # test~b \par }
  \prop_show:N \g_b_prop
  {
    \prop_pop:NnN  \l_a_prop {tmpa} \l_tmpa_tl
    \TYPE{ \meaning \l_tmpa_tl }
    \prop_gpop:NnN  \g_b_prop {tmpa} \l_tmpa_tl
    \TYPE{ \meaning \l_tmpa_tl }
  }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{del}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn  \l_a_prop {tmpa} { # test~l~a \par }
  \prop_put:Nnn  \l_a_prop {tmpb} { # test~l~b \par }
  \prop_clear:N  \g_b_prop
  \prop_put:Nnn  \g_b_prop {tmpa} { # test~g~a \par }
  \prop_put:Nnn  \g_b_prop {tmpb} { # test~g~b \par }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
  {
    \prop_remove:Nn  \l_a_prop {tmpa}
    \prop_gremove:Nn \g_b_prop {tmpa}
    \prop_show:N \l_a_prop
    \prop_show:N \g_b_prop
  }
  \prop_show:N \l_a_prop
  \prop_show:N \g_b_prop
  \SEPARATOR
  \prop_gremove:Nn \g_b_prop {tmpa}
  \prop_gremove:Nn \g_b_prop {tmpa}
  \prop_gremove:Nn \g_b_prop {tmpa}
  \prop_show:N \g_b_prop
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{if_empty~(expect~T/F/F)}{
  \prop_clear:N  \l_a_prop
  \prop_if_empty:NTF \l_a_prop {\TRUE} {\ERROR}
  \prop_put:Nnn \l_a_prop {} {}
  \prop_if_empty:NTF \l_a_prop {\TRUE} {\FALSE}
  \prop_put:Nnn \l_a_prop {abc} {}
  \prop_if_empty:NTF \l_a_prop {\ERROR} {\FALSE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{if_in~(expect~T/T/T/F/F)}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn \l_a_prop { } {test}
  \prop_put:Nnn \l_a_prop {a} {testa}
  \prop_put:Nnn \l_a_prop {b} {testb}
  \prop_put:Nnn \l_a_prop {d} {test}
  \prop_if_in:NnTF \l_a_prop { }    {\TRUE}  {\ERROR}
  \prop_if_in:NnTF \l_a_prop {a}    {\TRUE}  {\ERROR}
  \prop_if_in:NnTF \l_a_prop {b}    {\TRUE}  {\ERROR}
  \prop_if_in:NnTF \l_a_prop {c}    {\ERROR} {\FALSE}
  \prop_if_in:NnTF \l_a_prop {test} {\ERROR} {\FALSE}
  \SEPARATOR
  \cs_set_nopar:Npn \a {a}
  \cs_set_nopar:Npn \b {a}
  \cs_set_nopar:Npn \c {c}
  \cs_set_nopar:Npn \d {test}
  \prop_if_in:NVT \l_a_prop \c_empty_tl {\TRUE}
  \prop_if_in:NVT \l_a_prop \a {\TRUE}
  \prop_if_in:NVT \l_a_prop \b {\TRUE}
  \prop_if_in:NVF \l_a_prop \c {\FALSE}
  \prop_if_in:NVF \l_a_prop \d {\FALSE}
  \SEPARATOR
  \cs_set_nopar:Npn \a {a}
  \cs_set_nopar:Npn \b {a}
  \cs_set_nopar:Npn \c {c}
  \cs_set_nopar:Npn \d {test}
  \prop_if_in:NoT \l_a_prop \c_empty_tl {\TRUE}
  \prop_if_in:NoT \l_a_prop {\a} {\TRUE}
  \prop_if_in:NoT \l_a_prop {\b} {\TRUE}
  \prop_if_in:NoF \l_a_prop {\c} {\FALSE}
  \prop_if_in:NoF \l_a_prop {\d} {\FALSE}
  \SEPARATOR
  \prop_put:Nnn \l_a_prop { } {test}
  \prop_put:Nnn \l_a_prop {a} {testa}
  \prop_put:Nnn \l_a_prop {b} {testb}
  \prop_put:Nnn \l_a_prop {d} {test}
  \prop_if_in:cnTF {l_a_prop} { }    {\TRUE}  {\ERROR}
  \prop_if_in:cnTF {l_a_prop} {a}    {\TRUE}  {\ERROR}
  \prop_if_in:cnTF {l_a_prop} {b}    {\TRUE}  {\ERROR}
  \prop_if_in:cnTF {l_a_prop} {c}    {\ERROR} {\FALSE}
  \prop_if_in:cnTF {l_a_prop} {test} {\ERROR} {\FALSE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{map_function}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn \l_a_prop { } {#test \par}
  \prop_put:Nnn \l_a_prop {a} {#testa\par}
  \prop_put:Nnn \l_a_prop {b} {#testb\par}
  \cs_set:Npn \propmap #1#2 {
    \cs_set_nopar:Npx \tmp {>\detokenize{#1}---\detokenize{#2}<}
    \TYPE {\tmp}
  }
  \prop_map_function:NN \l_a_prop \propmap
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\prop_clear:N  \l_a_prop
\prop_put:Nnn \l_a_prop {a} {testa}
\prop_put:Nnn \l_a_prop {b} {testb}
\cs_set:Npn \propmap #1#2 {>#1---#2<\NEWLINE}

\TESTEXP{map_function~(EXP)}{
  \prop_map_function:NN \l_a_prop \propmap
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{map_inline}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn \l_a_prop { } {#test \par}
  \prop_put:Nnn \l_a_prop {a} {#testa\par}
  \prop_put:Nnn \l_a_prop {b} {#testb\par}
  \prop_map_inline:Nn \l_a_prop {
    \cs_set_nopar:Npx \tmp {>\detokenize{#1}---\detokenize{#2}<}
    \TYPE {\tmp}
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{map_break}{
  \prop_clear:N  \l_a_prop
  \prop_put:Nnn \l_a_prop { } {#test \par}
  \prop_put:Nnn \l_a_prop {a} {#testa\par}
  \prop_put:Nnn \l_a_prop {b} {#testb\par}
  \prop_put:Nnn \l_a_prop {c} {#testc\par}
  \prop_put:Nnn \l_a_prop {d} {#testd\par}
  \prop_map_inline:Nn \l_a_prop {
    \str_if_eq:nnTF {#1}{b} {
      \prop_map_break:
    } {
      \cs_set_nopar:Npx \tmp {>\detokenize{#1}---\detokenize{#2}<}
      \TYPE {\tmp}
    }
  }
}

\END

