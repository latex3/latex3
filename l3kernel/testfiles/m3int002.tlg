This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: LaTeX3 Project
============================================================
TEST 1: Comparing integer values as predicates
============================================================
FALSE
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 2: Comparing integer values
============================================================
FALSE
TRUE
TRUE
FALSE
TRUE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 3: Integer tests: if even as predicates
============================================================
FALSE
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 4: Integer tests: if even
============================================================
FALSE
TRUE
TRUE
FALSE
TRUE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 5: Integer tests: if odd as predicates
============================================================
TRUE
FALSE
FALSE
TRUE
============================================================
============================================================
TEST 6: Integer tests: if odd
============================================================
TRUE
FALSE
FALSE
TRUE
TRUE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 7: Integer while-do and do-while
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9]
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9]
============================================================
============================================================
[10]
============================================================
============================================================
TEST 8: Integer until-do and do-until
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9] [10]
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9] [10]
============================================================
[10]
============================================================
[10]
============================================================
============================================================
TEST 9: Evaluating integer expressions
============================================================
10
10
22
============================================================
============================================================
TEST 10: Absolute value for integers
============================================================
0
10
10
40
15
45
============================================================
============================================================
TEST 11: Integer division: truncation
============================================================
2
2
1
-2
-2
-1
-2
-2
-1
2
2
1
1
-1
0
1
2
-1
-2
-1
-2
1
2
============================================================
============================================================
TEST 12: Maximum and minimum integers
============================================================
11
7
-7
7
7
-7
1
7
-11
-11
7
-7
-7
-999
============================================================
============================================================
TEST 13: Integer division: modulo
============================================================
0
4
4
0
-4
-4
0
4
4
0
-4
-4
============================================================
============================================================
TEST 14: Integer creation
============================================================
Defining \l_A_int on line ...
\l_A_int=\count147
Defining \g_A_int on line ...
\g_A_int=\count148
\count147
\count148
Defining \l_B_int on line ...
\l_B_int=\count149
Defining \g_B_int on line ...
\g_B_int=\count150
\count149
\count150
\count149
\count150
============================================================
============================================================
TEST 15: Integer creation errors
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \l_A_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.309 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\l_A_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \count147
|...............................................
Defining \l_A_int on line ...
\l_A_int=\count151
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \g_A_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.309 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\g_A_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \count148
|...............................................
Defining \g_A_int on line ...
\g_A_int=\count152
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \l_B_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.309 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\l_B_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \count149
|...............................................
Defining \l_B_int on line ...
\l_B_int=\count153
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \g_B_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.309 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\g_B_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \count150
|...............................................
Defining \g_B_int on line ...
\g_B_int=\count154
============================================================
============================================================
TEST 16: Constant integer creation
============================================================
Defining \c_A_int on line ...
\mathchar"5
5
Defining \c_B_int on line ...
\c_B_int=\count155
\count155
-10
\count155
-10
============================================================
============================================================
TEST 17: Constant integer creation errors
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \c_A_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.331 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\c_A_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \mathchar"5
|...............................................
Defining \c_A_int on line ...
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \c_B_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.331 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\c_B_int' but this
| name has already been used elsewhere.
| 
| The current meaning is:
|   \count155
|...............................................
Defining \c_B_int on line ...
\c_B_int=\count156
============================================================
============================================================
TEST 18: Set integers equal
============================================================
4
0
4
0
4
0
4
0
============================================================
============================================================
TEST 19: Set integers equal globally
============================================================
4
4
4
4
4
4
4
4
============================================================
============================================================
TEST 20: Add to integers
============================================================
8
-2
0
8
-2
0
============================================================
============================================================
TEST 21: Add to integers globally
============================================================
8
-2
-2
6
-4
-4
============================================================
============================================================
TEST 22: Decreasing integers
============================================================
-1
-2
0
-1
-2
0
============================================================
============================================================
TEST 23: Decreasing integers globally
============================================================
-1
-2
-2
-3
-4
-4
============================================================
============================================================
TEST 24: Increasing integers
============================================================
1
2
0
1
2
0
============================================================
============================================================
TEST 25: Increasing integers globally
============================================================
1
2
2
3
4
4
============================================================
============================================================
TEST 26: Setting integers to arbitrary values
============================================================
0
2147483647
-2147483647
330
0
0
2147483647
-2147483647
330
0
============================================================
============================================================
TEST 27: Setting integers to arbitrary values globally
============================================================
0
2147483647
-2147483647
330
330
0
2147483647
-2147483647
330
330
============================================================
============================================================
TEST 28: Subtract from integers
============================================================
-8
2
0
-8
2
0
============================================================
============================================================
TEST 29: Subtract from integers globally
============================================================
-8
2
2
-6
4
4
============================================================
============================================================
TEST 30: Zeroing integers
============================================================
0
1234
0
1234
============================================================
============================================================
TEST 31: Zeroing integers globally
============================================================
0
0
0
0
============================================================
============================================================
TEST 32: Integer variable overflows
============================================================
-2147483648
2147483647
============================================================
============================================================
TEST 33: Showing integers
============================================================
> 123.
<argument> \l_A_int 
l.640 }
> 123.
<argument> \l_A_int 
l.640 }
> 369.
<recently read> }
l.640 }
============================================================
============================================================
TEST 34: Using integers
============================================================
123
678
============================================================
============================================================
TEST 35: Integer conversion to Arabic
============================================================
! Missing number, treated as zero.
<to be read again> 
                   a
l.662 }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
0
2
12
3
[0a\__int_eval_end: ]
============================================================
============================================================
TEST 36: Integer conversion to alph
============================================================
[]
b
l
cu
[]
fxshrxw
[]
B
L
CU
[]
FXSHRXW
============================================================
============================================================
TEST 37: Integer conversion to binary
============================================================
0
10
1100
1100011
-100
1111111111111111111111111111111
============================================================
============================================================
TEST 38: Integer conversion to hexadecimal
============================================================
0
2
C
63
-4
-63
7FFFFFFF
============================================================
============================================================
TEST 39: Integer conversion to octal
============================================================
0
2
14
143
-4
-143
17777777777
============================================================
============================================================
TEST 40: Integer conversion to Roman numerals
============================================================
[]
ii
xii
xcix
[]
[]
II
XII
XCIX
[]
============================================================
============================================================
TEST 41: Integers from alph
============================================================
26
731
26
731
731
============================================================
============================================================
TEST 42: Integers from binary
============================================================
21
31
-26
============================================================
============================================================
TEST 43: Integers from hexadecimal
============================================================
217059
16777215
74565
-53
============================================================
============================================================
TEST 44: Integers from octal
============================================================
227
5349
-29
============================================================
============================================================
TEST 45: Integers from Roman numerals
============================================================
1992
3391
4
17
============================================================
============================================================
TEST 46: Conversion of an integer to an arbitrary base
============================================================
234
121
-20
1A
============================================================
============================================================
TEST 47: Conversion of an integer from an arbitrary base
============================================================
66
81
-5
210
============================================================
============================================================
TEST 48: Public integer constants
============================================================
2147483647
============================================================
============================================================
TEST 49: Internal integer constants
============================================================
-1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
32
100
255
256
1000
10000
============================================================
============================================================
TEST 50: Integer while-do and do-while
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9]
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9]
============================================================
============================================================
[10]
============================================================
============================================================
TEST 51: Integer until-do and do-until
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9] [10]
============================================================
[0] [1] [2] [3] [4] [5] [6] [7] [8] [9] [10]
============================================================
[10]
============================================================
[10]
============================================================
