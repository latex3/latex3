%
% Copyright (C) 2020,2021 The LaTeX Project
%
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
  \tl_set:Nn \l_tmpa_tl { Hello }
  \tl_set:Nn \l_tmpb_tl { \l_tmpa_tl }
  \cs_set_protected:Npn \cs_tmp:w { \l_tmpa_tl }
\TIMO

\TESTEXP { Expanding~content }
  {
    \text_expand:n { Some~text~\l_tmpa_tl }
    \NEWLINE
    \text_expand:n { \l_tmpa_tl \c_space_tl some text }
    \NEWLINE
    \text_expand:n { Some~text~\l_tmpb_tl }
    \NEWLINE
    \text_expand:n { \l_tmpb_tl \c_space_tl some text }
    \NEWLINE
    \text_expand:n { Some~text~\cs_tmp:w }
    \NEWLINE
    \text_expand:n { \cs_tmp:w \c_space_tl some text }
  }

\TESTEXP { Expansion~in~braces }
  {
    \text_expand:n { { \l_tmpa_tl }~world~\par with~\ERROR & # }
  }

\TESTEXP { Math-mode~escape }
  {
    \text_expand:n { Some~text~$y~=~\sin \theta$ }
    \NEWLINE
    \text_expand:n { Opps~not~close~token~in~$y~=~\sin \theta }
    % $ % make some code-highlighters happy
  }

\TESTEXP { Letter-like~commands }
  {
    \text_expand:n { \AA \aa \J \ae \dh \ss \l \O }
  }

\TESTEXP { Accents }
  {
    \text_expand:n { \"{a} \u{e} \H{i} \v{o} \.{u} }
  }

\OMIT
\tex_let:D \AAA = A
\tex_chardef:D \BBB = `B
\tex_mathchardef:D \CCC = `C
\use:n { \tex_let:D \SPACEA = ~ } ~ %
\tex_chardef:D \SPACEB = `\  %
\tex_mathchardef:D \SPACEC = `\  %
\TIMO

\TESTEXP { Implicit~tokens }
  {
    \text_expand:n { " \AAA " \BBB " \CCC " \SPACEA " \SPACEB " \SPACEC " }
  }

\TEST { Expansion~exclusions }
  {
    \cs_generate_variant:Nn \tl_show:n { x }
    \tl_show:x
      { \text_expand:n { \tl_map_tokens:nn { { abc} {def } } { tokens } } }
    \tl_put_right:Nn \l_text_expand_exclude_tl { \NoCaseChange }
    \cs_set_eq:NN \NoCaseChange \use:n
    \tl_show:x
      { \text_expand:n { \tl_map_tokens:nn { { abc } {  def} } { tokens } } }
    \tl_show:x
      { \text_expand:n { \tl_map_tokens:nn { { \NoCaseChange { c } } } { tokens } } }
  }

\TEST { Excluding~case~switch }
  {
    \tl_show:x
      { \text_expand:n { \text_case_switch:nnnn { A } { B } { C } { D } } }
    \cs_new_eq:NN \DemoA \text_case_switch:nnnn
    \tl_show:x
      { \text_expand:n { \DemoA { A } { B } { C } { D } } }
    \cs_new:Npn \DemoB { \text_case_switch:nnnn }
    \tl_show:x
      { \text_expand:n { \DemoB { A } { B } { C } { D } } }
  }

\TEST { Expansion~noexpand }
  {
    \tl_show:x { \text_expand:n { \exp_not:n { ~ \abc \foo } } }
    \tl_show:x { \text_expand:n { \tl_tail:n { ~ \abc \foo } } }
    \tl_show:x { \text_expand:n { \exp_not:n \scan_stop: \use:n { ~ \use_none:n } { X } { \foo } } }
  }

\TEST { Dealing~with~\protect }
  {
    \tl_show:x { \text_expand:n { \protect \foo } }
    \tl_show:x { \text_expand:n { \protect a } }
    \tl_show:x { \text_expand:n { \protect } }
    \tl_show:x { \text_expand:n { \protect { ab } } }
  }

\TEST { Non-terminated~\romannumeral }
  {
    \tl_show:x { \text_expand:n { \romannumeral 10 } }
  }

\END
