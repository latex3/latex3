This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Bruno Le Floch
============================================================
TEST 1: prop from_keyval
============================================================
The property list \l_tmpa_prop contains the pairs (without outer braces):
>  {\a }  =>  {b}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
The property list \g_tmpa_prop contains the pairs (without outer braces):
>  {\a }  =>  {b}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
Defining \c_A_prop on line ...
The property list \c_A_prop contains the pairs (without outer braces):
>  {\a }  =>  {Z}
>  {\c }  =>  { \d =e }
>  {}  =>  {,}
>  {=}  =>  {}.
============================================================
============================================================
TEST 2: prop from_keyval invalid
============================================================
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The property list \l_tmpa_prop is empty
> .
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The property list \g_tmpa_prop is empty
> .
Defining \c_B_prop on line ...
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Misplaced '=' in key-value input on line ...
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Missing '=' in '=' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! LaTeX Error: Missing '=' in '' (in '..._keyval:Nn')
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
The property list \c_B_prop is empty
> .
============================================================
============================================================
TEST 3: prop_concat
============================================================
TRUE
The property list \g_tmpa_prop contains the pairs (without outer braces):
>  {x}  =>  {y}
>  {\a }  =>  {c}
>  {\c }  =>  { \D =E }
>  {}  =>  {?}
>  {=}  =>  {}.
============================================================
============================================================
TEST 4: prop_put_from_keyval
============================================================
TRUE
The property list \g_tmpa_prop contains the pairs (without outer braces):
>  {}  =>  {}
>  {\a }  =>  {c}
>  {\c }  =>  {=}
>  { \a }  =>  {c}.
The property list \l_tmpa_prop is empty
> .
============================================================
============================================================
TEST 5: prop to keyval expansion
============================================================
The token list contains the tokens:
>    (blank space  )
>  { (begin-group character {)
>  a (the character a)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  b (the character b)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character })
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  c (the character c)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  # (macro parameter character #)
>  1 (the character 1)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  d (the character d)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  , (the character ,)
>  b (the letter b)
>  , (the character ,)
>  c (the letter c)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  e (the character e)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  = (the character =)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  f (the character f)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \tex_cr:D (control sequence=\cr)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  g (the character g)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \ERROR (control sequence=undefined)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  & (the character &)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  & (alignment tab character &)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>    (blank space  )
>  { (begin-group character {)
>  a (the character a)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  b (the character b)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character })
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  c (the character c)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  # (macro parameter character #)
>  1 (the character 1)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  d (the character d)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  , (the character ,)
>  b (the letter b)
>  , (the character ,)
>  c (the letter c)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  e (the character e)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  a (the letter a)
>  = (the character =)
>  b (the letter b)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  f (the character f)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \tex_cr:D (control sequence=\cr)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  g (the character g)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  \ERROR (control sequence=undefined)
>  } (end-group character })
>  , (the character ,)
>    (blank space  )
>  { (begin-group character {)
>  & (the character &)
>  } (end-group character })
>  = (the character =)
>    (blank space  )
>  { (begin-group character {)
>  & (alignment tab character &)
>  } (end-group character }).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 6: prop to keyval in halign
============================================================
0
1
============================================================
