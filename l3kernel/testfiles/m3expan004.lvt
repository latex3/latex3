%
% Copyright (C) 2018-2021 The LaTeX Project
%

% Input the regression test macros for LaTeX
\input{regression-test}

% The goal is to test the fall-back code (when \expanded is not
% available) for e-type argument expansion.  We do this by undefining
% \expanded before loading expl3.  This would break some assumptions in
% LuaTeX (string comparison is used for some set-up within expl3, and in
% LuaTeX string comparison uses \use:e), but in any case the test would
% not be useful in LuaTeX since \expanded has been available for a long
% time.
\ifdefined\luatexversion\else
  \let\expanded\undefined
\fi

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff




% Everything before this is ignored by the test system.
\START

\AUTHOR{Bruno Le Floch}

\ExplSyntaxOn

\cs_set_protected:Npn \test:n #1
  { \TYPE { | \exp_args:Ne \exp_not:n {#1} | } }

\TEST { e-type~argument }
  {
    \exp_args:Ne \tl_analysis_show:n { # }
    \test:n { }
    \test:n { { { } } }
    \test:n { \foo }
    \test:n { ~ \c_space_tl { \c_empty_tl { ~ } { } } \exp_not:N \foo }
    \test:n { \exp_not:N \foo }
    \test:n { { \exp_not:N } }
    \test:n { \exp_not:N { } }
    \test:n { \exp_not:n \c_space_token \scan_stop: \exp_not:N \foo { ~ \bar } }
    \test:n { \exp_not:n \exp_after:wN \exp_not:N \c_space_tl { \zz } }
    \test:n { \exp_not:n \exp_not:N \scan_stop: { } }
    \test:n { \exp_not:f { \int_eval:n { 4 + 5 } , \int_eval:n { 6 + 7 } } }
    \test:n { \tl_item:nn { \foo \zz { \buzz { \aaa } ~ } \bbb } { 3 } \c_backslash_str }
    \test:n { \tex_the:D \tex_numexpr:D 1 + 2 ~ 3 }
    \tex_count:D 4321 = 987654 \scan_stop:
    \test:n { \tex_the:D \tex_count:D 4321 + 1 }
    \tex_toks:D 10009 = { \abc \foo }
    \test:n { \tex_the:D \tex_toks:D 10009 ~ }
    \tex_toksdef:D \l_test_toks = 10009 \scan_stop:
    \test:n { \tex_the:D \l_test_toks }
    \tex_everypar:D = { \zzz }
    \test:n { \tex_the:D \exp_after:wN \tex_everypar:D \c_space_tl }
  }

\END
