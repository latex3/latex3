%
% Copyright (C) 2011-2014 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[check-declarations,log-functions]{expl3}

\begin{document}
\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

\OMIT

% The idea here is to use a version of the long list of primitive names from
% l3names.dtx which id DocStripped out for this test as l3names.def. That means
% that the primitive list in the test always matches that currently used by
% 'live' expl3, and all that has to happen to use it is to define
% \__kernel_primitive:NN appropriately.
\cs_set_protected:Npn \test_T:N #1
  {
    \if_meaning:w \tex_undefined:D #1
      \exp_after:wN \use_none:n
    \else:
      \exp_after:wN \use:n
    \fi:
    {
      \token_if_primitive:NF #1
        { \message { \cs_to_str:N #1 } }
    }
  }
\cs_set_protected:Npn \__kernel_primitive:NN #1 #2 {\test_T:N #1 \test_T:N #2 }

% \cs{test_escapechar:n} checks the list of all primitives for the given
% value of escapechar. 
\cs_set_protected:Npn \test_escapechar:n #1
  {
    \group_begin:
      \tex_escapechar:D = \__int_eval:w #1 \__int_eval_end:
      \file_input:n { l3names.def }
      \message { ^^J }
    \group_end:
  }
\TIMO

\TESTEXP { token_if_primitive~and~tex_end:D }
  {
    \token_if_primitive:NTF \tex_end:D ? F
    % \c_space_tl
    % \token_to_meaning:N \tex_end:D
    \NEWLINE
    \exp_args:Nc \token_if_primitive:NTF { @@@end } T ?
    \c_space_tl
    \exp_args:Nc \token_to_meaning:N { @@@end }
  }

% Test for each escapechar.
\TEST{ token_if_primitive,~with~usual~escapechar }
  { \test_escapechar:n { 92 } }

\TEST { token_if_primitive,~with~unprintable~escapechar }
  { \test_escapechar:n { -1 } }

\TEST { token_if_primitive,~with~space~escapechar }
  { \test_escapechar:n { 32 } }

\END
