%
% Copyright (C) 2019,2020 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\START
\AUTHOR{Phelype Oleinik, Bruno Le Floch}

\ExplSyntaxOn

\OMIT
\intarray_new:Nn \TESTintarrayA { 257 }
\intarray_new:Nn \TESTintarrayB { 257 }
\cs_new:Npn \SAVECATCODES #1
  {
    \int_step_inline:nnn { 1 } { 256 }
      {
        \intarray_gset:Nnn #1 {##1}
          { \char_value_catcode:n {##1-1} }
      }
    \intarray_gset:Nnn #1 { 257 } { \tex_endlinechar:D }
  }
\tl_new:N \l__test_tl
\prg_new_protected_conditional:Npnn \intarray_if_eq:NN #1 #2 { TF }
  {
    \tl_clear:N \l__test_tl
    \int_step_inline:nnn { 1 } { 257 }
      {
        \int_compare:nNnF
          { \intarray_item:Nn #1 {##1} }
            =
          { \intarray_item:Nn #2 {##1} }
          {
            \tl_put_right:Nx \l__test_tl
              {
                \int_compare:nNnTF { ##1 } = { 257 }
                  { endlinechar ~ }
                  { '\char_generate:nn { ##1 - 1 } { 12 }' ~ }
                ( \intarray_item:Nn #1 {##1} != \intarray_item:Nn #2 {##1}) ~
              }
          }
      }
    \tl_if_empty:NTF \l__test_tl
      { \prg_return_true: }
      { \prg_return_false: }
  }
\cs_new_eq:NN \IntarrayIfEqTF \intarray_if_eq:NNTF

\use:n
  {
    \cctab_begin:N \c_code_cctab
      \cctab_begin:N \c_code_cctab
        \cctab_begin:N \c_code_cctab
          \cctab_begin:N \c_code_cctab
            \cctab_begin:N \c_code_cctab
            \cctab_end:
          \cctab_end:
        \cctab_end:
      \cctab_end:
    \cctab_end:
    { \cctab_select:N \c_code_cctab }
    { { \cctab_select:N \c_code_cctab } }
    { { { \cctab_select:N \c_code_cctab } } }
    { { { { { \cctab_select:N \c_code_cctab } } } } }
  }
\TIMO

\TEST { cctab_begin / code~in~iniTeX }
  {
    \errorstopmode
    \group_begin:
      \SAVECATCODES \TESTintarrayA
    \group_end:
    \cctab_begin:N \c_code_cctab
      \SAVECATCODES \TESTintarrayB
    \cctab_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
    %
    \cctab_begin:N \c_initex_cctab
      \cctab_begin:N \c_code_cctab
        \SAVECATCODES \TESTintarrayA
      \cctab_end:
    \cctab_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
  }

\TEST { cctab_begin / iniTeX~in~code }
  {
    \cctab_begin:N \c_initex_cctab
      \SAVECATCODES \TESTintarrayA
    \cctab_end:
    %
    \cctab_begin:N \c_code_cctab
      \cctab_begin:N \c_initex_cctab
        \SAVECATCODES \TESTintarrayB
      \cctab_end:
    \cctab_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
  }

\TEST { cctab_begin / str~in~document }
  {
    \cctab_begin:N \c_str_cctab
      \SAVECATCODES \TESTintarrayA
    \cctab_end:
    %
    \cctab_begin:N \c_document_cctab
      \cctab_begin:N \c_str_cctab
        \SAVECATCODES \TESTintarrayB
      \cctab_end:
    \cctab_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
  }

\TEST { cctab_begin / document~in~str }
  {
    \cctab_begin:N \c_document_cctab
      \SAVECATCODES \TESTintarrayA
    \cctab_end:
    %
    \cctab_begin:N \c_str_cctab
      \cctab_begin:N \c_document_cctab
        \SAVECATCODES \TESTintarrayB
      \cctab_end:
    \cctab_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
  }


\TEST { cctab_select / document~in~str }
  {
    \group_begin:
      \cctab_select:N \c_document_cctab
      \SAVECATCODES \TESTintarrayA
    \group_end:
    %
    \group_begin:
      \cctab_select:N \c_str_cctab
      \cctab_select:N \c_document_cctab
        \SAVECATCODES \TESTintarrayB
    \group_end:
    \IntarrayIfEqTF \TESTintarrayA \TESTintarrayB
      { \TYPE { OK } } { \TYPE { Sob~T_T~\l__test_tl } }
  }

% ==================================================

\OMIT
\cs_new_protected:Npn \test_XYZ:Nn #1#2
  {
    \cctab_begin:N #1
      \int_compare:nTF
        {
          #2
          = \char_value_catcode:n { `\X }
          = \char_value_catcode:n { `\Y }
          = \char_value_catcode:n { `\Z }
        }
        { \TRUE } { \ERROR }
    \cctab_end:
  }
\TIMO

\TEST { catcode~assignments~don't~change~cctab }
  {
    \cctab_begin:N \c_str_cctab
      \cctab_begin:N \c_initex_cctab
        \char_set_catcode_comment:N \X
        \cctab_begin:N \c_document_cctab
          \char_set_catcode_comment:N \Y
          \cctab_begin:N \c_other_cctab
            \char_set_catcode_comment:N \Z
          \cctab_end:
        \cctab_end:
      \cctab_end:
    \cctab_end:
    \test_XYZ:Nn \c_initex_cctab { 11 }
    \test_XYZ:Nn \c_code_cctab { 11 }
    \test_XYZ:Nn \c_document_cctab { 11 }
    \test_XYZ:Nn \c_other_cctab { 12 }
    \test_XYZ:Nn \c_str_cctab { 12 }
  }

% ==================================================

\TEST { str/other~cctab }
  {
    \tl_set_rescan:Nnn \l_tmpa_tl
      { \cctab_select:N \c_str_cctab }
      { abc~def $ $ ^ & _ { } }
    \use:x { \tl_if_eq:nnTF { \tl_to_str:N \l_tmpa_tl } { \l_tmpa_tl } }
      { \TRUE } { \ERROR }
    \tl_set_rescan:Nnn \l_tmpb_tl
      { \cctab_select:N \c_other_cctab }
      { abc~def $ $ ^ & _ { } }
    \tl_if_eq:NNTF \l_tmpa_tl \l_tmpb_tl { \ERROR } { \FALSE }
    \use:x { \tl_replace_all:Nnn \exp_not:N \l_tmpa_tl { ~ } { \c_catcode_other_space_tl } }
    \tl_if_eq:NNTF \l_tmpa_tl \l_tmpb_tl { \TRUE } { \ERROR }
  }

\TEST { cctab~not~affected~by~catcode~assignments }
  {
    \cctab_begin:N \c_document_cctab
      \char_set_catcode_other:N \_
      \cctab_select:N \c_str_cctab
    \cctab_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 }
      { \TRUE } { \ERROR }
    \cctab_begin:N \c_document_cctab
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 8 }
        { \TRUE } { \ERROR }
    \cctab_end:
  }

\TEST { restoring~cctab~after~group~end }
  {
    \char_set_catcode_space:N \_
    \cctab_begin:N \c_document_cctab
      \char_set_catcode_ignore:N \_
      \group_begin:
        \char_set_catcode_active:N \_
        \cctab_begin:N \c_str_cctab
        \char_set_catcode_active:N \_
        \cctab_end:
        \char_set_catcode_active:N \_
      \group_end:
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 9 }
        { \TRUE } { \ERROR }
    \cctab_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 10 }
      { \TRUE } { \ERROR }
  }

\TEST { restoring~\cctab_select:N~after~group~end }
  {
    \char_set_catcode_space:N \_
    \group_begin:
      \cctab_select:N \c_document_cctab
      \char_set_catcode_ignore:N \_
      \group_begin:
        \char_set_catcode_active:N \_
        \cctab_select:N \c_str_cctab
        \char_set_catcode_active:N \_
      \group_end:
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 9 }
        { \TRUE } { \ERROR }
    \group_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 10 }
      { \TRUE } { \ERROR }
  }


\ExplSyntaxOff

\END
