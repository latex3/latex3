%
% Copyright (C) The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\def\foo{foo}
\TIMO

\TEST { flag_new }
  {
    {
      \flag_if_exist:NT \l_A_flag { \ERROR }
      \flag_new:N \l_A_flag
      \TYPE { \cs_meaning:N \l_A_flag }
    }
    \flag_if_exist:NF \l_A_flag { \ERROR }
    \TYPE { \cs_meaning:N \l_A_flag }
    \flag_new:N \l_A_flag
    \flag_new:N \l_B_flag
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\flag_new:N \l_C_flag
\cs_new:Npn \test:
  {
    \flag_if_raised:NTF \l_C_flag { T } { F } ~
    \flag_height:N \l_C_flag \c_space_tl
    \cs_meaning:c { l_C_flag 0 } ~
    \cs_meaning:c { l_C_flag 1 } ~
    \cs_meaning:c { l_C_flag 2 } ~ \NEWLINE
  }
\TIMO

\TEST { raise,~test,~height }
  {
    { \TYPE { \prg_replicate:nn {3} { \test: \flag_raise:N \l_C_flag } } }
    \TYPE { \test: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { zero }
  {
    \TYPE { \test: \flag_raise:N \l_C_flag \test: }
    {
      \prg_replicate:nn {10} { \flag_raise:N \l_C_flag }
      \flag_clear:N \l_C_flag
      \TYPE { \test: \prg_replicate:nn {10} { \flag_raise:N \l_C_flag } \test: }
    }
    \TYPE { \test: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { show,~log }
  {
    \flag_raise:N \l_C_flag
    \flag_ensure_raised:N \l_C_flag
    \flag_show:N \l_C_flag
    \flag_clear:N \l_C_flag
    \flag_ensure_raised:N \l_C_flag
    \flag_raise:N \l_C_flag
    \flag_raise:N \l_C_flag
    \flag_log:N \l_C_flag
    \flag_log:N \l_other_flag
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { undefined }
  {
    \flag_clear:N \l_other_flag
    \flag_raise:N \l_other_flag
    \TYPE { | \flag_raise:N \l_other_flag | }
    \TYPE { | \flag_ensure_raised:N \l_other_flag | }
    \TYPE { | \flag_height:N \l_other_flag | }
    \TYPE { | \flag_if_raised:NTF \l_other_flag {T} {F} | }
    \TYPE { | \flag_if_raised:NT \l_other_flag {T} | }
    \TYPE { | \flag_if_raised:NF \l_other_flag {F} | }
    \TYPE { | \bool_if:nTF { \flag_if_raised_p:N \l_other_flag } {T} {F} | }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { tmpa, tmpb }
  {
    \flag_show:N \l_tmpa_flag
    \flag_show:N \l_tmpb_flag
  }

\END
