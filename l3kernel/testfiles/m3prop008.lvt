%
% Copyright (C) The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}


\ExplSyntaxOn
\debug_on:n { deprecation , log-functions } % NOT check-declarations
\ExplSyntaxOff


\begin{document}
\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { setting~undefined~property~lists }
  {
    \prop_clear:N \l_A_prop
    \prop_log:N \l_A_prop
    \prop_set_from_keyval:Nn \l_tmpa_prop { a = b }
    \prop_gset_eq:NN \g_B_prop \l_tmpa_prop
    \prop_log:N \g_B_prop
    \prop_set_from_keyval:Nn \l_C_prop { C = C }
    \prop_log:N \l_C_prop
  }

\TEST { setting~c-type~undefined~property~lists }
  {
    \prop_clear:c { l_AA_prop }
    \prop_log:c { l_AA_prop }
    \prop_set_from_keyval:Nn \l_tmpa_prop { a = b }
    \prop_gset_eq:cN { g_BB_prop } \l_tmpa_prop
    \prop_log:c { g_BB_prop }
    \prop_set_from_keyval:cn { l_CC_prop } { C = C }
    \prop_log:c { l_CC_prop }
  }

\tl_new:N \l_A_tl
\tl_new:N \g_B_tl
\tl_new:N \l_C_tl

\TEST { setting~invalid~property~lists }
  {
    \prop_clear:N \l_A_tl
    \prop_log:N \l_A_tl
    \prop_set_from_keyval:Nn \l_tmpa_prop { a = b }
    \prop_gset_eq:NN \g_B_tl \l_tmpa_prop
    \prop_log:N \g_B_tl
    \prop_set_from_keyval:Nn \l_C_tl { C = C }
    \prop_log:N \l_C_tl
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_undefine:N \l_A_prop
\cs_undefine:N \g_B_prop
\cs_undefine:N \l_C_prop
\cs_undefine:N \l_AA_prop
\cs_undefine:N \g_BB_prop
\cs_undefine:N \l_CC_prop

\TEST { splitting~undefined~property~lists }
  {
    \prop_log:N \l_A_prop
    \prop_get:NnNTF \l_A_prop { A } \l_tmpa_tl { \ERROR } { \FALSE }
    \prop_log:N \l_A_prop
    \tl_log:N \l_tmpa_tl
    \prop_get:NnN \g_B_prop { A } \l_tmpa_tl
    \prop_log:N \g_B_prop
    \prop_put:Nnn \l_C_prop { A } { B }
    \prop_log:N \l_C_prop
    \prop_pop:NnNTF \l_C_prop { A } \l_tmpa_tl { \TRUE } { \ERROR }
    \prop_log:N \l_C_prop
    \tl_log:N \l_tmpa_tl
  }

\TEST { splitting~c-type~undefined~property~lists }
  {
    \prop_log:c { l_AA_prop }
    \prop_get:cnNTF { l_AA_prop } { A } \l_tmpa_tl { \ERROR } { \FALSE }
    \prop_log:c { l_AA_prop }
    \tl_log:N \l_tmpa_tl
    \prop_get:cnN { g_BB_prop } { A } \l_tmpa_tl
    \prop_log:c { g_BB_prop }
    \prop_put:cnn { l_CC_prop } { A } { B }
    \prop_log:c { l_CC_prop }
    \prop_pop:cnNTF { l_CC_prop } { A } \l_tmpa_tl { \TRUE } { \ERROR }
    \prop_log:c { l_CC_prop }
    \tl_log:N \l_tmpa_tl
  }

\tl_clear:N \l_A_tl
\tl_gclear:N \g_B_tl
\tl_clear:N \l_C_tl

\TEST { splitting~invalid~property~lists }
  {
    \prop_log:N \l_A_tl
    \prop_get:NnNTF \l_A_tl { A } \l_tmpa_tl { \ERROR } { \FALSE }
    \prop_log:N \l_A_tl
    \tl_log:N \l_tmpa_tl
    \prop_get:NnN \g_B_tl { A } \l_tmpa_tl
    \tl_log:N \l_tmpa_tl
    \prop_put:Nnn \l_C_tl { A } { B }
    \prop_log:N \l_C_tl
    \prop_pop:NnNTF \l_C_tl { A } \l_tmpa_tl { \TRUE } { \ERROR }
    \prop_log:N \l_C_tl
    \tl_log:N \l_tmpa_tl
  }

\END

