%
% Copyright (C) 2009-2012,2015,2017 The LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

% Leave some padding so that the line numbers
% of the tests don't change later on.

\RequirePackage[check-declarations,log-functions,native-drivers]{expl3}

\begin{document}
\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
\tl_new:N  \filea
\tl_new:N  \fileb
\tl_set:Nn \filea { filetest.txt }
\tl_set:Nn \fileb { NotAFile.xxx.yyy.zzz }
\tl_new:N \l_A_tl
\tl_new:N \l_B_tl
\tl_new:N \l_C_tl
\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { If~file~exists~(expect~F/F/T/T/T/T/F/F) }
  {
    \file_if_exist:nF {testfile.txt}{\FALSE}
    \file_if_exist:nF {\filea}{\FALSE}
    \file_if_exist:nF {NotAFile.xxx.yyy.zzz}{\FALSE}
    \file_if_exist:nF {\fileb}{\FALSE}
    \file_if_exist:nT {testfile.txt}{\TRUE}
    \file_if_exist:nT {\filea}{\TRUE}
    \file_if_exist:nT {NotAFile.xxx.yyy.zzz}{\TRUE}
    \file_if_exist:nT {\fileb}{\TRUE}
    \file_if_exist:nTF {testfile.txt}{\TRUE}{\FALSE}
    \file_if_exist:nTF {\filea}{\TRUE}{\FALSE}
    \file_if_exist:nTF {NotAFile.xxx.yyy.zzz}{\TRUE}{\FALSE}
    \file_if_exist:nTF {\fileb}{\TRUE}{\FALSE}
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Getting~the~full~name~of~files }
  {
    \file_get_full_name:nN { filetest.txt } \l_A_tl
    \tl_log:N \l_A_tl
    \file_get_full_name:nN { \filea } \l_A_tl
    \tl_log:N \l_A_tl
    \file_get_full_name:nN { NotAFile.xxx.yyy.zzz } \l_A_tl
    \tl_log:N \l_A_tl
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Loading~a~file }
  {
    \file_input:n { filetest.txt }
    \file_input:n { \filea }
    \file_input:n { NotAFile.xxx.yyy.zzz }
    \file_input:n { \fileb }
  }

\TEST { Loading~a~file~conditionally }
  {
    \file_if_exist_input:n   { filetest.txt }
    \file_if_exist_input:n   { NotAFile.xxx.yyy.zzz }
    \file_if_exist_input:nF  { filetest.txt }         \ERROR
    \file_if_exist_input:nF  { NotAFile.xxx.yyy.zzz } \FALSE
  }

\TEST { Ending~file_input }
  {
    \vbox_set:Nn \l_tmpa_box
      { \file_input:n { filetest-endinput.txt } }
    \box_show:N \l_tmpa_box
  }

\TEST { File~name~parsing }
  {
    \OMIT
      \str_new:N \l_tmpc_str
      \cs_set_protected:Npn \test:n #1
        {
          \file_parse_full_name:nNNN {#1} \l_tmpa_str \l_tmpb_str \l_tmpc_str
          \TYPE
            {
              Path:~" \l_tmpa_str ",~
              Name:~" \l_tmpb_str ",~
              Ext:~ " \l_tmpc_str "
            }
        }
    \TIMO
    \test:n { }
    \test:n { ~ }
    \test:n { . }
    \test:n { / }
    \test:n { test }
    \test:n { test.tex }
    \test:n { "test.tex" }
    \test:n { test.file.tex }
    \test:n { test~file.tex }
    \test:n { ~test~file.tex }
    \test:n { "~test~file.tex" }
    \test:n { bar/test.tex }
    \test:n { bar/baz/test.tex }
    \test:n { bar/baz~bob/test.tex }
    \test:n { /test.tex }
    \test:n { /baz/ }
    \test:n { /bar/baz~bob/test.tex }
    \test:n { "bar/baz~bob/test.tex" }
    \test:n { //baz/...a.b. }
    \test:n { "//." }
    \test:n { "//~" }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { File~listing }
  { \file_log_list: }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { File~name~quoting }
  {
    \__file_name_quote:nN { foo.bar }     \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \__file_name_quote:nN { "foo.bar" }   \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \__file_name_quote:nN { "foo."bar"" } \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \__file_name_quote:nN { "foo."bar" }  \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \__file_name_quote:nN { foo~.bar }    \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \__file_name_quote:nN { "foo~.bar" }  \l_tmpa_str
    \tl_show:N \l_tmpa_str
  }

\TEST { Getting~file~information }
  {
    \file_get_mdfive_hash:nN { filetest-utf8.txt } \l_tmpa_str
    \file_get_size:nN { filetest.txt } \l_tmpb_str
    \sys_if_engine_xetex:F
      {
        \int_compare:nNnTF \l_tmpb_str = { 120 }
          {
            % Unix line endings
            \str_if_eq:VnTF \l_tmpa_str { 4F918CB10404DD50E3C1B9990FF54D4A }
              \TRUE \ERROR
          }
          {
            \int_compare:nNnTF \l_tmpb_str = { 123 }
              {
                 % Windows line endings
                \str_if_eq:VnTF \l_tmpa_str { FA408C34EC7616533C50F8643B7949B6 }
                  \TRUE \ERROR
              }
              \ERROR
          }
      }
    \file_get_mdfive_hash:nN { NotAFile.txt } \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \file_get_size:nN { NotAFile.txt } \l_tmpa_str
    \tl_show:N \l_tmpa_str
    \OMIT
      \cs_generate_variant:Nn \regex_match:nnTF { nV }
    \TIMO
    \file_get_timestamp:nN { filetest.txt } \l_tmpa_str
    \regex_match:nVTF
      { ^D\:\d{14} } \l_tmpa_str \TRUE \ERROR
    \file_get_timestamp:nN { NotAFile.txt } \l_tmpa_str
    \tl_show:N \l_tmpa_str
  }

\END
