%
% Copyright (C) The LaTeX Project
%
\documentclass{minimal}
\input{regression-test}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Will Robertson}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP{tl_if_single}{
  \tl_if_single:nTF {~}                   ?F
  \tl_if_single:nTF {Z}                   T?
  \tl_if_single:nTF {$}                   T?
  \tl_if_single:nTF {#}                   T?
  \tl_if_single:nTF {^}                   T?
  \tl_if_single:nTF {_}                   T?
  \tl_if_single:nTF {^^65}                T?
  \tl_if_single:nTF {\bar}                T?
  \tl_if_single:nTF {\if}                 T?
  \tl_if_single:nTF {\fi}                 T?
  \tl_if_single:nTF {\bgroup}             T?
  \tl_if_single:nTF {\egroup}             T?
  \tl_if_single:nTF {\ifx}                T?
  \NEWLINE
  \tl_if_single:nTF {}                    ?F
  \tl_if_single:nTF {ZZ}                  ?F
  \tl_if_single:nTF {\bar\bar}            ?F
  \tl_if_single:nTF {\ifx z}              ?F
  \tl_if_single:nTF {z \ifx}              ?F
  \tl_if_single:nTF {\egroup\bgroup}      ?F
  \tl_if_single:nTF {\fi\fi\fi}           ?F
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{bug~fixes~for~tl_replace}{
  \tl_new:N  \g_my_tl
  \tl_gset:Nn \g_my_tl {aabono}
  \tl_greplace_once:Nnn \g_my_tl {bonobo} {whatever}
  \tl_log:N \g_my_tl
  \tl_gput_right:Ne \g_my_tl
    { \prg_replicate:nn { 10 } { \exp_not:N \prg_do_nothing: } }
  \tl_greplace_all:Nnn \g_my_tl { \prg_do_nothing: } { \x }
  \tl_log:N \g_my_tl
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\tl_set:Ne \l_tmpa_tl { \char_generate:nn {33} {10} } % "!" with catcode 10
\tl_set:Ne \l_tmpb_tl { \char_generate:nn {65} {10} } % "A" with catcode 10

\cs_set:Npn \test:w #1
  {
    % original test cases
    [ #1 { ~ a b ~ c ~ } ] \NEWLINE
    [ #1 { ~ \use:n ~ { a b ~ c  ~ } ~ } ] \NEWLINE
    % new test cases
    % no brace stripping
    [ #1 { ~ { a } ~ } ] \NEWLINE
    [ #1 { ~ { ~ a ~ } ~ } ] \NEWLINE
    % no trimming of implicit spaces
    [ \exp_args:Ne #1 { \c_space_token a \c_space_token } ]
    \NEWLINE
    [ \exp_args:Ne #1
        { ~ \c_space_token \c_space_tl a ~ \c_space_token \c_space_tl } ]
    \NEWLINE
    % trim explicit(32,10) spaces only
    [ \exp_args:Ne #1 { \l_tmpa_tl a \l_tmpb_tl } ]
    \NEWLINE
    [ \exp_args:Ne #1
        { ~ \l_tmpa_tl \c_space_tl a ~ \l_tmpb_tl \c_space_tl } ]
    \NEWLINE
    % trim all explicit spaces
    [ \exp_args:Ne #1
        { \prg_replicate:nn {3} {~} a \prg_replicate:nn {3} {~} } ]
    \NEWLINE
    % returned within \exp_not:n;
    % \use:n is for keeping the trailing space (~)
    [ #1 { ~ \use:n { \ERROR } ~ } ]
  }
\TIMO

\TESTEXP{tl_trim_spaces:n}{
  \test:w \tl_trim_spaces:n
}

\TESTEXP{tl_trim_left_spaces:n}{
  \test:w \tl_trim_left_spaces:n
}

\TESTEXP{tl_trim_right_spaces:n}{
  \test:w \tl_trim_right_spaces:n
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\tl_set:Ne \l_tmpa_tl
  {
    \prg_replicate:nn {5} {~}
    \exp_not:n { {\abc #} }
    \prg_replicate:nn {5} {~}
  }
\tl_gset_eq:NN \g_tmpa_tl \l_tmpa_tl
\cs_set_protected:Npn \test:w #1#2
  {
    \group_begin:
      #1 \l_tmpa_tl
      \TYPE { [ \exp_not:o \l_tmpa_tl ] }
      \tl_gset_eq:NN \g_tmpb_tl \g_tmpa_tl
      #2 \g_tmpb_tl
    \group_end:
    \TYPE { [ \exp_not:o \g_tmpb_tl ] }
  }
\TIMO

\TEST{tl_(g)trim_spaces:N~and~friends}{
  \test:w \tl_trim_spaces:N \tl_gtrim_spaces:N
  \test:w \tl_trim_left_spaces:N \tl_gtrim_left_spaces:N
  \test:w \tl_trim_right_spaces:N \tl_gtrim_right_spaces:N
}

\END

