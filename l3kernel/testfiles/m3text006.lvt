%
% Copyright (C) 2022 The LaTeX Project
%
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\documentclass{minimal}

\START
\AUTHOR{Joseph Wright}

\ExplSyntaxOn

\TEST { Grapheme~mapping }
  {
    \OMIT
      \ior_open:Nn \g_tmpa_ior { GraphemeBreakTest.txt }
    \TIMO
    \use:x
      {
        \cs_set_protected:Npx \exp_not:N \test_auxi:w
          \tl_to_str:n { ÷ } ##1 \char_generate:nn { `\^^I } { 12 }
          \c_hash_str ##2 \exp_not:N \q_stop
      }
      {
        \exp_not:N \test_auxii:nnnw {#2} { } { } #1
          \exp_not:N \q_recursion_tail
          \tl_to_str:n { ÷ } \exp_not:N \q_recursion_stop
      }
    \use:x
      {
        \cs_set_protected:Npn \exp_not:N \test_auxii:nnnw
          ##1##2##3##4 \tl_to_str:n { ÷ }
      }
      {
        \quark_if_recursion_tail_stop_do:nn {#4}
          { \test_auxv:nnn {#1} {#2} {#3} }
        \test_auxii:nnnn {#1} {#2} {#3} {#4}
      }
    \cs_set_protected:Npx \test_auxii:nnnn #1#2#3#4
      {
        \exp_not:N \test_auxiv:nnnnw {#1} {#2} {#3} { } #4
          \tl_to_str:n { × } \exp_not:N \q_recursion_tail
          \tl_to_str:n { × } \exp_not:N \q_recursion_stop
      }
    \use:x
      {
        \cs_set_protected:Npn \exp_not:N \test_auxiv:nnnnw
          ##1##2##3##4##5 \tl_to_str:n { × }
      }
      {
        \quark_if_recursion_tail_stop_do:nn {#5}
          { \test_auxii:nnnw {#1} {#2#4} { #3 (#4) } }
        \use:e
          {
            \test_auxiv:nnnnw {#1} {#2} {#3}
              { #4 \test_generate:n {#5} }
          }
      }
    \cs_set_protected:Npn \test_auxv:nnn #1#2#3
      {
        \str_if_eq:eeTF
          { \text_map_function:nN {#2} \test_auxvi:n }
          {#3}
          { \TRUE }
          { \LONGTYPEOUT {#1} }
      }
    \cs_set:Npn \test_auxvi:n #1 { (#1) }
    \bool_lazy_or:nnTF
      { \sys_if_engine_luatex_p: }
      { \sys_if_engine_xetex_p: }
      {
        \cs_set:Npn \test_generate:n #1
          {
            \exp_args:Ne \char_generate:nn
              { " \tl_trim_spaces:n {#1} } { 12 }
          }
      }
      {
        \cs_set:Npn \test_generate:n #1
          {
            \exp_args:Ne \test_generate_aux:n
              {
                \exp_args:Ne \char_to_utfviii_bytes:n
                  { " \tl_trim_spaces:n {#1} }
              }
          }
        \cs_set:Npn \test_generate_aux:n #1
          { \test_generate:nnnn #1 }
        \cs_set:Npn \test_generate:nnnn #1#2#3#4
          {
            \char_generate:nn {#1} { 12 }
            \tl_if_blank:nF {#2}
              { \char_generate:nn {#2} { 12 } }
            \tl_if_blank:nF {#3}
              { \char_generate:nn {#3} { 12 } }
            \tl_if_blank:nF {#4}
              { \char_generate:nn {#4} { 12 } }
          }
      }
    \ior_str_map_inline:Nn \g_tmpa_ior
      {
        \str_if_eq:eeF { \tl_head:w #1 \c_hash_str \q_stop } { \c_hash_str }
          {
            \tl_if_blank:nF {#1}
              { \test_auxi:w #1 \q_stop }
          }
      }
  }

\END