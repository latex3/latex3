%
% Copyright (C) 2014,2017,2018,2021 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

\OMIT

% In those tests, we only care about which constructions lead to which
% errors, so we let l3regex compile the regex but we don't care about
% the result.

\regex_new:N \l_test_regex

\cs_new_protected:Npn \test:n #1
  {
    \iow_term:n { "#1" }
    \regex_set:Nn \l_test_regex {#1}
  }
\cs_generate_variant:Nn \test:n { x }


\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Malformed~letter~escapes }
  {
    \test:x { \iow_char:N \\ }
    \test:x { \iow_char:N \\g }
    \test:x { \iow_char:N \\i }
    \test:x { \iow_char:N \\j }
    \test:x { \iow_char:N \\k }
    \test:x { \iow_char:N \\l }
    \test:x { \iow_char:N \\m }
    \test:x { \iow_char:N \\o }
    \test:x { \iow_char:N \\p }
    \test:x { \iow_char:N \\q }
    \test:x { \iow_char:N \\y }
    \test:x { \iow_char:N \\C }
    \test:x { \iow_char:N \\E }
    \test:x { \iow_char:N \\F }
    \test:x { \iow_char:N \\I }
    \test:x { \iow_char:N \\J }
    \test:x { \iow_char:N \\L }
    \test:x { \iow_char:N \\M }
    \test:x { \iow_char:N \\O }
    \test:x { \iow_char:N \\P }
    \test:x { \iow_char:N \\Q }
    \test:x { \iow_char:N \\R }
    \test:x { \iow_char:N \\T }
    \test:x { \iow_char:N \\U }
    \test:x { \iow_char:N \\X }
    \test:x { \iow_char:N \\Y }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\TEST { Malformed~x~escapes }
  {
    \test:x { \iow_char:N \\x }
    \test:x { \iow_char:N \\x \iow_char:N \{ }
    \test:x { \iow_char:N \\x { } }
    \test:x { \iow_char:N \\x \iow_char:N \{ 45 }
    \test:x { \iow_char:N \\x { 34 k } }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Malformed~classes }
  {
    \test:x { [         } % ]
    \test:x { [   abc   } % ]
    \test:x { [   a - ] }
    \test:x { [   ] -   }
    \test:x { [   a - \iow_char:N \\ ] }
    \test:x { [ ^       } % ]
    \test:x { [ ^ abc   } % ]
    \test:x { [ ^ a - ] }
    \test:x { [ ^ ] -   }
    \test:x { [ ^ a - \iow_char:N \\ ] }
    \test:x { [[: up:]] }
    \test:x { [[:^up:]] }
    \test:x { [a[:Upper:]] }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Malformed~quantifiers }
  {
    \test:x { x \iow_char:N \{                          }
    \test:x { x \iow_char:N \{ \iow_char:N \{           }
    \test:x { x \iow_char:N \{ 1                        }
    \test:x { x \iow_char:N \{ 1x      \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 1, 3                     }
    \test:x { x \iow_char:N \{ 3, 1    \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 0, 0    \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 1, 3x   \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 1, 3,   \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 1, 3, 5 \iow_char:N \}   }
    \test:x { x \iow_char:N \{ 1, 3, 5 \iow_char:N \} ? }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Malformed~group }
  {
    \test:x { x (             }
    \test:x { x (?            }
    \test:x { x (?   )        }
    \test:x { x (? a )        }
    \test:x { x (? I )        }
    \test:x { x (?:           }
    \test:x { x (?|           }
    \test:x { x (((           }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Malformed~category~tests }
  {
    \test:x { \iow_char:N \\c }
    \test:x { \iow_char:N \\c L }
    \test:x { \iow_char:N \\c [^O] }
    \test:x { \iow_char:N \\c X . }
    \test:x { \iow_char:N \\c a . }
    \test:x { [ \iow_char:N \\c ] }
    \test:x { [ \iow_char:N \\c L ] }
    \test:x { [ \iow_char:N \\c [^O] ] }
    \test:x { [ \iow_char:N \\c X . ] }
    \test:x { [ \iow_char:N \\c a . ] }
    \test:x { \iow_char:N \\c \iow_char:N \{ abc }
    \test:x { \iow_char:N \\c { x \iow_char:N \\c L . } }
    \test:x { \iow_char:N \\c { x \iow_char:N \\c [AL] . } }
    \test:x { \iow_char:N \\c { x \iow_char:N \\c L } }
    \test:x { \iow_char:N \\c { x \iow_char:N \\c [AL] } }
    \test:x { [ \iow_char:N \\c \iow_char:N \{ abc ] }
    \test:x { [ \iow_char:N \\c { x \iow_char:N \\c L . } ] }
    \test:x { [ \iow_char:N \\c { x \iow_char:N \\c [AL] . } ] }
    \test:x { [ \iow_char:N \\c { x \iow_char:N \\c L } ] }
    \test:x { [ \iow_char:N \\c { x \iow_char:N \\c [AL] } ] }
    \test:x { \iow_char:N \\c C A }
    \test:x { \iow_char:N \\c C . }
    \test:x { \iow_char:N \\c C \iow_char:N \\A }
    \test:x { \iow_char:N \\c C (?i) A } % not detected
    \test:x { \iow_char:N \\c C (...) } % ok
    \test:x { [ \iow_char:N \\c L (...) ] }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\tl_set:Nn \l_tmpa_tl { foobar }
\TIMO

\TEST { Malformed~u~escape }
  {
    \test:x { \iow_char:N \\u }
    \test:x { \iow_char:N \\u foo }
    \test:x { \iow_char:N \\u \iow_char:N \{ }
    \test:x { \iow_char:N \\u { not_defined } }
    \test:x { [ \iow_char:N \\u foo ] }
    \test:x { [ \iow_char:N \\u { l_tmpa_tl } ] }
    \test:x { \iow_char:N \\c L \iow_char:N \\u { l_tmpa_tl } }
    \test:x { \iow_char:N \\c { \iow_char:N \\u { l_tmpa_tl } } }
    \test:x { \iow_char:N \\u { \iow_char:N \\u { l_tmpa_tl } } }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_new_protected:Npn \testii:nnn #1#2#3
  {
    \iow_term:n { "#1",~"#2",~"#3" }
    \tl_set:Nn \l_tmpa_tl {#1}
    \regex_replace_all:nnN {#2} {#3} \l_tmpa_tl
    \tl_analysis_show:N \l_tmpa_tl
  }
\cs_generate_variant:Nn \testii:nnn { x x x }
\TIMO

\TEST { Malformed~catcode~in~replacement }
  {
    \testii:xxx { a } { a } { \iow_char:N\\cC\iow_char:N\& }
    \testii:xxx { a } { a } { \iow_char:N\\cL\iow_char:N\\. }
    \testii:xxx { a } { a } { \iow_char:N\\cL\iow_char:N\\0 }
    \testii:xxx { a } { a } { \iow_char:N\\cL\iow_char:N\\u }
    \testii:xxx { a } { a } { \iow_char:N\\cL\iow_char:N\\n }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
