%
% Copyright (C) 2012,2014,2016,2018,2020,2021 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff


\begin{document}
\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_set_eq:NN \l_peek_token ?

\TEST { peek~after~with~outer~macro }
  { % Some care needed to not take outer macros as arguments
    \cs_set_protected:Npn \type { \exp_after:wN \TYPE \exp_after:wN }
    {
      \tex_outer:D \tex_def:D \a { }
      \tex_outer:D \tex_long:D \tex_def:D \b { }
      \peek_after:Nw   \tex_show:D \a
      \peek_gafter:Nw  \tex_show:D \b
      \type { \token_to_meaning:N \l_peek_token }
      \type { \token_to_meaning:N \g_peek_token }
    }
    \type { \token_to_meaning:N \l_peek_token }
    \type { \token_to_meaning:N \g_peek_token }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { peek_meaning~with~outer~macro }
  {
    \cs_set_protected:Npn \type { \group_begin: \tex_def:D \a { ? } \Type }
    \cs_set_protected:Npn \Type #1 { \TYPE {#1} \group_end: }
    \tex_outer:D \tex_def:D \a { ! }
    \peek_meaning:NTF !                      { \TRUE\type }{ \FALSE\type } \a-
    \peek_meaning:NTF !                      { \TRUE\type }{ \FALSE\type }~\a-
    \peek_meaning_remove:NTF !               { \TRUE\type }{ \FALSE\type } \a-
    \peek_meaning_remove:NTF !               { \TRUE\type }{ \FALSE\type }~\a-
    \SEPARATOR
    \peek_meaning:NT !                      { \TYPE{T1} \type } \a-
    \peek_meaning:NF !                      { \TYPE{F1} \type }~\a-
    \peek_meaning_remove:NT !               { \TYPE{T2} \type } \a-
    \peek_meaning_remove:NF !               { \TYPE{F2} \type }~\a-
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { peek_charcode~with~outer~macro }
  {
    \cs_set_protected:Npn \type { \group_begin: \tex_def:D \a { ? } \Type }
    \cs_set_protected:Npn \Type #1 { \TYPE {#1} \group_end: }
    \tex_outer:D \tex_def:D \a { ! }
    \peek_charcode:NTF !                      { \TRUE\type }{ \FALSE\type } \a-
    \peek_charcode:NTF !                      { \TRUE\type }{ \FALSE\type }~\a-
    \peek_charcode_remove:NTF !               { \TRUE\type }{ \FALSE\type } \a-
    \peek_charcode_remove:NTF !               { \TRUE\type }{ \FALSE\type }~\a-
    \SEPARATOR
    \peek_charcode:NT !                      { \TYPE{T1} \type } \a-
    \peek_charcode:NF !                      { \TYPE{F1} \type }~\a-
    \peek_charcode_remove:NT !               { \TYPE{T2} \type } \a-
    \peek_charcode_remove:NF !               { \TYPE{F2} \type }~\a-
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { peek_catcode~with~outer~macro }
  {
    \cs_set_protected:Npn \type { \group_begin: \tex_def:D \a { ? } \Type }
    \cs_set_protected:Npn \Type #1 { \TYPE {#1} \group_end: }
    \tex_outer:D \tex_def:D \a { ! }
    \peek_catcode:NTF !                      { \TRUE\type }{ \FALSE\type } \a-
    \peek_catcode:NTF !                      { \TRUE\type }{ \FALSE\type }~\a-
    \peek_catcode_remove:NTF !               { \TRUE\type }{ \FALSE\type } \a-
    \peek_catcode_remove:NTF !               { \TRUE\type }{ \FALSE\type }~\a-
    \SEPARATOR
    \peek_catcode:NT !                      { \TYPE{T1} \type } \a-
    \peek_catcode:NF !                      { \TYPE{F1} \type }~\a-
    \peek_catcode_remove:NT !               { \TYPE{T2} \type } \a-
    \peek_catcode_remove:NF !               { \TYPE{F2} \type }~\a-
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_new_protected:Npn \test:nn #1#2
  { \peek_charcode:NTF #1 { \TRUE } { \FALSE } #2 }
\cs_generate_variant:Nn \test:nn { xx }
\TIMO

\TEST { Peek~charcode~for~bgroup/egroup/space }
  {
    \test:xx { \c_group_begin_token } { { } }
    \test:xx { \c_group_begin_token } { \c_group_begin_token }
    \test:xx { \c_group_begin_token } { \iow_char:N \{ }
    \test:xx { \iow_char:N \{ }       { { } }
    \test:xx { \iow_char:N \{ }       { \c_group_begin_token }
    \test:xx { \iow_char:N \{ }       { \iow_char:N \{ }
    \test:xx { \c_group_end_token } { { } }
    \test:xx { \c_group_end_token } { \c_group_end_token }
    \test:xx { \c_group_end_token } { \iow_char:N \} }
    \test:xx { \iow_char:N \} }       { { } }
    \test:xx { \iow_char:N \} }       { \c_group_end_token }
    \test:xx { \iow_char:N \} }       { \iow_char:N \} }
    \test:xx { \c_space_token } { ~ }
    \test:xx { \c_space_token } { \c_space_token }
    \test:xx { \c_space_token } { \c_catcode_other_space_tl }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_set_protected:Npn \test:nn #1#2
  { \peek_charcode:NTF #1 { \TRUE \use_none:n } { \FALSE \use_none:n } #2 }
\cs_generate_variant:Nn \test:nn { xx }
\char_set_catcode_active:N \*
\char_set_catcode_active:N \?
\TIMO

\TEST { Peek~charcode~for~implicit~tokens }
  {
    \exp_last_unbraced:NNo \cs_set_eq:NN * { \token_to_str:N * }
    \exp_last_unbraced:NNo \cs_set_eq:NN ? { \token_to_str:N * }
    \test:xx { \exp_not:N * }      { \exp_not:N * }
    \test:xx { \token_to_str:N * } { \exp_not:N * }
    \test:xx { \exp_not:N * }      { \token_to_str:N * }
    \test:xx { \token_to_str:N * } { \token_to_str:N * }
    \test:xx { \exp_not:N * }      { \exp_not:N ? }
    \test:xx { \token_to_str:N * } { \exp_not:N ? }
    \test:xx { \exp_not:N * }      { \token_to_str:N ? }
    \test:xx { \token_to_str:N * } { \token_to_str:N ? }
    \test:xx { \exp_not:N ? }      { \exp_not:N * }
    \test:xx { \token_to_str:N ? } { \exp_not:N * }
    \test:xx { \exp_not:N ? }      { \token_to_str:N * }
    \test:xx { \token_to_str:N ? } { \token_to_str:N * }
    \test:xx { \exp_not:N ? }      { \exp_not:N ? }
    \test:xx { \token_to_str:N ? } { \exp_not:N ? }
    \test:xx { \exp_not:N ? }      { \token_to_str:N ? }
    \test:xx { \token_to_str:N ? } { \token_to_str:N ? }
    \SEPARATOR
    \exp_last_unbraced:NNo \cs_set_eq:NN \ast { \token_to_str:N * }
    \exp_last_unbraced:NNo \cs_set_eq:NN \que { \token_to_str:N ? }
    \test:xx { \exp_not:N \ast }      { \exp_not:N * }
    \test:xx { \exp_not:N \ast }      { \token_to_str:N * }
    \test:xx { \exp_not:N \ast }      { \exp_not:N ? }
    \test:xx { \exp_not:N \ast }      { \token_to_str:N ? }
    \test:xx { \exp_not:N \que }      { \exp_not:N * }
    \test:xx { \exp_not:N \que }      { \token_to_str:N * }
    \test:xx { \exp_not:N \que }      { \exp_not:N ? }
    \test:xx { \exp_not:N \que }      { \token_to_str:N ? }
    \test:xx { \exp_not:N * }         { \exp_not:N \ast }
    \test:xx { \token_to_str:N * }    { \exp_not:N \ast }
    \test:xx { \exp_not:N ? }         { \exp_not:N \ast }
    \test:xx { \token_to_str:N ? }    { \exp_not:N \ast }
    \test:xx { \exp_not:N * }         { \exp_not:N \que }
    \test:xx { \token_to_str:N * }    { \exp_not:N \que }
    \test:xx { \exp_not:N ? }         { \exp_not:N \que }
    \test:xx { \token_to_str:N ? }    { \exp_not:N \que }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\char_set_catcode_active:N \*
\cs_set_protected:Npn \test:Nnn #1#2#3
  { #1 #2 { \TRUE \use_none:n } { \FALSE \use_none:n } #3 }
\cs_generate_variant:Nn \test:Nnn { Nnx , Nxn }
\TIMO

\TEST { Peek~active~characters~vs~control~sequences }
  {
    \cs_set_eq:NN * \use_none:n
    \test:Nnn \peek_catcode:NTF  * \scan_stop:
    \test:Nnn \peek_catcode:NTF  \scan_stop: *
    \test:Nnn \peek_catcode:NTF  * \use_none:n
    \test:Nnn \peek_catcode:NTF  \use_none:n *
    \test:Nnx \peek_catcode:NTF  * { \token_to_str:N * }
    \test:Nxn \peek_catcode:NTF  { \token_to_str:N * } *
    \test:Nnn \peek_charcode:NTF * \scan_stop:
    \test:Nnn \peek_charcode:NTF \scan_stop: *
    \test:Nnn \peek_charcode:NTF * \use_none:n
    \test:Nnn \peek_charcode:NTF \use_none:n *
    \test:Nnx \peek_charcode:NTF * { \token_to_str:N * }
    \test:Nxn \peek_charcode:NTF { \token_to_str:N * } *
    \test:Nnn \peek_meaning:NTF  * \scan_stop:
    \test:Nnn \peek_meaning:NTF  \scan_stop: *
    \test:Nnn \peek_meaning:NTF  * \use_none:n
    \test:Nnn \peek_meaning:NTF  \use_none:n *
    \test:Nnx \peek_meaning:NTF  * { \token_to_str:N * }
    \test:Nxn \peek_meaning:NTF  { \token_to_str:N * } *
    \SEPARATOR
    \cs_set_eq:NN * \scan_stop:
    \test:Nnn \peek_catcode:NTF  * \scan_stop:
    \test:Nnn \peek_catcode:NTF  \scan_stop: *
    \test:Nnn \peek_catcode:NTF  * \use_none:n
    \test:Nnn \peek_catcode:NTF  \use_none:n *
    \test:Nnx \peek_catcode:NTF  * { \token_to_str:N * }
    \test:Nxn \peek_catcode:NTF  { \token_to_str:N * } *
    \test:Nnn \peek_charcode:NTF * \scan_stop:
    \test:Nnn \peek_charcode:NTF \scan_stop: *
    \test:Nnn \peek_charcode:NTF * \use_none:n
    \test:Nnn \peek_charcode:NTF \use_none:n *
    \test:Nnx \peek_charcode:NTF * { \token_to_str:N * }
    \test:Nxn \peek_charcode:NTF { \token_to_str:N * } *
    \test:Nnn \peek_meaning:NTF  * \scan_stop:
    \test:Nnn \peek_meaning:NTF  \scan_stop: *
    \test:Nnn \peek_meaning:NTF  * \use_none:n
    \test:Nnn \peek_meaning:NTF  \use_none:n *
    \test:Nnx \peek_meaning:NTF  * { \token_to_str:N * }
    \test:Nxn \peek_meaning:NTF  { \token_to_str:N * } *
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Peek~N~type~with~outer~macro }
  {
    \peek_N_type:TF { \TRUE } { \FALSE }
    \tex_outer:D \tex_def:D \a { ! }
    \peek_N_type:TF { \TRUE } { \FALSE } \a
    \tex_def:D \a { outer }
    \peek_N_type:TF { \TRUE } { \FALSE } \a
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\END
