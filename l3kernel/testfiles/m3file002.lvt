%
% Copyright (C) 2014 The LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}



% Leave some padding so that the line numbers
% of the tests don't change later on.



\RequirePackage[check-declarations,log-functions,native-drivers]{expl3}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

\OMIT
\tl_new:N  \filea
\tl_new:N  \fileb
\tl_set:Nn \filea { filetest.txt }
\tl_set:Nn \fileb { NotAFile.xxx.yyy.zzz }
\tl_new:N \l_A_tl
\tl_new:N \l_B_tl
\tl_new:N \l_C_tl
\cs_new_nopar:Npn \test_wrapping:
  { \int_set:Nn \tex_newlinechar:D { `, } }
\cs_new:Npn \test_newline: { , }
% Ugly, makes sure lines are not too long
% to avoid LuaTeX line-wrapping differences.
\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Set~tl~from~a~file }
  {
    \group_begin:
      \test_wrapping:
      \tl_gset_from_file:Nnn \l_A_tl { } { \filea }
      \tl_set_from_file:Nnn \l_B_tl { \ExplSyntaxOff } { \filea }
      \tl_gset_from_file:Nnn \l_C_tl
        {
          \ExplSyntaxOff
          \int_set:Nn \tex_endlinechar:D { -1 }
        }
        { \filea }
      \TYPE
        {
          | \tl_to_str:N \l_A_tl | \test_newline:
          | \tl_to_str:N \l_B_tl | \test_newline:
          | \tl_to_str:N \l_C_tl | \test_newline:
        }
    \group_end:
    \tl_if_empty:NT \l_A_tl { \ERROR }
    \tl_if_empty:NF \l_B_tl { \ERROR }
    \tl_if_empty:NT \l_C_tl { \ERROR }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_clear:N \l_A_tl
\tl_clear:N \l_B_tl
\tl_clear:N \l_C_tl
\TIMO

\TEST { Set~tl~from~a~file~with~expansion }
  {
    \group_begin:
      \test_wrapping:
      \tl_gset_from_file_x:Nnn \l_A_tl { } { \filea }
      \tl_set_from_file_x:Nnn \l_B_tl { \ExplSyntaxOff } { \filea }
      \tl_gset_from_file_x:Nnn \l_C_tl
        {
          \ExplSyntaxOff
          \int_set:Nn \tex_endlinechar:D { `\\ }
          \cs_set:cpn { } { / \test_newline: }
        }
        { \filea }
      \TYPE
        {
          | \tl_to_str:N \l_A_tl | \test_newline:
          | \tl_to_str:N \l_B_tl | \test_newline:
          | \tl_to_str:N \l_C_tl | \test_newline:
        }
    \group_end:
    \tl_if_empty:NT \l_A_tl { \ERROR }
    \tl_if_empty:NF \l_B_tl { \ERROR }
    \tl_if_empty:NT \l_C_tl { \ERROR }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Set~tl~from~inexistent~file }
  {
    \tl_set:Nn \l_A_tl { A }
    \tl_set_from_file:Nnn \l_A_tl { \ERROR } { \fileb }
    \tl_gset_from_file:Nnn \l_A_tl { \ERROR } { \fileb }
    \tl_set_from_file_x:Nnn \l_A_tl { \ERROR } { \fileb }
    \tl_gset_from_file_x:Nnn \l_A_tl { \ERROR } { \fileb }
    \TYPE { | \tl_to_str:N \l_A_tl | }
  }

\END
