%
% Copyright (C) 2012 LaTeX3 Project
%
\input{regression-test}

\RequirePackage[check-declarations,log-functions]{expl3}

\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
  \cs_set:Npn \test:n #1
    {
      \tl_lower_case:n {#1}
      \NEWLINE
      \tl_upper_case:n {#1}
      \NEWLINE
      \tl_mixed_case:n {#1}
    }
  \cs_set:Npn \test:nn #1#2
    {
      \tl_lower_case:nn {#1} {#2}
      \NEWLINE
      \tl_upper_case:nn {#1} {#2}
      \NEWLINE
      \tl_mixed_case:nn {#1} {#2}
    }
\TIMO

\TESTEXP { Basic~case~changing }
  {
    \test:n { Hello~world~\par with~\ERROR & # }
  }

\TESTEXP { Preventing~case~changes }
  {
    \test:n { {Hello}~world~\par with~\ERROR & # }
  }

\TESTEXP { Mixed~case~basics }
  {
    \tl_mixed_case:n { hello~world }
    \NEWLINE
    \tl_mixed_case:n { HELLO~WORLD }
    \NEWLINE
    "\tl_mixed_case:n { ~hello~world }"
    \NEWLINE
    "\tl_mixed_case:n { ~HELLO~WORLD }"
    \NEWLINE
    \tl_mixed_case:n { {h}ello~world }
    \NEWLINE
    \tl_mixed_case:n { {H}ELLO~WORLD }
    \NEWLINE
    \tl_mixed_case:n { { } hello world }
    \NEWLINE
    \tl_mixed_case:n { { \prg_do_nothing: } hello world }
  }

\TESTEXP { Mixed~case~skipping~chars }
  {
    \tl_mixed_case:n { `hic~sunt~leones' }
    \NEWLINE
    \tl_mixed_case:n { ``hic~sunt~leones'' }
    \NEWLINE
    \tl_mixed_case:n { ([hic~sunt~leones]) }
    \NEWLINE
  }

\TEST { Category~code~weirdness }
  {
    \group_begin:
      \OMIT
        \tl_set:Nn \l_tmpb_tl { qwerty }
        \char_set_catcode_active:n { `Q }
        \char_set_catcode_math_subscript:n { `W }
      \TIMO
      \tl_set:Nx \l_tmpa_tl { \tl_lower_case:n { QWERTY } }
      \tl_if_eq:NNTF \l_tmpa_tl \l_tmpb_tl \TRUE \ERROR
    \group_end:
    \group_begin:
      \OMIT
        \tl_set:Nn \l_tmpb_tl { QWERTY }
        \char_set_catcode_active:n { `q }
        \char_set_catcode_math_subscript:n { `w }
      \TIMO
      \tl_set:Nx \l_tmpa_tl { \tl_upper_case:n { qwerty } }
      \tl_if_eq:NNTF \l_tmpa_tl \l_tmpb_tl \TRUE \ERROR
    \group_end:
    \group_begin:
      \OMIT
        \tl_set:Nn \l_tmpb_tl { Qwerty }
        \char_set_catcode_active:n { `q }
        \char_set_catcode_math_subscript:n { `w }
      \TIMO
      \tl_set:Nx \l_tmpa_tl { \tl_mixed_case:n { qwerty } }
      \tl_if_eq:NNTF \l_tmpa_tl \l_tmpb_tl \TRUE \ERROR
    \group_end:
  }

\TESTEXP { Language~based~case~changing~but~nothing }
  {
    \test:nn { lt } { No~problems }
    \NEWLINE
    \test:nn { tr } { No~problems }
  }

\TESTEXP { Unicode~case~changing }
  {
    \test:n { åéîøὭдαƐ }
  }

\TESTEXP { Unicode~case~changing~exceptions }
  {
    \test:n { Fußball }
  }

\TESTEXP { The~final~sigma~rule }
  {
    \test:n { ὈΔΥΣΣΕΎΣ~(ὈΔΥΣΣΕΎΣ)~ὈΔΥΣΣΕΎΣ,~ὈΔΥΣΣΕΎΣ{}~ὈΔΥΣΣΕΎΣ\noop }
    \NEWLINE
    \test:n { ὈΔΥΣΣΕΎΣ }
  }

\TESTEXP { Turkish/Azeri }
  {
    \tl_lower_case:nn { tr } { RAGIP~HULÛSİ~ÖZDEM } \NEWLINE
    \tl_lower_case:n         { RAGIP~HULÛSİ~ÖZDEM }
    \NEWLINE
    \tl_upper_case:nn { tr } { Ragıp~Hulûsi~Özdem } \NEWLINE
    \tl_upper_case:n         { Ragıp~Hulûsi~Özdem }
    \NEWLINE
    \tl_mixed_case:nn { tr } { Ragıp~Hulûsi~Özdem } \NEWLINE
    \tl_mixed_case:n         { Ragıp~Hulûsi~Özdem }
    \NEWLINE
    \tl_mixed_case:nn { tr } { ıp~Hulûsi~Özdem } \NEWLINE
    \tl_mixed_case:n         { ıp~Hulûsi~Özdem }
  }

\TESTEXP { Lithuanian }
  {
    \tl_lower_case:nn { lt } { ÌÍĨÌÍĨJ̀J́J̃Į̀Į́Į̃ }
    \tl_lower_case:n         { ÌÍĨÌÍĨJ̀J́J̃Į̀Į́Į̃ }
    \NEWLINE
    \tl_upper_case:nn { lt } { i̇̀i̇̀i̇̃i̇̀i̇́i̇̃j̇̀j̇́j̇̃į̇̀į̇́į̇̃ }
    \tl_upper_case:n         { i̇̀i̇̀i̇̃i̇̀i̇́i̇̃j̇̀j̇́j̇̃į̇̀į̇́į̇̃ }
    \NEWLINE
    \tl_mixed_case:nn { lt } { i̇̀i̇̀i̇̃i̇̀i̇́i̇̃j̇̀j̇́j̇̃į̇̀į̇́į̇̃ÌÍĨÌÍĨJ̀J́J̃Į̀Į́Į̃ }
    \tl_mixed_case:n         { i̇̀i̇̀i̇̃i̇̀i̇́i̇̃j̇̀j̇́j̇̃į̇̀į̇́į̇̃ÌÍĨÌÍĨJ̀J́J̃Į̀Į́Į̃ }
  }

\TESTEXP { Dutch }
  {
    \tl_lower_case:nn { nl } { IJSSELMEER }
    \tl_lower_case:n         { IJSSELMEER }
    \NEWLINE
    \tl_upper_case:nn { nl } { ijsselmeer }
    \tl_upper_case:n         { ijsselmeer }
    \NEWLINE
    \tl_mixed_case:nn { nl } { ijsselmeer }
    \tl_mixed_case:n         { ijsselmeer }
    \NEWLINE
    \tl_mixed_case:nn { nl } { im }
    \tl_mixed_case:n         { im }
  }

\TESTEXP { Mixed~case~exceptions }
  {
    \tl_mixed_case:n { ßoo }
    \NEWLINE
    \tl_mixed_case:n { ǅ! }
    \NEWLINE
  }
  
\OMIT
  \tl_put_right:Nn \l_tl_case_change_exclude_tl { \emph }
\TIMO

\TESTEXP { Case~changing~braced~arguments }
  {
    \test:n { FOO~\emph { BAR } ~ { BAZ } }
    \NEWLINE
    \test:n { \emph { BAR } ~ { BAZ } }
  }

\OMIT
  \tl_set:Nn \l_tmpa_tl { Hello }
  \tl_set:Nn \l_tmpb_tl { \l_tmpa_tl }
  \cs_set_protected:Npn \cs_tmp:w { \l_tmpa_tl }
\TIMO

\TESTEXP { Expanding~content }
  {
    \test:n { Some~text~\l_tmpa_tl } 
    \NEWLINE
    \test:n { \l_tmpa_tl \c_space_tl some text }
    \NEWLINE
    \test:n { Some~text~\l_tmpb_tl } 
    \NEWLINE
    \test:n { \l_tmpb_tl \c_space_tl some text }
    \NEWLINE
    \test:n { Some~text~\cs_tmp:w } 
    \NEWLINE
    \test:n { \cs_tmp:w \c_space_tl some text }
  }

\makeatletter
\TEST { LICR-based~input }
  {
    \OMIT
      \cs_set_protected:Npn \cs_tmp:w #1
        {
          \protected@edef \l_tmpa_tl {#1}
          \tl_show:N \l_tmpa_tl
        }
    \TIMO
    \cs_tmp:w { \tl_upper_case:n { \aa \ss \oe \i \j } }
    \cs_tmp:w { \tl_lower_case:n { \AA \SS \OE i j } }
    \cs_tmp:w { \tl_upper_case:n { \cyra \cyrie \cyrrhk \cyryu } }
    \cs_tmp:w { \tl_lower_case:n { \CYRA \CYRIE \CYRRHK \CYRYU } }
    \cs_tmp:w { \tl_upper_case:n { \textalpha \textupsilon \textsigma } }
    \cs_tmp:w { \tl_lower_case:n { \textAlpha \textUpsilon \textSigma } }
    \cs_tmp:w
       { \tl_upper_case:n { \accdialytikatonos \textalpha \textupsilon } }
    \cs_tmp:w { \tl_lower_case:n { \LGR@accdropped \textAlpha \textUpsilon } }
    \cs_tmp:w { \tl_upper_case:n { \textomega \ypogegrammeni \ohorn } }
    \cs_tmp:w { \tl_lower_case:n { \textOmega \prosgegrammeni \Ohorn } }
    \cs_tmp:w { \tl_mixed_case:n { \aa \OE \textAlpha } }
  }
\makeatother

\TESTEXP { Math-mode~escape }
  {
    \test:n { Some~text~$y~=~mx~+~c$ }
    \NEWLINE 
    \test:n { $y~=~mx~+~c$~text }
    \NEWLINE
    \test:n { Opps~not~close~token~in~$y~=~mx~+~c }
  }
\END