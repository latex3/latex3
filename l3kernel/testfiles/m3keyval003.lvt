\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff
\begin{document}
\START
\AUTHOR{Jonathan P. Spratte}
\ExplSyntaxOn

\OMIT
\cs_set:Npn \KV_check_key:nn #1#2
  {
    \str_if_eq:nnTF {#1} {#2} { 1 } { 0 }
    .
  }
\cs_set:Npn \KV_check_key_val:nnnn #1#2#3#4
  {
    \str_if_eq:nnTF {#1} {#3} { 1 } { 0 }
    \str_if_eq:nnTF {#2} {#4} { 1 } { 0 }
  }
\group_begin:
\char_set_catcode_active:N ;
\char_set_catcode_active:N "
\char_set_lccode:nn { `\; } { `\, }
\char_set_lccode:nn { `\" } { `\= }
\tl_new:N \l_keyval_errors_tl
\tex_lowercase:D
  {
    \group_end:
    \cs_set_nopar:Npn \l_keyval_errors_tl
      { a1=b1=c1, a2=b2"c2; a3"b3=c3, a4"b4"c4, = v, {}, }
  }
\TIMO

\TESTEXP{pass~ in~ several~ tokens}
  {
    \keyval_parse:nnn
      { \KV_check_key:nn { key } }
      { \KV_check_key_val:nnnn { key } { val } }
      { k = v, k, key=val, key }
    \NEWLINE
    \use:e
      {
        \keyval_parse:nnn
          { \KV_check_key:nn { key } }
          { \KV_check_key_val:nnnn { key } { val } }
          { k = v, k, key=val, key }
      }
  }

\TESTEXP{errors~ with~ several~ tokens}
  {
    \exp_args:Nnno
    \keyval_parse:nnn
      { \KV_check_key:nn { key } }
      { \KV_check_key_val:nnnn { key } { val } }
      { \l_keyval_errors_tl, key=val, key }
  }

\END
