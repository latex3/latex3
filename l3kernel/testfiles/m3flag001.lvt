%
% Copyright (C) The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\def\foo{foo}
\TIMO

\TEST { flag_new }
  {
    {
      \flag_if_exist:nT {A} { \ERROR }
      \flag_new:n {A}
      \TYPE { \cs_meaning:N \l_A_flag }
    }
    \flag_if_exist:nF {A} { \ERROR }
    \TYPE { \cs_meaning:N \l_A_flag }
    \flag_new:n {A}
    \flag_new:n {B}
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\flag_new:n { C }
\cs_new:Npn \test:
  {
    \flag_if_raised:nTF { C } { T } { F } ~
    \flag_height:n { C } ~
    \cs_meaning:c { l_C_flag 0 } ~
    \cs_meaning:c { l_C_flag 1 } ~
    \cs_meaning:c { l_C_flag 2 } ~ \NEWLINE
  }
\TIMO

\TEST { raise,~test,~height }
  {
    { \TYPE { \prg_replicate:nn {3} { \test: \flag_raise:n {C} } } }
    \TYPE { \test: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { zero }
  {
    \TYPE { \test: \flag_raise:n {C} \test: }
    {
      \prg_replicate:nn {10} { \flag_raise:n {C} }
      \flag_clear:n {C}
      \TYPE { \test: \prg_replicate:nn {10} { \flag_raise:n {C} } \test: }
    }
    \TYPE { \test: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { show,~log }
  {
    \flag_raise:n {C}
    \flag_ensure_raised:n {C}
    \flag_show:n {C}
    \flag_clear:n {C}
    \flag_ensure_raised:n {C}
    \flag_raise:n {C}
    \flag_raise:n {C}
    \flag_log:n {C}
    \flag_log:n { other }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { undefined }
  {
    \flag_clear:n { other }
    \flag_raise:n { other }
    \TYPE { | \flag_raise:n { other } | }
    \TYPE { | \flag_ensure_raised:n { other } | }
    \TYPE { | \flag_height:n { other } | }
    \TYPE { | \flag_if_raised:nTF { other } {T} {F} | }
    \TYPE { | \flag_if_raised:nT { other } {T} | }
    \TYPE { | \flag_if_raised:nF { other } {F} | }
    \TYPE { | \bool_if:nTF { \flag_if_raised_p:n { other } } {T} {F} | }
  }

\END
