This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Frank Mittelbach
============================================================
TEST 1: allocating new registers; no worries
============================================================
Defining \l_testa_int on line ...
\l_testa_int=\count...
Defining \g_testa_int on line ...
\g_testa_int=\count...
Defining \g_testb_int on line ...
\g_testb_int=\count...
============================================================
============================================================
TEST 2: allocating same name: errors expected
============================================================
! LaTeX Error: Control sequence \l_testa_int already defined.
For immediate help type H <return>.
 ...                                              
l. ...  }
This is a coding error.
LaTeX has been asked to create a new control sequence '\l_testa_int' but this
name has already been used elsewhere.
The current meaning is:
  \count301
Defining \l_testa_int on line ...
\l_testa_int=\count...
! LaTeX Error: Control sequence \g_testa_int already defined.
For immediate help type H <return>.
 ...                                              
l. ...  }
This is a coding error.
LaTeX has been asked to create a new control sequence '\g_testa_int' but this
name has already been used elsewhere.
The current meaning is:
  \count302
Defining \g_testa_int on line ...
\g_testa_int=\count...
============================================================
============================================================
TEST 3: allocate or clear
============================================================
Defining \l_testb_int on line ...
\l_testb_int=\count...
0
0
0
0
10
0
0
0
============================================================
============================================================
TEST 4: incrementing and decrementing: expect 3, -1
============================================================
3
-1
============================================================
============================================================
TEST 5: generating overflow: expect 2147483647, -2147483648, 2147483647
============================================================
2147483647
-2147483648
2147483647
============================================================
============================================================
TEST 6: incrementing and decrementing: expect -2
============================================================
-2
============================================================
============================================================
TEST 7: trying invalid variables: expect errors
============================================================
! You can't use `the character -' after \advance.
\__debug_int_decr:N #1->\tex_advance:D #1-
                                          \c_one_int 
l. ...  }
I'm forgetting what you said and not changing anything.
============================================================
============================================================
TEST 8: using num expr
============================================================
185
-30
24
-30
! Arithmetic overflow.
\__debug_int_set:Nn ..._eval:w #2\__int_eval_end: 
l. ...  }
I can't evaluate this expression,
since the result is out of range.
0
============================================================
============================================================
TEST 9: adding and subtracting
============================================================
50
35
6
-19
============================================================
============================================================
TEST 10: converting numbers: 3 i L ix XXI
============================================================
3 i L ix XXI 
============================================================
============================================================
TEST 11: converting numbers: expect !! !! !! !a!
============================================================
!! !! !! !a! 
============================================================
============================================================
TEST 12: converting numbers: expect !! !! !! !i!
============================================================
!! !! !! !i! 
============================================================
============================================================
TEST 13: converting numbers (huge values)
============================================================
fxshrxw
============================================================
============================================================
TEST 14: evaluating integer expressions: 10 NO NO YES YES YES
============================================================
10 NO NO YES YES YES
============================================================
============================================================
TEST 15: converting from and to base: expect 21 17
============================================================
21 17
============================================================
============================================================
TEST 16: Case statements
============================================================
YES
YES
YES
============================================================
