%
% Copyright (C) 2020 The LaTeX3 Project
\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { No~clobbering~of~threads~with~non-optimizable~\c }
  {
    \regex_match:nnTF { .a|\c{fo.}b } { \foo a } { \TRUE } { \ERROR }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { No~groups~within~\c }
  {
    \tl_set:Nn \l_tmpa_tl { \aa \bb }
    \regex_replace_all:nnN { \c{(.*)}(.) } { \0,\1,\2,\3 } \l_tmpa_tl
    \tl_show:N \l_tmpa_tl
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_set:Npn \test:w #1 \s_stop { \TYPE { | \exp_not:n {#1} | } }
\cs_set:Npn \test_show:w { \exp_after:wN \test:w \token_to_meaning:N }
\TIMO

\TEST { Peek~regex }
  {
    \peek_regex:nTF { } { \TRUE \test:w } { \ERROR \test:w } \aaa \s_stop
    \peek_regex:nT { a } { \TRUE \test:w } a \s_stop
    \peek_regex:nF { . (. a()) } { \ERROR \test:w } \test:w { a b \s_stop \test_show:w } \s_stop
    \peek_regex:nTF { a \{ } { \TRUE \test:w } { \ERROR \test:w } a { b } \s_stop
    \peek_regex:nTF { \cL. } { \ERROR \test:w } { \FALSE \test:w } \aaa \s_stop
    \peek_regex:nT { b } { \ERROR \test:w } \test:w a \s_stop
    \peek_regex:nF { \c[^C] . (. a()) } { \FALSE \test:w } \test:w { a b } c \s_stop
    \peek_regex:nTF { a \{ \b c } { \ERROR \test:w } { \FALSE \test:w } a { b } \s_stop
    \SEPARATOR
    \peek_regex_remove:nTF { } { \TRUE \test:w } { \ERROR \test:w } \aaa \s_stop
    \peek_regex_remove:nT { a } { \TRUE \test:w } a \s_stop
    \peek_regex_remove:nF { . (. a()) } { \ERROR \test:w } \test:w { a b \s_stop \test_show:w } \s_stop
    \peek_regex_remove:nTF { a \{ } { \TRUE \test:w } { \ERROR \test:w } a { b \s_stop \test_show:w } \s_stop
    \peek_regex_remove:nTF { \cL. } { \ERROR \test:w } { \FALSE \test:w } \aaa \s_stop
    \peek_regex_remove:nT { b } { \ERROR \test:w } \test:w a \s_stop
    \peek_regex_remove:nF { \c[^C] . (. a()) } { \FALSE \test:w } \test:w { a b } c \s_stop
    \peek_regex_remove:nTF { a \{ \b c } { \ERROR \test:w } { \FALSE \test:w } a { b } \s_stop
  }

\TEST { Peek~regex~compiled }
  {
    \regex_set:Nn \l_tmpa_regex { a | \c{test:w} }
    \peek_regex:NTF \l_tmpa_regex { \TRUE \test:w } { \ERROR \test:w } a \s_stop
    \peek_regex:NT \l_tmpa_regex { \TRUE \test:w } a \s_stop
    \peek_regex:NF \l_tmpa_regex { \ERROR \test:w } \test:w a \s_stop
    \peek_regex_remove:NTF \l_tmpa_regex { \TRUE \test:w } { \ERROR \test:w } a \s_stop
    \peek_regex_remove:NT \l_tmpa_regex { \TRUE \test:w } a \s_stop
    \peek_regex_remove:NF \l_tmpa_regex { \ERROR \test:w } \test:w a \s_stop
  }

\TEST { Peek~regex~replace }
  {
    \if_false: { \fi:
    \peek_regex_replace_once:nnTF { } { \cB\{ } { \TRUE \test:w } { \ERROR \test:w } \aaa } b \s_stop
    \cs_show:c { a ~ a }
    \peek_regex_replace_once:nnT { a } { \cC" \c{\0\u{c_space_tl}\0} } { \TRUE \test:w } a \s_stop
    \cs_show:c { a ~ a }
    \peek_regex_replace_once:nnTF { \c{a} \{ } { \0\0\cE\} }
      { \TRUE \test:w } { \ERROR \test:w } \a { b } \s_stop
    \peek_regex_replace_once:nnTF { \cL. } { \cL(X } { \ERROR \test:w } { \FALSE \test:w } \aaa \s_stop
    \peek_regex_replace_once:nnT { b } { \cL(X } { \ERROR \test:w } \test:w a \s_stop
    \peek_regex_replace_once:nnF { \c[^C] . (. a()) } { \cB\< } { \FALSE \test:w } \test:w { a b } c \s_stop
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
