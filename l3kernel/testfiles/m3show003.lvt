%
% Copyright (C) 2014,2015,2017,2018,2020,2021 The LaTeX Project
%
\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn


\OMIT % Declarations put register numbers, and those can
      % change if modules declare more or less variables.
\prop_clear_new:N \l_tmpa_prop
\muskip_zero_new:N \l_tmpa_muskip
\TIMO

\OMIT
\bool_new:N \l_testa_bool
\TIMO

\TEST { bool }
  {
    \bool_log:N \l_testa_bool
    \bool_log:N \l_testb_bool
    \bool_set_true:N \l_testa_bool
    \bool_log:N \l_testa_bool
    \bool_log:c { c_true_bool }
    \bool_log:c { c_false_bool }
    \bool_log:n
      { \c_true_bool && !( \int_compare_p:n { 1=2 } || \c_false_bool ) }
    \bool_log:n
      { \c_true_bool && !( \int_compare_p:n { 1=2 } || \c_true_bool ) }
  }


\TEST { clist }
  {
    \clist_new:N \l_my_very_very_very_very_very_very_long_clist
    \clist_set:Nx \l_my_very_very_very_very_very_very_long_clist
      { item2 , item1 , \prg_replicate:nn { 20 } { abcdefghij ~ } , 2 }
    \clist_log:N \l_my_very_very_very_very_very_very_long_clist
    \clist_log:c { c_empty_clist }
    \clist_log:n { 1 , 2 , ~ , { } , 3 }
  }


\TEST { COFFIN }
  {
    \hcoffin_set:Nn \l_tmpa_coffin
      { \hbox:n { \vbox_to_ht:nn { 12 pt } { } } ~ \hbox:n { } }
    \coffin_log_structure:N \l_tmpa_coffin
    \vcoffin_set:Nnn \l_tmpb_coffin { 20pt }
      { \hbox:n { ~ \vbox:n { } ~ } \hbox_to_wd:nn { 15pt } { } }
    \coffin_log_structure:N \l_tmpb_coffin
    \coffin_join:NnnNnnnn
      \l_tmpa_coffin { hc } { vc }
      \l_tmpb_coffin { l  } { t  }
      { 3pt } { -5pt }
    \coffin_log_structure:c { l_tmpa_coffin }
  }


\OMIT
\cs_set:Npn \tmp:w
  #1 ~ abcdefghi ~ jklmnopqr ~ stuvwxyz ~
  abcdef ~ ghi ~ jklmn ~ opqrstuvwxyz ~ #2
  {
    Abc~def,~ghijkl~m!~No,~pqrst-uv-wxyzab.~Cdefghi~jkl.~Mnopqrst~uvw~xyz.~
    Abc~def,~ghijkl~m!~No,~pqrst-uv-wxyzab.~Cdefghi~jkl.~Mnopqrst~uvw~xyz.~
    Abc~def,~ghijkl~m!~No,~pqrst-uv-wxyzab.~Cdefghi~jkl.~Mnopqrst~uvw~xyz.~
  }
\cs_set_eq:cN { \prg_replicate:nn { 60 } { a } } &
\cs_set_eq:cN { \prg_replicate:nn { 65 } { a } } &
\cs_set_eq:cN { \prg_replicate:nn { 70 } { a } } &
\cs_set_eq:cN { \prg_replicate:nn { 75 } { a } } &
\TIMO

\TEST { CS }
  {
    \cs_log:N \tmp:w
    \cs_log:c { \prg_replicate:nn { 60 } { a } }
    \cs_log:c { \prg_replicate:nn { 65 } { a } }
    \cs_log:c { \prg_replicate:nn { 70 } { a } }
    \cs_log:c { \prg_replicate:nn { 75 } { a } }
    \cs_log:N &
    \cs_log:c { this_is_not_defined: }
  }


\TEST { dim }
  {
    \dim_set:Nn \l_tmpa_dim { 1pt }
    \dim_log:N \l_tmpa_dim
    \dim_log:c { c_zero_dim }
    \dim_log:n { 2pt + 3pt }
    \dim_log:n { 2.3 \l_tmpa_dim }
  }

\fp_set:Nn \l_tmpa_fp { 1 }
\TEST { fp }
  {
    \fp_log:N \l_tmpa_fp
    \fp_log:c { c_pi_fp }
    \fp_log:n { 1 + 2 }
  }

\OMIT \int_const:Nn \c_test_int { 16 } \TIMO
\TEST { int }
  {
    \int_add:Nn \l_tmpa_int { 5 }
    \int_log:N \l_tmpa_int
    \int_log:c { c_test_int }
    \int_log:n { 2 + 3 * \l_tmpa_int }
  }


\TEST { io }
  {
    \ior_log_list:
    \iow_log_list:
  }


\OMIT
\keys_define:nn { test }
  {
    text     .tl_set:c    = { l_tmpa_tl } ,
    expanded .tl_gset_x:N = \l_tmpb_tl    ,
  }
\TIMO

\TEST { keys }
  {
    \keys_log:nn { test } { text }
    \keys_log:nn { test } { expanded }
  }


\TEST { muskip }
  {
    \muskip_set:Nn \l_tmpa_muskip { 1mu plus 2mu minus 3mu }
    \muskip_log:N \l_tmpa_muskip
    \muskip_log:c { c_zero_muskip }
    \muskip_log:n { 2mu plus 3mu - -2mu minus 4mu }
    \muskip_log:n { 3.4 \l_tmpa_muskip }
  }


\OMIT
\cs_generate_variant:Nn \prop_put:Nnn { Nf , Nnf }
\TIMO

\TEST { prop }
  {
    \prop_put:Nnn \l_tmpa_prop {key1} {val1}
    \prop_put:Nnn \l_tmpa_prop {key2} {val2}
    \prop_put:Nfn \l_tmpa_prop
      { \prg_replicate:nn { 40 } { the ~ key1 ~ } } { val1 }
    \prop_put:Nnf \l_tmpa_prop
      { key2 } { \prg_replicate:nn { 40 } { the ~ val2 ~ } }
    \prop_log:N  \l_tmpa_prop
    \prop_log:c { c_empty_prop }
  }


\OMIT
\cs_generate_variant:Nn \seq_push:Nn { Nf }
\TIMO

\TEST { seq }
  {
    \seq_push:Nn \l_tmpa_seq { item1 }
    \seq_push:Nn \l_tmpa_seq { item2 }
    \seq_log:N  \l_tmpa_seq
    \seq_push:Nf \l_tmpa_seq { \prg_replicate:nn { 40 } { ABCD ~ efghi ~ } }
    \seq_push:Nf \l_tmpa_seq { \prg_replicate:nn { 40 } { xy\\~ } }
    \seq_log:N  \l_tmpa_seq
    \seq_log:c { c_empty_seq }
  }


\TEST { skip }
  {
    \skip_set:Nn \l_tmpa_skip { 1pt plus 2pt minus 3pt }
    \skip_log:N \l_tmpa_skip
    \skip_log:c { c_zero_skip }
    \skip_log:n { 2pt plus 3pt - -2pt minus 4pt }
    \skip_log:n { 3.4 \l_tmpa_skip }
  }


\TEST { tl }
  {
    \tl_set:Nn \l_tmpa_tl { tokens }
    \tl_set:Nf \l_tmpb_tl { \prg_replicate:nn { 40 } { abcde\\g ~ } }
    \tl_log:N \l_tmpa_tl
    \tl_log:c { c_empty_tl }
    \tl_log:n { tokens }
    \exp_args:No \tl_log:n { \l_tmpb_tl }
  }

\TEST { long~lines }
  {
    \cs_set:Npx \foo { \prg_replicate:nn { 38 } { A ~ } }
    \cs_show:N \foo
    \cs_log:N \foo
  }

\TEST { special~integers }
  {
    {
      \iow_term:x { \int_use:N \tex_currentgrouptype:D }
      \int_show:N \tex_currentgrouptype:D
      \fp_log:n { \tex_currentgrouptype:D + 1 - 1 }
      \iow_term:x { \int_use:N \tex_currentgrouplevel:D }
      \int_log:N \tex_currentgrouplevel:D
      \dim_show:n { \tex_currentgrouplevel:D pt / 4 * 4 }
    }
  }


\TEST { Bad~types }
  {
    \bool_show:N A
    \bool_log:N \c_empty_tl
    \tl_set:Nn \l_tmpa_tl { a , }
    \clist_show:N \l_tmpa_tl
    \str_show:N \l_tmpa_tl
    \dim_show:N \l_tmpa_int % not caught
    \int_log:N \l_tmpa_dim % not caught
    \fp_show:N \l_tmpa_tl
    \tl_set:Nx \l_tmpa_tl { \c_one_fp ; }
    \fp_log:N \l_tmpa_tl
    \prop_show:N \l_tmpa_tl
    \seq_show:N \l_tmpa_tl
    \seq_set_split:Nnn \l_tmpa_seq { } { ab }
    \tl_set:Nx \l_tmpa_tl { \exp_not:V \l_tmpa_seq ? { c } }
    \seq_show:N \l_tmpa_tl
    \tl_show:N \use:n
  }

\TEST { Bad~types~for~regex }
  {
    \regex_show:N \use:n
    \regex_show:N \l_tmpa_tl
    \regex_set:Nn \l_tmpa_regex { a | b | (cd[ef]*?\K) }
    \tl_set:Nx \l_tmpa_tl
      { \exp_after:wN \use_none:n \l_tmpa_regex }
    \regex_show:N \l_tmpa_tl
  }

% padding to help keep line number constant
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%

\TEST { group_show_list }
  {
    \hbox:n { \vbox:n { { \group_log_list: } } }
    \group_show_list:
  }

\END
