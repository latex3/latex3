%
% Copyright (C) 2009-2012,2018,2021 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\TYPE { \meaning \l_peek_token }
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff


\begin{document}
\START
\AUTHOR{Will Robertson}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{peek~after}{
  {
    \peek_after:Nw   \use_none:n l
    \peek_gafter:Nw  \use_none:n g
    \TYPE { \meaning \l_peek_token }
    \TYPE { \meaning \g_peek_token }
  }
  \TYPE { \meaning \l_peek_token }
  \TYPE { \meaning \g_peek_token }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{peek_meaning}{
  \peek_meaning:NTF !                      { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \peek_meaning:NTF !                      { \TRUE\TYPE }{ \FALSE\TYPE }~! {-}
  \peek_meaning_remove:NTF !               { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \peek_meaning_remove:NTF !               { \TRUE\TYPE }{ \FALSE\TYPE }~! {-}
  \SEPARATOR
  \peek_meaning:NT !                      { \TRUE  \TYPE } ! {-}
  \peek_meaning:NF !                      { \FALSE \TYPE }~! {-}
  \peek_meaning_remove:NT !               { \TRUE  \TYPE } ! {-}
  \peek_meaning_remove:NF !               { \FALSE \TYPE }~! {-}
}

\group_begin:
  \char_set_catcode_active:N \!
  \gdef ! {?}
  \gdef \active_bang {!}
\group_end:

\TEST{peek_meaning~again}{
  \peek_meaning:NTF ! { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \exp_after:wN \peek_meaning:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \peek_meaning:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } \active_bang {-}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{peek_charcode}{
  \exp_after:wN \peek_charcode:NTF \active_bang                      { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \exp_after:wN \peek_charcode:NTF \active_bang                      { \TRUE\TYPE }{ \FALSE\TYPE }~! {-}
  \exp_after:wN \peek_charcode_remove:NTF \active_bang               { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \exp_after:wN \peek_charcode_remove:NTF \active_bang               { \TRUE\TYPE }{ \FALSE\TYPE }~! {-}
  \SEPARATOR
  \exp_after:wN \peek_charcode:NT \active_bang                      { \TRUE  \TYPE } ! {-}
  \exp_after:wN \peek_charcode:NF \active_bang                      { \FALSE \TYPE }~! {-}
  \exp_after:wN \peek_charcode_remove:NT \active_bang               { \TRUE  \TYPE } ! {-}
  \exp_after:wN \peek_charcode_remove:NF \active_bang               { \FALSE \TYPE }~! {-}
}

\TEST{peek_charcode~again}{
  \peek_charcode:NTF ! { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \exp_after:wN \peek_charcode:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \peek_charcode:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } \active_bang {-}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{peek_catcode}{
  \peek_catcode:NTF !                      { \TRUE\TYPE }{ \FALSE\TYPE } ? {-}
  \peek_catcode:NTF !                      { \TRUE\TYPE }{ \FALSE\TYPE }~? {-}
  \peek_catcode_remove:NTF !               { \TRUE\TYPE }{ \FALSE\TYPE } ? {-}
  \peek_catcode_remove:NTF !               { \TRUE\TYPE }{ \FALSE\TYPE }~? {-}
  \SEPARATOR
  \peek_catcode:NT !                      { \TRUE  \TYPE } ? {-}
  \peek_catcode:NF !                      { \FALSE \TYPE }~? {-}
  \peek_catcode_remove:NT !               { \TRUE  \TYPE } ? {-}
  \peek_catcode_remove:NF !               { \FALSE \TYPE }~? {-}
}

\TEST{peek_catcode~again}{
  \peek_catcode:NTF ! { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \exp_after:wN \peek_catcode:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } ! {-}
  \peek_catcode:NTF \active_bang { \TRUE\TYPE }{ \FALSE\TYPE } \active_bang {-}
}

\TEST{Peek~in~alignment}{
  \begin{tabular}{cc}
    \peek_meaning:NTF ! \TRUE \ERROR ! & 1 \\
    \peek_meaning:NTF ! \ERROR \FALSE  & 1 \\
    \peek_catcode:NTF ! \TRUE \FALSE ! & 1 \\
    \peek_catcode:NTF ! \ERROR \FALSE  & 1 \\
    \peek_charcode:NTF ! \TRUE \FALSE ! & 1 \\
    \peek_charcode:NTF ! \ERROR \FALSE  & 1 \\
  \end{tabular}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Peek~N~type}{
  \peek_N_type:TF { \TRUE  } { \ERROR } !
  \peek_N_type:TF { \TRUE  } { \ERROR } \scan_stop:
  \peek_N_type:TF { \ERROR } { \FALSE } {
  \peek_N_type:TF { \ERROR } { \FALSE } }
  \peek_N_type:TF { \ERROR } { \FALSE } ~ %
  \peek_N_type:TF { \ERROR } { \FALSE } \c_group_begin_token
  \peek_N_type:TF { \ERROR } { \FALSE } \c_group_end_token
  \peek_N_type:TF { \ERROR } { \FALSE } \c_space_token
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_new_protected:Npn \test:nw #1#2 \q_stop
  { \TYPE { \tl_to_str:n { | #1 | #2 | } } }
\TIMO

\TEST { peek~collect }
  {
    \peek_catcode_collect_inline:Nn A { \test:nw {#1} } AAAABC \q_stop
    \peek_catcode_collect_inline:Nn A { \test:nw {#1} } ABC \q_stop
    \use:x
      {
        \peek_catcode_collect_inline:Nn A { \test:nw {##1} }
        \token_to_str:N A
      }
      \q_stop
    \peek_catcode_collect_inline:Nn
      \c_space_token { \test:nw {#1} } ~ \c_space_token . \q_stop
    \peek_catcode_collect_inline:Nn \c_space_token { \test:nw {#1} } { a } b \q_stop
    \peek_catcode_collect_inline:Nn \c_group_begin_token
      { \test:nw {#1} } \c_group_begin_token { \c_group_begin_token \a \q_stop
    \peek_catcode_collect_inline:Nn \c_group_end_token
      { \test:nw {#1} } \c_group_end_token } \c_group_end_token \a \q_stop

    \peek_charcode_collect_inline:Nn A { \test:nw {#1} } AAAABC \q_stop
    \peek_charcode_collect_inline:Nn A { \test:nw {#1} } ABC \q_stop
    \use:x
      {
        \peek_charcode_collect_inline:Nn A { \test:nw {##1} }
        \token_to_str:N A
      }
      \q_stop
    \peek_charcode_collect_inline:Nn
      \c_space_token { \test:nw {#1} } ~ \c_space_token . \q_stop
    \peek_charcode_collect_inline:Nn \c_space_token { \test:nw {#1} } { a } b \q_stop
    \peek_charcode_collect_inline:Nn \c_group_begin_token
      { \test:nw {#1} } \c_group_begin_token { \c_group_begin_token \a \q_stop
    \peek_charcode_collect_inline:Nn \c_group_end_token
      { \test:nw {#1} } \c_group_end_token } \c_group_end_token \a \q_stop

    \peek_meaning_collect_inline:Nn A { \test:nw {#1} } AAAABC \q_stop
    \peek_meaning_collect_inline:Nn A { \test:nw {#1} } ABC \q_stop
    \use:x
      {
        \peek_meaning_collect_inline:Nn A { \test:nw {##1} }
        \token_to_str:N A
      }
      \q_stop
    \peek_meaning_collect_inline:Nn
      \c_space_token { \test:nw {#1} } ~ \c_space_token . \q_stop
    \peek_meaning_collect_inline:Nn \c_space_token { \test:nw {#1} } { a } b \q_stop
    \peek_meaning_collect_inline:Nn \c_group_begin_token
      { \test:nw {#1} } \c_group_begin_token { \c_group_begin_token \a \q_stop
    \peek_meaning_collect_inline:Nn \c_group_end_token
      { \test:nw {#1} } \c_group_end_token } \c_group_end_token \a \q_stop
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\char_set_lccode:nn { 32 } { `* }
\TEST { \peek_remove_spaces:n }
  {
    \use:n { \peek_remove_spaces:n { \tl_show:n } ~ \c_space_token } ~ \c_space_tl
    \if_false: { \fi: \peek_remove_spaces:n { \exp_after:wN \tl_show:n \token_to_str:N }  }
    \use:x { \peek_remove_spaces:n { \tex_show:D } \c_catcode_other_space_tl }
    \tex_lowercase:D { \peek_remove_spaces:n { \tex_show:D } ~ }
  }


\TEST { \peek_remove_filler:n }
  {
    \tl_set:Nx \l_tmpa_tl { \use:n { \scan_stop: \c_space_tl } ~ \scan_stop: } 
    \use:n { \peek_remove_filler:n { \tex_show:D } ~ \c_space_token } ~ \c_space_tl
      \l_tmpa_tl _
    \peek_remove_filler:n { \tex_show:D } \undefined \scan_stop: _
  }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\END




