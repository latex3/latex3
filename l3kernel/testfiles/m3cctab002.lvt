%
% Copyright (C) 2019-2021 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\START
\AUTHOR{Phelype Oleinik, Bruno Le Floch}

\ExplSyntaxOn

\TEST { Undefined~cctab~for~\cctab_end:N }
  { \cctab_begin:N \c_some_undefined_cctab }

\TEST { Another~undefined~cctab~for~\cctab_end:N }
  {
    \int_set:Nn \l_tmpa_int { 99 }
    \cctab_begin:N \l_tmpa_int
  }

\TEST { Extra~\cctab_end: }
  { \cctab_end: }

\TEST { Nested~\cctab_begin:N }
  {
    \cctab_begin:N \c_code_cctab
      \cctab_begin:N \c_code_cctab
        \cctab_begin:N \c_code_cctab
          \cctab_begin:N \c_code_cctab
            \cctab_begin:N \c_code_cctab
            \cctab_end:
          \cctab_end:
        \cctab_end:
      \cctab_end:
    \cctab_end:
  }

\TEST { Nested~groups }
  {
    \cctab_select:N \c_code_cctab
    \group_begin:
      \cctab_select:N \c_code_cctab
      \group_begin:
        \cctab_select:N \c_code_cctab
      \group_end:
    \group_end:
  }

\TEST { Wrong~scoping }
  {
    \cctab_new:N \c_new_cctab
    \cctab_new:N \g_new_cctab
    \cctab_new:N \l_new_cctab
    \cctab_const:Nn \c_const_cctab { }
    \cctab_const:Nn \g_const_cctab { }
    \cctab_const:Nn \l_const_cctab { }
    \cctab_gset:Nn \c_const_cctab { }
    \cctab_gset:Nn \g_const_cctab { }
    \cctab_gset:Nn \l_const_cctab { }
  }

\TEST { Wrong~nesting~with~groups:~expect~three~errors~and~many~TRUE }
  {
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 } { \TRUE } { \ERROR }
    \cctab_begin:N \c_document_cctab
    \group_begin:
      \cctab_end:
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 } { \TRUE } { \ERROR }
    \group_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 8 } { \TRUE } { \ERROR }
    \SEPARATOR
    \group_begin:
      \cctab_select:N \c_initex_cctab
      \int_compare:nNnTF { \char_value_catcode:n { `\{ } } = { 12 } { \TRUE } { \ERROR }
      \cctab_begin:N \c_str_cctab
      \int_compare:nNnTF { \char_value_catcode:n { `A } } = { 12 } { \TRUE } { \ERROR }
    \group_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 8 } { \TRUE } { \ERROR }
    \cctab_end:
    \int_compare:nNnTF { \char_value_catcode:n { `\{ } } = { 12 } { \TRUE } { \ERROR }
    \SEPARATOR
    \cctab_select:N \c_code_cctab
    \group_begin:
      \cctab_select:N \c_str_cctab
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 12 } { \TRUE } { \ERROR }
      \cctab_begin:N \c_document_cctab
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 8 } { \TRUE } { \ERROR }
    \group_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 } { \TRUE } { \ERROR }
    \group_begin:
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 } { \TRUE } { \ERROR }
      \cctab_end:
      \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 12 } { \TRUE } { \ERROR }
    \group_end:
    \int_compare:nNnTF { \char_value_catcode:n { `_ } } = { 11 } { \TRUE } { \ERROR }
  }


\TEST { catcode~of~a~specific~character }
  {
    \TYPE
      {
        \cctab_item:Nn \c_document_cctab { `\_ } ,
        \cctab_item:cn { c_document_cctab } { `\: } ,
        \cctab_item:Nn \c_document_cctab { `\\ } ,
        \cctab_item:cn { c_str_cctab } { 32 } ,
        \cctab_item:Nn \c_other_cctab { 32 }
      }
    \TYPE
      {
        \cctab_item:Nn \c_initex_cctab { 0 } ,
        \cctab_item:Nn \c_initex_cctab { -1 } ,
        \cctab_item:Nn \c_initex_cctab { 1114112 }
      }
  }


\ExplSyntaxOff

\END
