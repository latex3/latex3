This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Bruno Le Floch
============================================================
TEST 1: Constants
============================================================
Defining \c_my_dim on line ...
\c_my_dim=\dimen...
Defining \c_my_skip on line ...
\c_my_skip=\skip...
Defining \c_my_muskip on line ...
\c_my_muskip=\muskip...
> \c_my_dim=0.00002pt.
> \c_my_skip=0.00003pt plus 10.64801fil minus 0.00201fil.
> \c_my_muskip=0.00002mu plus 3.0fill.
============================================================
============================================================
TEST 2: Constants already defined
============================================================
! LaTeX Error: Control sequence \c_my_dim already defined.
For immediate help type H <return>.
 ...                                              
l. ...  }
This is a coding error.
LaTeX has been asked to create a new control sequence '\c_my_dim' but this
name has already been used elsewhere.
The current meaning is:
  \dimen167
Defining \c_my_dim on line ...
\c_my_dim=\dimen...
! LaTeX Error: Control sequence \c_my_skip already defined.
For immediate help type H <return>.
 ...                                              
l. ...  }
This is a coding error.
LaTeX has been asked to create a new control sequence '\c_my_skip' but this
name has already been used elsewhere.
The current meaning is:
  \skip77
Defining \c_my_skip on line ...
\c_my_skip=\skip...
! LaTeX Error: Control sequence \c_my_muskip already defined.
For immediate help type H <return>.
 ...                                              
l. ...  }
This is a coding error.
LaTeX has been asked to create a new control sequence '\c_my_muskip' but this
name has already been used elsewhere.
The current meaning is:
  \muskip46
Defining \c_my_muskip on line ...
\c_my_muskip=\muskip...
> \c_my_dim=0.0pt.
> \c_my_skip=0.0pt.
> \c_my_muskip=0.0mu.
============================================================
============================================================
TEST 3: Errors
============================================================
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '1.0pt2pt\scan_stop: ' in \dim_eval:n 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
> 1pt2pt=1.0pt2pt\scan_stop: \__dim_eval_end: .
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '0.0ptpt)\scan_stop: ' in \dim_set:Nn 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '0.769ptpt\scan_stop: ' in \dim_compare:nNnTF 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Missing = inserted for \ifdim.
<to be read again> 
p
l. ...  }
I was expecting to see `<', `=', or `>'. Didn't.
! Missing number, treated as zero.
<to be read again> 
p
l. ...  }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
! Illegal unit of measure (pt inserted).
<to be read again> 
m
l. ...  }
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '1.0ptmu\scan_stop: ' in \skip_eval:n 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
> 1mu=1.0ptmu\scan_stop: \scan_stop: .
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '144.54ptches\scan_stop: ' in \skip_add:Nn 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '1.0mu2\scan_stop: ' in \muskip_eval:n 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
> 1mu2=1.0mu2\scan_stop: \scan_stop: .
! Use of \??? doesn't match its definition.
<argument> \???  
      ! LaTeX Error: '2.0mu)\scan_stop: ' in \muskip_add:Nn 
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
============================================================
