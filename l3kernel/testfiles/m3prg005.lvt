%
% Copyright (C) 2015,2018,2020,2021 The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

\TESTEXP { Lazy ~ ALL }
  {
    \bool_lazy_all:nTF { { \int_compare_p:n { 1 > 2 } } \BOOM } { \ERROR } { \FALSE } \NEWLINE
    \bool_lazy_all:nT  { { \int_compare_p:n { 1 > 2 } } \BOOM } { \ERROR } \NEWLINE
    \bool_lazy_all:nF  { { \int_compare_p:n { 1 > 2 } } \BOOM } { \FALSE } \NEWLINE
    \bool_lazy_all:nTF { { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } } { \TRUE } { \ERROR } \NEWLINE
    \bool_lazy_all:nT  { { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } } { \TRUE } \NEWLINE
    \bool_lazy_all:nF  { { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } } { \ERROR } \NEWLINE
    \bool_lazy_all_p:n { { \c_true_bool  } { \c_true_bool  } { \c_true_bool  } }  \NEWLINE
    \bool_lazy_all_p:n { { \c_true_bool  } { \c_true_bool  } { \c_false_bool } \BOOM ... }  \NEWLINE
    \bool_lazy_all_p:n { { \c_true_bool  } { \c_false_bool } \BOOM ... } \NEWLINE
    \bool_lazy_all_p:n { { \c_false_bool } \BOOM ... } \NEWLINE
    \bool_lazy_all_p:n { }
  }

\TESTEXP { Lazy ~ AND }
  {
    \bool_lazy_and:nnTF { \int_compare_p:n { 1 > 2 } } { \BOOM } { \ERROR } { \FALSE } \NEWLINE
    \bool_lazy_and:nnT  { \int_compare_p:n { 1 > 2 } } { \BOOM } { \ERROR } \NEWLINE
    \bool_lazy_and:nnF  { \int_compare_p:n { 1 > 2 } } { \BOOM } { \FALSE } \NEWLINE
    \bool_lazy_and:nnTF { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } { \TRUE } { \ERROR } \NEWLINE
    \bool_lazy_and:nnT  { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } { \TRUE } \NEWLINE
    \bool_lazy_and:nnF  { \c_true_bool && \c_true_bool } { \tl_if_empty_p:n { } } { \ERROR } \NEWLINE
    \bool_lazy_and_p:nn { \c_true_bool  } { \c_true_bool  }  \NEWLINE
    \bool_lazy_and_p:nn { \c_true_bool  } { \c_false_bool }  \NEWLINE
    \bool_lazy_and_p:nn { \c_false_bool } { \BOOM  }
  }

\TESTEXP { Lazy ~ ANY }
  {
    \bool_lazy_any:nTF { { \int_compare_p:n { 1 < 2 } } \BOOM } { \TRUE } { \ERROR } \NEWLINE
    \bool_lazy_any:nT  { { \int_compare_p:n { 1 < 2 } } \BOOM } { \TRUE } \NEWLINE
    \bool_lazy_any:nF  { { \int_compare_p:n { 1 < 2 } } \BOOM } { \ERROR } \NEWLINE
    \bool_lazy_any:nTF { { \c_false_bool && \c_false_bool } { \tl_if_empty_p:n { ~ } } } { \ERROR } { \FALSE } \NEWLINE
    \bool_lazy_any:nT  { { \c_false_bool && \c_false_bool } { \tl_if_empty_p:n { ~ } } } { \ERROR } \NEWLINE
    \bool_lazy_any:nF  { { \c_false_bool && \c_false_bool } { \tl_if_empty_p:n { ~ } } } { \FALSE } \NEWLINE
    \bool_lazy_any_p:n { { \c_false_bool  }{ \c_false_bool  } { \c_false_bool  } }  \NEWLINE
    \bool_lazy_any_p:n { { \c_false_bool  }{ \c_false_bool  } { \c_true_bool } \BOOM ... }  \NEWLINE
    \bool_lazy_any_p:n { { \c_false_bool  }{ \c_true_bool } \BOOM ... } \NEWLINE
    \bool_lazy_any_p:n { { \c_true_bool } \BOOM ... } \NEWLINE
    \bool_lazy_any_p:n { }
  }

\TESTEXP { Lazy ~ OR }
  {
    \bool_lazy_or:nnTF { \int_compare_p:n { 1 > 2 } } { \tl_if_empty_p:n { ~ } } { \ERROR } { \FALSE } \NEWLINE
    \bool_lazy_or:nnT  { \int_compare_p:n { 1 > 2 } } { \tl_if_empty_p:n { ~ } } { \ERROR } \NEWLINE
    \bool_lazy_or:nnF  { \int_compare_p:n { 1 > 2 } } { \tl_if_empty_p:n { ~ } } { \FALSE } \NEWLINE
    \bool_lazy_or:nnTF { \c_true_bool && \c_true_bool } { \BOOM } { \TRUE } { \ERROR } \NEWLINE
    \bool_lazy_or:nnT  { \c_true_bool && \c_true_bool } { \BOOM } { \TRUE } \NEWLINE
    \bool_lazy_or:nnF  { \c_true_bool && \c_true_bool } { \BOOM } { \ERROR } \NEWLINE
    \bool_lazy_or_p:nn { \c_true_bool  }{ \BOOM  }  \NEWLINE
    \bool_lazy_or_p:nn { \c_false_bool }{ \c_true_bool  }  \NEWLINE
    \bool_lazy_or_p:nn { \c_false_bool }{ \c_false_bool }
  }

\TESTEXP { bool_case }
  {
    \bool_case_true:nTF
      {
        { \int_compare_p:n { 1 > 2 } } { \ERROR }
        { \dim_compare_p:n { 10pt < 20pt } } { \TRUE }
        \ERROR \ERROR
      }
      { \TRUE }
      { \ERROR }
    \NEWLINE
    \bool_case_true:nTF
      {
        { \int_compare_p:n { 1 > 2 } } { \ERROR }
        { \dim_compare_p:n { 10pt < 20pt } && \c_false_bool } { \ERROR }
        { \c_false_bool } { \ERROR }
      }
      { \ERROR }
      { \FALSE }
    \NEWLINE
    \bool_case_false:nTF
      {
        { \int_compare_p:n { 1 < 2 } } { \ERROR }
        { \dim_compare_p:n { 10pt > 20pt } } { \TRUE }
        \ERROR \ERROR
      }
      { \TRUE }
      { \ERROR }
    \NEWLINE
    \bool_case_false:nTF
      {
        { \int_compare_p:n { 1 < 2 } } { \ERROR }
        { \dim_compare_p:n { 10pt > 20pt } || \c_true_bool } { \ERROR }
        { \c_true_bool } { \ERROR }
      }
      { \ERROR }
      { \FALSE }
    \NEWLINE
  }

\TESTEXP { bool_to_str }
  {
    \bool_to_str:c { c_true_bool } ,
    \bool_to_str:N ? ,
    \bool_to_str:n { ! ! \c_false_bool && \c_false_bool }
  }

\END
