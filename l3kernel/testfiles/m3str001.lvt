%
% Copyright (C) 2014,2015,2017,2018,2021 The LaTeX Project
%
\input{regression-test}
\documentclass{minimal}
\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}

\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
\tl_set:Nn \l_tmpa_tl { abc }
\tl_set:Nn \l_tmpb_tl { \par # ~ }
\group_begin:
  \char_set_catcode_parameter:n   {`\c }
  \tl_gset:Nn \g_tmpa_tl { abc }
\group_end:
\group_begin:
  \char_set_catcode_math_toggle:n {`\c }
  \tl_gset:Nn \g_tmpb_tl { abc }
\group_end:
\TIMO

\TESTEXP { str_if_eq:eeTF }
  {
    \str_if_eq:eeTF { abc }        { abc }                { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq:eeTF { \l_tmpa_tl } { abc }                { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq:eeTF { \l_tmpa_tl } { \l_tmpb_tl  }        { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:eeTF { \l_tmpa_tl } { \g_tmpa_tl  }        { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:eeTF { \l_tmpa_tl } { \g_tmpb_tl  }        { \TRUE  } { \ERROR } \NEWLINE
    \str_if_eq:eeTF { # }          { \tl_to_str:n { # } } { \TRUE  } { \ERROR } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:eeT { abc }        { abc }                { \TRUE }  \NEWLINE
    \str_if_eq:eeT { \l_tmpa_tl } { abc }                { \TRUE }  \NEWLINE
    \str_if_eq:eeT { \l_tmpa_tl } { \l_tmpb_tl  }        { \ERROR } \NEWLINE
    \str_if_eq:eeT { \l_tmpa_tl } { \g_tmpa_tl  }        { \ERROR } \NEWLINE
    \str_if_eq:eeT { \l_tmpa_tl } { \g_tmpb_tl  }        { \TRUE  } \NEWLINE
    \str_if_eq:eeT { # }          { \tl_to_str:n { # } } { \TRUE  } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:eeF { abc }        { abc }                { \ERROR } \NEWLINE
    \str_if_eq:eeF { \l_tmpa_tl } { abc }                { \ERROR } \NEWLINE
    \str_if_eq:eeF { \l_tmpa_tl } { \l_tmpb_tl  }        { \FALSE } \NEWLINE
    \str_if_eq:eeF { \l_tmpa_tl } { \g_tmpa_tl  }        { \FALSE } \NEWLINE
    \str_if_eq:eeF { \l_tmpa_tl } { \g_tmpb_tl  }        { \ERROR } \NEWLINE
    \str_if_eq:eeF { # }          { \tl_to_str:n { # } } { \ERROR } \NEWLINE
  }

\TESTEXP { str_if_eq:nnTF }
  {
    \str_if_eq:nnTF { abc }        { abc } { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq:nnTF { \l_tmpa_tl } { abc } { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:nnTF { \par }       { abc } { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:nnTF { # }          { # }   { \TRUE  } { \ERROR } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:nnT { abc }        { abc } { \TRUE }  \NEWLINE
    \str_if_eq:nnT { \l_tmpa_tl } { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnT { \par }       { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnT { # }          { # }   { \TRUE  } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:nnF { abc }        { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnF { \l_tmpa_tl } { abc } { \FALSE } \NEWLINE
    \str_if_eq:nnF { \par }       { abc } { \FALSE } \NEWLINE
    \str_if_eq:nnF { # }          { # }   { \ERROR } \NEWLINE
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\str_set:Nn \l_tmpa_str {a{bb}cdzyx\q_mark\q_stop\par\par ## cdzyx{y}}

\TEST { replace_once }
  {
    \str_replace_once:Nnn \l_tmpa_str {cdz} {cc~dd~zz}
    \TYPE { \l_tmpa_str }
    \str_replace_once:cnn {l_tmpa_str} {yx} {yy~\xx~#}
    \TYPE { \l_tmpa_str }
  }

\str_gset_eq:NN \g_tmpa_str \l_tmpa_str

\TEST { greplace_once }
  {
    \TYPE { \g_tmpa_str }
    \str_greplace_once:Nnn \g_tmpa_str {cdz} {cc~dd~zz}
    \TYPE { \g_tmpa_str }
    \str_greplace_once:cnn {g_tmpa_str} {yx} {yy~\xx~#}
    \TYPE { \g_tmpa_str }
  }

\str_set_eq:NN \l_tmpa_str \g_tmpa_str

\TEST { replace_all }
  {
    \TYPE { \l_tmpa_str }
    \str_replace_all:Nnn \l_tmpa_str {\par} {{Z#}}
    \TYPE { \l_tmpa_str }
    \str_replace_all:cnn {l_tmpa_str} {y} {{Y}}
    \TYPE { \l_tmpa_str }
  }

\TEST { greplace_all }
  {
    \TYPE { \g_tmpa_str }
    \str_greplace_all:Nnn \g_tmpa_str {\par} {{Z#}}
    \TYPE { \g_tmpa_str }
    \str_greplace_all:cnn {g_tmpa_str} {y} {{Y}}
    \TYPE { \g_tmpa_str }
  }

\str_gset_eq:NN \g_tmpa_str \l_tmpa_str

\TEST { greplace_all~no~expansion~and~par }
  {
    \TYPE { \g_tmpa_str }
    \str_greplace_all:Nnn \g_tmpa_str {\q_mark} {=/mark=}
    \TYPE { \g_tmpa_str }
    \str_greplace_all:Nnn \g_tmpa_str {\par} {~#{}\par/~}
    \TYPE { \g_tmpa_str }
  }

\END

