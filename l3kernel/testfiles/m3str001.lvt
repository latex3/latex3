%
% Copyright (C) 2014 LaTeX3 Project
%
\input{regression-test}
\documentclass{minimal}
\RequirePackage[check-declarations,log-functions]{expl3}

\begin{document}

\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
\tl_set:Nn \l_tmpa_tl { abc }
\tl_set:Nn \l_tmpb_tl { \par # ~ }
\group_begin:
  \char_set_catcode_parameter:n   {`\c }
  \tl_gset:Nn \g_tmpa_tl { abc }
\group_end:
\group_begin:
  \char_set_catcode_math_toggle:n {`\c }
  \tl_gset:Nn \g_tmpb_tl { abc }
\group_end:
\TIMO

\TESTEXP { str_if_eq_x:nnTF }
  {
    \str_if_eq_x:nnTF { abc }        { abc }                { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq_x:nnTF { \l_tmpa_tl } { abc }                { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq_x:nnTF { \l_tmpa_tl } { \l_tmpb_tl  }        { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq_x:nnTF { \l_tmpa_tl } { \g_tmpa_tl  }        { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq_x:nnTF { \l_tmpa_tl } { \g_tmpb_tl  }        { \TRUE  } { \ERROR } \NEWLINE
    \str_if_eq_x:nnTF { # }          { \tl_to_str:n { # } } { \TRUE  } { \ERROR } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq_x:nnT { abc }        { abc }                { \TRUE }  \NEWLINE
    \str_if_eq_x:nnT { \l_tmpa_tl } { abc }                { \TRUE }  \NEWLINE
    \str_if_eq_x:nnT { \l_tmpa_tl } { \l_tmpb_tl  }        { \ERROR } \NEWLINE
    \str_if_eq_x:nnT { \l_tmpa_tl } { \g_tmpa_tl  }        { \ERROR } \NEWLINE
    \str_if_eq_x:nnT { \l_tmpa_tl } { \g_tmpb_tl  }        { \TRUE  } \NEWLINE
    \str_if_eq_x:nnT { # }          { \tl_to_str:n { # } } { \TRUE  } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq_x:nnF { abc }        { abc }                { \ERROR } \NEWLINE
    \str_if_eq_x:nnF { \l_tmpa_tl } { abc }                { \ERROR } \NEWLINE
    \str_if_eq_x:nnF { \l_tmpa_tl } { \l_tmpb_tl  }        { \FALSE } \NEWLINE
    \str_if_eq_x:nnF { \l_tmpa_tl } { \g_tmpa_tl  }        { \FALSE } \NEWLINE
    \str_if_eq_x:nnF { \l_tmpa_tl } { \g_tmpb_tl  }        { \ERROR } \NEWLINE
    \str_if_eq_x:nnF { # }          { \tl_to_str:n { # } } { \ERROR } \NEWLINE
  }
  
\TESTEXP { str_if_eq:nnTF }
  {
    \str_if_eq:nnTF { abc }        { abc } { \TRUE }  { \ERROR } \NEWLINE
    \str_if_eq:nnTF { \l_tmpa_tl } { abc } { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:nnTF { \par }       { abc } { \ERROR } { \FALSE } \NEWLINE
    \str_if_eq:nnTF { # }          { # }   { \TRUE  } { \ERROR } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:nnT { abc }        { abc } { \TRUE }  \NEWLINE
    \str_if_eq:nnT { \l_tmpa_tl } { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnT { \par }       { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnT { # }          { # }   { \TRUE  } \NEWLINE
    \SEPARATOR
    \NEWLINE
    \str_if_eq:nnF { abc }        { abc } { \ERROR } \NEWLINE
    \str_if_eq:nnF { \l_tmpa_tl } { abc } { \FALSE } \NEWLINE
    \str_if_eq:nnF { \par }       { abc } { \FALSE } \NEWLINE
    \str_if_eq:nnF { # }          { # }   { \ERROR } \NEWLINE
  }

\END

