This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Bruno Le Floch
============================================================
TEST 1: on token lists
============================================================
The token list contains the tokens:
>  { (begin-group character {)
>  a (the letter a)
>  b (the letter b)
>  c (the letter c)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>  { (begin-group character {)
>  i (the letter i)
>  j (the letter j)
>  k (the letter k)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>  a (the letter a)
>  b (the letter b)
>  \undef (control sequence=undefined).
<recently read> }
l. ...  }
The token list contains the tokens:
>  c (the letter c).
<recently read> }
l. ...  }
The token list contains the tokens:
>  d (the letter d)
>  \foobar (control sequence=undefined)
>  d (the letter d)
>  e (the letter e)
>  f (the letter f).
<recently read> }
l. ...  }
The token list contains the tokens:
>  \de: (control sequence=undefined).
<recently read> }
l. ...  }
The token list contains the tokens:
>  \hi: (control sequence=undefined)
>  \jk: (control sequence=undefined).
<recently read> }
l. ...  }
The token list contains the tokens:
>  \uv: (control sequence=undefined).
<recently read> }
l. ...  }
The token list contains the tokens:
>  \ab (control sequence=undefined)
>  X (the letter X)
>  \cd (control sequence=undefined).
<recently read> }
l. ...  }
The token list contains the tokens:
>  \deX (control sequence=undefined)
>  \f (control sequence=undefined)
>  \  (control sequence=\ )
>  X (the letter X)
>  X (the letter X)
>  \O (control sequence=macro:->\T1-cmd \O \T1\O ).
<recently read> }
l. ...  }
! LaTeX Error: Missing brace inserted when splitting or extracting submatches.
For immediate help type H <return>.
 ...                                              
l. ...  }
LaTeX was asked to do some regular expression operation, and the resulting
token list would not have the same number of begin-group and end-group tokens.
Braces were inserted: 1 left, 2 right.
The token list contains the tokens:
>  \abc (control sequence=undefined)
>  { (begin-group character {)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>  b (the letter b)
>  c (the letter c).
<recently read> }
l. ...  }
The token list contains the tokens:
>  { (begin-group character {)
>  d (the letter d)
>  } (end-group character }).
<recently read> }
l. ...  }
The token list contains the tokens:
>  { (begin-group character {)
>  e (the letter e)
>  } (end-group character }).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 2: with somewhat unbalanced braces
============================================================
The token list \l_tmpa_tl contains the tokens:
>  [ (begin-group character [)
>  a (the letter a)
>  ] (end-group character ])
>  [ (begin-group character [)
>  b (the letter b)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  [ (begin-group character [)
>  c (the letter c)
>  ] (end-group character ])
>  [ (begin-group character [)
>  d (the letter d)
>  ] (end-group character ])
>  { (begin-group character {)
>  { (begin-group character {)
>  \e (control sequence=undefined)
>  \e (control sequence=undefined)
>  } (end-group character })
>  } (end-group character })
>  [ (begin-group character [)
>  f (the letter f)
>  ] (end-group character ])
>  } (end-group character })
>  } (end-group character })
>  \gh (control sequence=undefined)
>  \gh (control sequence=undefined).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 3: Unbalanced things
============================================================
! LaTeX Error: Missing brace inserted when replacing.
For immediate help type H <return>.
 ...                                              
l. ...  }
LaTeX was asked to do some regular expression operation, and the resulting
token list would not have the same number of begin-group and end-group tokens.
Braces were inserted: 1 left, 0 right.
! LaTeX Error: Missing brace inserted when replacing.
For immediate help type H <return>.
 ...                                              
l. ...  }
LaTeX was asked to do some regular expression operation, and the resulting
token list would not have the same number of begin-group and end-group tokens.
Braces were inserted: 0 left, 1 right.
The token list \l_tmpa_tl contains the tokens:
>  { (begin-group character {)
>  { (begin-group character {)
>  \{{ (control sequence=undefined)
>  > (end-group character >)
>  { (begin-group character {)
>  \>{ (control sequence=undefined)
>  } (end-group character })
>  b (the letter b)
>  \}b (control sequence=undefined)
>  } (end-group character }).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 4: Macro parameters
============================================================
! LaTeX Error: Category code '\cP' ignored inside '\c{...}' in a replacement
(LaTeX)        text.
For immediate help type H <return>.
 ...                                              
l. ...  }
In a replacement text, the category codes of the argument of '\c{...}' are
ignored when building the control sequence name.
The token list \l_tmpa_tl contains the tokens:
>  \# (control sequence=\char"23=35)
>  # (macro parameter character #)
>  \#x (control sequence=undefined).
<recently read> }
l. ...  }
The token list \l_tmpa_tl contains the tokens:
>  x (the letter x)
>  \c_parameter_token (control sequence=macro parameter character #)
>  x (the letter x).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 5: Nested classes
============================================================
{ABYZz|} {zA} 
{{ghi}} {{q}} 
============================================================
============================================================
TEST 6: Escaped u
============================================================
{x} {x##|\c_empty_tl } {x} 
The token list \l_tmpa_tl contains the tokens:
>  A (the letter A)
>  B (the letter B)
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #)
>  { (begin-group character {)
>  } (end-group character })
>  y (the letter y)
>  \c_space_tl (control sequence=macro:-> )
>  # (macro parameter character #).
<recently read> }
l. ...  }
The token list \l_tmpa_tl contains the tokens:
>  \if_false: (control sequence=\iffalse)
>  \if_false: (control sequence=\iffalse)
>  \c_parameter_token (control sequence=macro parameter character #)
>  \if_false: (control sequence=\iffalse)
>  \if_false: (control sequence=\iffalse)
>  \c_parameter_token (control sequence=macro parameter character #).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 7: Catcodes shouldn't "stick"
============================================================
{A*012} { +AZ- } 
============================================================
============================================================
TEST 8: The \K command
============================================================
{d} {a} {d} {ace} {a} {e} {d} {b} {d} {ce} {b} {e} 
! LaTeX Error: Invalid escape '\K' within a control sequence.
For immediate help type H <return>.
 ...                                              
l. ...  }
The escape sequence '\K' may not appear within a control sequence test
introduced by '\c{'.
> Compiled regex {\c {a|b\K }}:
+-branch
  control sequence \a or \bK.
<recently read> }
l. ...  }
{1} {a} 
{c3} {bc} 
! LaTeX Error: Category code '\cB' ignored inside '\c{...}' in a replacement
(LaTeX)        text.
For immediate help type H <return>.
 ...                                              
l. ...  }
In a replacement text, the category codes of the argument of '\c{...}' are
ignored when building the control sequence name.
The token list \l_tmpa_tl contains the tokens:
>  a (the letter a)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >)
>  b (the letter b)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >)
>  c (the letter c)
>  < (the character <)
>  \x (control sequence=undefined)
>  > (the character >).
<recently read> }
l. ...  }
{} {foo} {} {} {} {foo} {} {foo} 
{?} {?} 
============================================================
============================================================
TEST 9: Catcodes and groups
============================================================
{ab*ef} {ab*} 
============================================================
============================================================
TEST 10: Caseless matching and cs
============================================================
{\abcd e} {\abcd E} 
{xabc\abc } {Xabc\abc } 
============================================================
============================================================
TEST 11: Braces
============================================================
! LaTeX Error: Left braces must be escaped in '\u{...}'.
For immediate help type H <return>.
 ...                                              
l. ...  }
Constructions such as '\u{...{...}' are not allowed and should be replaced by
'\u{...\{...}'.
|\csname\endcsname}|
The token list \l_tmpa_tl contains the tokens:
>  \csname\endcsname(control sequence=undefined)
>  } (the letter }).
<recently read> }
l. ...  }
! LaTeX Error: Missing right brace inserted in replacement text.
For immediate help type H <return>.
 ...                                              
l. ...  }
There was 1 missing right brace.
|\csname\endcsname|
============================================================
============================================================
TEST 12: More tests of cs
============================================================
{\abcdefghijkl } 
============================================================
============================================================
TEST 13: Replaced space catcode
============================================================
blank space  
blank space  
blank space  
============================================================
============================================================
TEST 14: Catcode group in replacement
============================================================
! LaTeX Error: Escaped letter or digit after category code in replacement
(LaTeX)        text.
For immediate help type H <return>.
 ...                                              
l. ...  }
In a replacement text, the '\c' escape sequence can be followed by one of the
letters 'ABCDELMOPSTU' representing the character category. Then, a character
must follow, not '\1'.
The token list \l_tmpa_tl contains the tokens:
>  q (the letter q)
>  e (subscript character e)
>  t (superscript character t)
>  a (the letter a)
>  b (the letter b)
>  Z (the letter Z)
>  1 (math shift character 1)
>  p (superscript character p)
>  s (subscript character s)
>  f (the letter f)
>  q (the letter q)
>  e (subscript character e)
>  t (superscript character t)
>  a (the character a)
>  b (the character b)
>  Z (the letter Z)
>  1 (math shift character 1)
>  p (superscript character p)
>  s (subscript character s)
>  f (the letter f).
<recently read> }
l. ...  }
! LaTeX Error: Missing right parenthesis inserted in replacement text.
For immediate help type H <return>.
 ...                                              
l. ...  }
There was 1 missing right parenthesis.
> \l_tmpb_tl=.
! LaTeX Error: Missing right parenthesis inserted in replacement text.
For immediate help type H <return>.
 ...                                              
l. ...  }
There were 2 missing right parentheses.
> \l_tmpb_tl=.
============================================================
============================================================
TEST 15: Repetitions on \u escape
============================================================
The token list \l_tmpa_tl contains the tokens:
>  / (the character /)
>  \foobaz (control sequence=undefined)
>  \foobaz (control sequence=undefined)
>  y (the letter y)
>  / (the character /)
>  y (the letter y).
<recently read> }
l. ...  }
============================================================
> Compiled regex variable \l_tmpb_regex:
+-branch
  ,-group begin (no capture)
  | char code 97 (a)
  | ,-group begin (no capture)
  | | char code 65 (A)
  | `-group end
  `-group end, repeated 0 or more times, greedy
  ,-group begin
  | ,-group begin
  | | char code 66 (B)
  | `-group end
  | char code 97 (a)
  | ,-group begin (no capture)
  | | char code 65 (A)
  | `-group end
  | ,-group begin
  | | char code 67 (C)
  | `-group end
  `-group end.
<recently read> }
l. ...  }
> \l_tmpa_tl=(aAaAaABaAC,BaAC,B,C)aABC(BaAC,BaAC,B,C)BBC.
<recently read> }
l. ...  }
============================================================
> Compiled regex variable \l_tmpb_regex:
+-branch
  ,-group begin (no capture)
  | char code 97 (a)
  +-branch
  | ,-group begin (no capture)
  | | char code 65 (A)
  | `-group end
  `-group end, repeated between 0 and 2 times, greedy
  ,-group begin
  | ,-group begin
  | | char code 66 (B)
  | `-group end
  | ,-group begin (no capture)
  | | char code 97 (a)
  | +-branch
  | | ,-group begin (no capture)
  | | | char code 65 (A)
  | | `-group end
  | `-group end
  | ,-group begin
  | | char code 67 (C)
  | `-group end
  `-group end.
<recently read> }
l. ...  }
> \l_tmpa_tl=aAaA(aABAC,BAC,B,C)aABC(BaC,BaC,B,C)BBaAC.
<recently read> }
l. ...  }
============================================================
============================================================
TEST 16: c and u escapes with braces
============================================================
! LaTeX Error: Left braces must be escaped in '\c{...}'.
For immediate help type H <return>.
 ...                                              
l. ...  }
Constructions such as '\c{...{...}' are not allowed and should be replaced by
'\c{...\{...}'.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Left braces must be escaped in '\u{...}'.
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Erroneous variable \csname\endcsnameused!
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
> Compiled regex {\c {{}\u {{}\cD }\cU }}:
+-branch
  control sequence \
  Match
    categories D, class
      char code 125 (})
  Match
    categories U, class
      char code 125 (}).
<recently read> }
l. ...  }
! LaTeX Error: Left braces must be escaped in '\u{...}'.
For immediate help type H <return>.
 ...                                              
l. ...  }
Constructions such as '\u{...{...}' are not allowed and should be replaced by
'\u{...\{...}'.
! LaTeX Error: Left braces must be escaped in '\u{...}'.
For immediate help type H <return>.
 ...                                              
l. ...  }
Constructions such as '\u{...{...}' are not allowed and should be replaced by
'\u{...\{...}'.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! LaTeX Error: Erroneous variable \csname\endcsnameused!
l. ...  }
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
The token list \l_tmpa_tl contains the tokens:
>  \csname\endcsname(control sequence=undefined)
>  } (subscript character })
>  } (superscript character }).
<recently read> }
l. ...  }
============================================================
Defining \x{ on line ...
> Compiled regex {\c {\{}\u {x\{}}:
+-branch
  control sequence \{
  char 102 (f), catcode 11
  char 111 (o), catcode 11
  char 111 (o), catcode 11.
<recently read> }
l. ...  }
The token list \l_tmpa_tl contains the tokens:
>  \{ (control sequence=\protected macro:->\ifmmode \lbrace \else \textb\ETC.)
>  f (the letter f)
>  o (the letter o)
>  o (the letter o).
<recently read> }
l. ...  }
============================================================
============================================================
TEST 17: Catcode used by default
============================================================
Defining \g__cctab_1_cctab on line ...
The token list \l_tmpa_tl contains the tokens:
>  ^^M (the character ^^M)
>  ! (the character !)
>  @ (the character @)
>  # (macro parameter character #)
>  # (macro parameter character #)
>  # (macro parameter character #)
>  $ (math shift character $)
>  % (the character %)
>  $ (math shift character $)
>  ^ (superscript character ^)
>  & (alignment tab character &)
>  * (the character *)
>  { (begin-group character {)
>    (blank space  )
>  } (end-group character })
>  : (the character :)
>  _ (subscript character _)
>  ~ (active character=macro:->\nobreakspace {})
>  \ (the character \).
<recently read> }
l. ...  }
============================================================
