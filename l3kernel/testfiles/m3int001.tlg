This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Frank Mittelbach
============================================================
TEST 1: allocating new registers;no worries
============================================================
Defining \l_testa_int on line ...
\l_testa_int=\count193
Defining \g_testa_int on line ...
\g_testa_int=\count194
Defining \g_testb_int on line ...
\g_testb_int=\count195
============================================================
============================================================
TEST 2: allocating same name : \ERROR 
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \l_testa_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.41 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\l_testa_int' but
| this name has already been used elsewhere.
| 
| The current meaning is:
|   \count193
|...............................................
Defining \l_testa_int on line ...
\l_testa_int=\count196
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! LaTeX error: "kernel/command-already-defined"
! 
! Control sequence \g_testa_int already defined.
! 
! See the LaTeX3 documentation for further information.
! 
! For immediate help type H <return>.
!...............................................  
l.41 }
|'''''''''''''''''''''''''''''''''''''''''''''''
| This is a coding error.
| 
| LaTeX has been asked to create a new control sequence '\g_testa_int' but
| this name has already been used elsewhere.
| 
| The current meaning is:
|   \count194
|...............................................
Defining \g_testa_int on line ...
\g_testa_int=\count197
============================================================
============================================================
TEST 3: allocate or clear
============================================================
Defining \l_testb_int on line ...
\l_testb_int=\count198
> 0.
<argument> \l_testa_int 
l.63   }
> 0.
<argument> \l_testb_int 
l.63   }
> 0.
<argument> \g_testa_int 
l.63   }
> 0.
<argument> \g_testb_int 
l.63   }
> 10.
<argument> \l_testa_int 
l.63   }
> 0.
<argument> \l_testb_int 
l.63   }
> 0.
<argument> \g_testa_int 
l.63   }
> 0.
<argument> \g_testb_int 
l.63   }
============================================================
============================================================
TEST 4: incrementing and decrementing: expect 3, -1
============================================================
> 3.
<argument> \g_testa_int 
l.77 }
> -1.
<argument> \g_testa_int 
l.77 }
============================================================
============================================================
TEST 5: generatingoverflow: expect 2147483647, -2147483648, 2147483647
============================================================
> 2147483647.
<argument> \l_testa_int 
l.88 }
> -2147483648.
<argument> \l_testa_int 
l.88 }
> 2147483647.
<argument> \l_testa_int 
l.88 }
============================================================
============================================================
TEST 6: incrementing and decrementing: expect -2
============================================================
> -2.
<argument> \l_testa_int 
l.95 }
============================================================
============================================================
TEST 7: trying invalid variables: \ERROR ; \ERROR 
============================================================
! Missing number, treated as zero.
<to be read again> 
                   \endgroup 
l.106 }
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)
============================================================
> 185.
<argument> \l_testa_int 
l.113 \int_show:N \l_testa_int
                                  % we hope for a value of 185
> -30.
<argument> \l_testa_int 
l.116 \int_show:N \l_testa_int
                                  % we hope for a value of 10
> 24.
<argument> \l_testa_int 
l.119 \int_show:N \l_testa_int
                                  % we hope for a value of 28
> -30.
<argument> \l_testa_int 
l.122 \int_show:N \l_testa_int
                                  % we hope for a value of 10
! Arithmetic overflow.
\int_set:Nn #1#2->#1 \int_eval:w #2\int_eval_end: 
l.125 ...set:Nn \l_testa_int { 5 / \g_testa_int  }
                                                   % that's division by zero
I can't evaluate this expression,
since the result is out of range.
> 0.
<argument> \l_testa_int 
l.126 \int_show:N \l_testa_int
                                  % no idea what TeX does here ...
> 50.
<argument> \l_testa_int 
l.136 \int_show:N \l_testa_int
                                  % we hope for a value of 50
> 35.
<argument> \l_testa_int 
l.138 \int_show:N \l_testa_int
                                  % we hope for a value of 35
> 6.
<argument> \g_testa_int 
l.145 \int_show:N \g_testa_int
                                  % we hope for a value of 6
> -19.
<argument> \g_testa_int 
l.147 \int_show:N \g_testa_int
                                  % we hope for a value of -19
============================================================
TEST 8: converting numbers: 3 i L ix XXI \textdagger 
============================================================
3 i L ix XXI 
============================================================
============================================================
TEST 9: converting numbers: expect !! !! !! !a!
============================================================
!! !! !! !a! 
============================================================
============================================================
TEST 10: converting numbers: expect !! !! !! !i!
============================================================
!! !! !! !i! 
============================================================
============================================================
TEST 11: converting numbers (huge values)
============================================================
fxshrxw 
============================================================
10
! Undefined control sequence.
l.188 \ERROR
             % supposed to be expandable, so why doesn't it work in typeout?
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.195 \ERROR
             % write tests above
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
TEST 12: evaluating integer expresions: NO NO YES YES YES
============================================================
NO NO YES YES YES
============================================================
============================================================
TEST 13: converting from and to base: expect 21 17
============================================================
21 17
============================================================
