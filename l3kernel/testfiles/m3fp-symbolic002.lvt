%
% Copyright (C) The LaTeX Project
%

\documentclass{minimal}
\input{regression-test}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\begin{document}
\START
\AUTHOR{Yukai Chou}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Functions~in~symbolic~expression }
  {
    \fp_new_function:n { A }
    \fp_new_function:n { B }
    \fp_new_function:n { C }
    % wired fp-expr :)
    \fp_set:Nn \l_tmpa_fp { A(3) + B(pi, 3) + C(0,0,.2) * B(pi, 6) }
    \fp_show:N \l_tmpa_fp % symbolic
    \fp_set_function:nnn { B } { i, j } { i/j }
    \fp_show:N \l_tmpa_fp % symbolic
    \TYPE { \fp_to_tl:n { \l_tmpa_fp } } % symbolic, B(pi, 3) evaluated
    \fp_set_function:nnn { C } { i, j, k } { k * -10 }
    \TYPE { \fp_to_tl:n { \l_tmpa_fp } } % symbolic, B & C evaluated
    \fp_set_function:nnn { A } { i } { sqrt(i * i) }
    \TYPE { \fp_to_tl:n { \l_tmpa_fp } } % numeric
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP { Conversions }
  {
    \fp_to_decimal:n { A(1) + B(1,2)**2 } \NEWLINE
    \fp_to_dim:n { A(1) + B(1,2)**2 } \NEWLINE
    \fp_to_int:n { A(1) + B(1,2)**2 } \NEWLINE
    \fp_to_scientific:n { A(1) + B(1,2)**2 } \NEWLINE
    % the only one that works with a symbolic result
    \fp_to_tl:n { A(1) + B(1,2)**2 } \NEWLINE
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP { Unary~minus~and~not }
  {
    \fp_to_tl:n { - (A(1) + B(1,2)**2) } \NEWLINE
    \fp_to_tl:n { ! (A(1) + B(1,2)**2) } \NEWLINE
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Various~function~names }
  {
    \fp_new_function:n { }
    \fp_new_function:n { a ~ b }
    \fp_new_function:n { a12 }
    \fp_new_function:n { \\ }
    \fp_new_function:n { a_b }
    \fp_new_function:n { chk } % works
    \fp_new_function:n { aux } % works
    \fp_new_function:n { tmpa } % works
    \fp_new_function:n { pi }
    \fp_new_function:n { inf }
    \iow_term:x { \fp_to_tl:n { 1 / inf + pi + tmpa(1) + aux(-1) + chk(+1) } }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% !TODO not supported yet
% \TEST { Loops }
%   {
%     \fp_new_function:n { X }
%     \fp_new_function:n { Y }
%     \fp_set_function:nnn { X } { x } { sin(X(x)) }
%     \fp_show:n { X(1.1) }
%     \fp_set_function:nnn { X } { x } { 1 }
%     \fp_set_function:nnn { X } { x } { Y(x)**X(x) }
%     \fp_show:n { X }
%     \fp_set_function:nnn { Y } { y } { X(y) + 1 }
%     \fp_show:n { Y }
%   }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Show~a~variable~holding~symbolic~expression }
  {
    \OMIT
    \cs_set_protected:Npn \test_temp:n #1
      {
        \fp_set:Nn \l_tmpa_fp {#1}
        \fp_show:N \l_tmpa_fp
        \fp_show:n \l_tmpa_fp
      }
    \TIMO
    \fp_new_variable:n { x }
    \fp_new_function:n { F }
    \test_temp:n { x }
    \test_temp:n { F(1) }
    \test_temp:n { F(x, F(x)) }
    \test_temp:n { F(1, x + 1, tan(F(-1)) / 5) }
    \test_temp:n { 3 + sin(x) * F(x**x) }
    % tuples
    \test_temp:n { 1 , F(x) }
    \test_temp:n { (1 , x , F(x) + 1) + (-1 , -x , -1 + !F(x)) }
    % after using \fp_new_function:n { pi } in a previous test,
    % pi is not a constant anymore
    \test_temp:n { 2 * x , 7 / F(deg) - x , 4 }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Function~parameters~are~created~locally }
  {
    \OMIT
    \cs_set_protected:Npn \test_temp:
      { \TYPE { \fp_to_tl:n { a + FUNCA(1) } } }
    \TIMO
    \fp_new_function:n { FUNCA }
    \fp_set_function:nnn { FUNCA } { a } { a * 10 }
    \test_temp: % error, unknown fp word "a"
    \fp_new_variable:n { a }
    \test_temp: % symbolic, FUNCA(1) evaluated to 10
    \fp_set_variable:nn { a } { 32 }
    \test_temp: % numeric, 42
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Function~parameters~are~cleared~locally }
  {
    \fp_new_variable:n { E }
    \fp_new_function:n { PS }
    \fp_set_variable:nn { E } { 2 }
    \fp_set_function:nnn { PS } { E } { E**E }
    \fp_show:n { E**2 + PS(3) } % numeric
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Set~and~clear~both~act~locally }
  {
    \OMIT
    \cs_set_protected:Npn \test_temp:
      { \TYPE { \fp_to_tl:n { FUNCP(3, 4) * 10 - 7 } } }
    \TIMO
    \fp_new_function:n { FUNCP }
    \test_temp: % symbolic

    \group_begin:
      \fp_set_function:nnn { FUNCP } { i, j } { i*i + j*j }
      \test_temp: % numeric
    \group_end:
    \test_temp: % symbolic
    \fp_set_function:nnn { FUNCP } { i, j } { i*i + j*j }
    \test_temp: % numeric

    \group_begin:
      \fp_clear_function:n { FUNCP }
      \test_temp: % symbolic
    \group_end:
    \test_temp: % numeric
    \fp_clear_function:n { FUNCP }
    \test_temp: % symbolic
  }

\END
