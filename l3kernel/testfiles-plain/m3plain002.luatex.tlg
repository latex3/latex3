This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
{restoring \TYPE=\long macro:#1->\begingroup \long \def \TYPE ##\ETC.}
{restoring \l__kernel_expl_bool=\char"1}
{retaining \__opacity_backend_fill_stroke:ee=\protected\long macro:->\exp_args:Nee \__opacity_backend_fill_stroke:nn }
{retaining \__pdf_backend_object_now:ne=\protected\long macro:->\exp_args:Nne \__pdf_backend_object_now:nn }
{retaining \__pdf_backend_object_write:nne=\protected\long macro:->\exp_args:Nnne \__pdf_backend_object_write:nnn }
{restoring \l_graphics_search_ext_seq=undefined}
{retaining \__draw_backend_literal:e=\protected\long macro:->\exp_args:Ne \__draw_backend_literal:n }
{restoring \l__lua_err_msg_str=macro:->}
{restoring \l__color_backend_stroke_tl=macro:->}
{restoring \l__color_backend_fill_tl=macro:->}
{retaining \__kernel_backend_matrix:e=\protected\long macro:->\exp_args:Ne \__kernel_backend_matrix:n }
{retaining \__kernel_backend_literal_pdf:e=\protected\long macro:->\exp_args:Ne \__kernel_backend_literal_pdf:n }
{retaining \sys_if_output_pdf_p:=\char"1}
{retaining \sys_if_output_pdf:TF=\long macro:#1#2->#1}
{retaining \sys_if_output_pdf:F=\long macro:#1->}
{retaining \sys_if_output_pdf:T=\long macro:#1->#1}
{retaining \sys_if_output_dvi_p:=\char"0}
{retaining \sys_if_output_dvi:TF=\long macro:#1#2->#2}
{retaining \sys_if_output_dvi:F=\long macro:#1->#1}
{retaining \sys_if_output_dvi:T=\long macro:#1->}
{retaining \sys_if_shell_restricted_p:=\char"1}
{retaining \sys_if_shell_restricted:TF=\long macro:#1#2->#1}
{retaining \sys_if_shell_restricted:F=\long macro:#1->}
{retaining \sys_if_shell_restricted:T=\long macro:#1->#1}
{retaining \sys_if_shell_unrestricted_p:=\char"0}
{retaining \sys_if_shell_unrestricted:TF=\long macro:#1#2->#2}
{retaining \sys_if_shell_unrestricted:F=\long macro:#1->#1}
{retaining \sys_if_shell_unrestricted:T=\long macro:#1->}
{retaining \sys_if_shell_p:=\char"1}
{retaining \sys_if_shell:TF=\long macro:#1#2->#1}
{retaining \sys_if_shell:F=\long macro:#1->}
{retaining \sys_if_shell:T=\long macro:#1->#1}
{retaining \peek_meaning_remove_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_meaning_remove_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_meaning_remove_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_meaning_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_meaning_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_meaning_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_remove_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_remove_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_remove_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_charcode_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_remove_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_remove_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_remove_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_ignore_spaces:NF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_ignore_spaces:NT=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \peek_catcode_ignore_spaces:NTF=\protected\long macro:->\__kernel_if_debug:TF {\msg_warning:nneee \ETC.}
{retaining \tl_case:cnTF=\long macro:->\exp_args:Nc \tl_case:NnTF }
{retaining \tl_case:cnF=\long macro:->\exp_args:Nc \tl_case:NnF }
{retaining \tl_case:cnT=\long macro:->\exp_args:Nc \tl_case:NnT }
{retaining \tl_case:cn=\long macro:->\exp_args:Nc \tl_case:Nn }
{retaining \pdf_object_write:nx=\protected\long macro:->\exp_args:Nnx \pdf_object_write:nn }
{retaining \keys_set_filter:nnonN=\protected\long macro:->\exp_args:Nnno \keys_set_filter:nnnnN }
{retaining \keys_set_filter:nnvnN=\protected\long macro:->\exp_args:Nnnv \keys_set_filter:nnnnN }
{retaining \keys_set_filter:nnVnN=\protected\long macro:->\exp_args:NnnV \keys_set_filter:nnnnN }
{retaining \keys_set_filter:nnoN=\protected\long macro:->\exp_args:Nnno \keys_set_filter:nnnN }
{retaining \keys_set_filter:nnvN=\protected\long macro:->\exp_args:Nnnv \keys_set_filter:nnnN }
{retaining \keys_set_filter:nnVN=\protected\long macro:->\exp_args:NnnV \keys_set_filter:nnnN }
{retaining \keys_set_filter:nno=\protected\long macro:->\exp_args:Nnno \keys_set_filter:nnn }
{retaining \keys_set_filter:nnv=\protected\long macro:->\exp_args:Nnnv \keys_set_filter:nnn }
{retaining \keys_set_filter:nnV=\protected\long macro:->\exp_args:NnnV \keys_set_filter:nnn }
{retaining \key prop > .tl_gset_x:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_gset_x:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .tl_set_x:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_set_x:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .str_gset_x:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_gset_x:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \key prop > .str_set_x:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_set_x:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \iow_shipout_x:cx=\protected\long macro:->\exp_args:Ncx \iow_shipout_x:Nn }
{retaining \iow_shipout_x:cn=\protected\long macro:->\exp_args:Nc \iow_shipout_x:Nn }
{retaining \iow_shipout_x:Nx=\protected\long macro:->\exp_args:NNx \iow_shipout_x:Nn }
{retaining \msg extra text > deprecation/deprecated-command=\long macro:#1#2#3#4->}
{retaining \msg text > deprecation/deprecated-command=\long macro:#1#2#3#4->\tl_if_blank:nF {#3}{Use\ETC.}
{retaining \legacy_if:nTF=\long macro:#1->\exp_after:wN \reverse_if:N \cs:w \ETC.}
{retaining \legacy_if:nF=\long macro:#1->\exp_after:wN \reverse_if:N \cs:w \ETC.}
{retaining \legacy_if:nT=\long macro:#1->\exp_after:wN \reverse_if:N \cs:w \ETC.}
{retaining \legacy_if_p:n=\long macro:#1->\exp_after:wN \reverse_if:N \cs:w \ETC.}
{restoring \l__text_purify_\t_tl=macro:->}
{retaining \l__text_purify_\t_tl=macro:->}
{restoring \l__text_purify_\b_tl=macro:->}
{retaining \l__text_purify_\b_tl=macro:->}
{restoring \l__text_purify_\k_tl=macro:->}
{retaining \l__text_purify_\k_tl=macro:->}
{restoring \l__text_purify_\c_tl=macro:->}
{retaining \l__text_purify_\c_tl=macro:->}
{restoring \l__text_purify_\d_tl=macro:->}
{retaining \l__text_purify_\d_tl=macro:->}
{restoring \l__text_purify_\v_tl=macro:->}
{retaining \l__text_purify_\v_tl=macro:->}
{restoring \l__text_purify_\H_tl=macro:->}
{retaining \l__text_purify_\H_tl=macro:->}
{restoring \l__text_purify_\r_tl=macro:->}
{retaining \l__text_purify_\r_tl=macro:->}
{restoring \l__text_purify_\"_tl=macro:->}
{retaining \l__text_purify_\"_tl=macro:->}
{restoring \l__text_purify_\._tl=macro:->}
{retaining \l__text_purify_\._tl=macro:->}
{restoring \l__text_purify_\u_tl=macro:->}
{retaining \l__text_purify_\u_tl=macro:->}
{restoring \l__text_purify_\=_tl=macro:->}
{retaining \l__text_purify_\=_tl=macro:->}
{restoring \l__text_purify_\~_tl=macro:->}
{retaining \l__text_purify_\~_tl=macro:->}
{restoring \l__text_purify_\^_tl=macro:->}
{retaining \l__text_purify_\^_tl=macro:->}
{restoring \l__text_purify_\'_tl=macro:->}
{retaining \l__text_purify_\'_tl=macro:->}
{restoring \l__text_purify_\`_tl=macro:->}
{retaining \l__text_purify_\`_tl=macro:->}
{restoring \l__text_purify_\SS_tl=macro:->}
{retaining \l__text_purify_\SS_tl=macro:->}
{restoring \l__text_purify_\th_tl=macro:->}
{retaining \l__text_purify_\th_tl=macro:->}
{restoring \l__text_purify_\ss_tl=macro:->}
{retaining \l__text_purify_\ss_tl=macro:->}
{restoring \l__text_purify_\oe_tl=macro:->}
{retaining \l__text_purify_\oe_tl=macro:->}
{restoring \l__text_purify_\o_tl=macro:->}
{retaining \l__text_purify_\o_tl=macro:->}
{restoring \l__text_purify_\ng_tl=macro:->}
{retaining \l__text_purify_\ng_tl=macro:->}
{restoring \l__text_purify_\l_tl=macro:->}
{retaining \l__text_purify_\l_tl=macro:->}
{restoring \l__text_purify_\ij_tl=macro:->}
{retaining \l__text_purify_\ij_tl=macro:->}
{restoring \l__text_purify_\j_tl=macro:->}
{retaining \l__text_purify_\j_tl=macro:->}
{restoring \l__text_purify_\i_tl=macro:->}
{retaining \l__text_purify_\i_tl=macro:->}
{restoring \l__text_purify_\dj_tl=macro:->}
{retaining \l__text_purify_\dj_tl=macro:->}
{restoring \l__text_purify_\dh_tl=macro:->}
{retaining \l__text_purify_\dh_tl=macro:->}
{restoring \l__text_purify_\ae_tl=macro:->}
{retaining \l__text_purify_\ae_tl=macro:->}
{restoring \l__text_purify_\aa_tl=macro:->}
{retaining \l__text_purify_\aa_tl=macro:->}
{restoring \l__text_purify_\TH_tl=macro:->}
{retaining \l__text_purify_\TH_tl=macro:->}
{restoring \l__text_purify_\OE_tl=macro:->}
{retaining \l__text_purify_\OE_tl=macro:->}
{restoring \l__text_purify_\O_tl=macro:->}
{retaining \l__text_purify_\O_tl=macro:->}
{restoring \l__text_purify_\NG_tl=macro:->}
{retaining \l__text_purify_\NG_tl=macro:->}
{restoring \l__text_purify_\L_tl=macro:->}
{retaining \l__text_purify_\L_tl=macro:->}
{restoring \l__text_purify_\IJ_tl=macro:->}
{retaining \l__text_purify_\IJ_tl=macro:->}
{restoring \l__text_purify_\DJ_tl=macro:->}
{retaining \l__text_purify_\DJ_tl=macro:->}
{restoring \l__text_purify_\DH_tl=macro:->}
{retaining \l__text_purify_\DH_tl=macro:->}
{restoring \l__text_purify_\AE_tl=macro:->}
{retaining \l__text_purify_\AE_tl=macro:->}
{restoring \l__text_purify_\AA_tl=macro:->}
{retaining \l__text_purify_\AA_tl=macro:->}
{restoring \__text_loop:Nn=undefined}
{restoring \l__text_purify_\,_tl=macro:->}
{retaining \l__text_purify_\,_tl=macro:->}
{restoring \l__text_purify_\ _tl=macro:->}
{retaining \l__text_purify_\ _tl=macro:->}
{restoring \l__text_purify_\nobreakspace_tl=macro:->}
{retaining \l__text_purify_\nobreakspace_tl=macro:->}
{restoring \l__text_purify_~_tl=macro:->}
{retaining \l__text_purify_~_tl=macro:->}
{restoring \l__text_purify_\label_tl=macro:->}
{retaining \l__text_purify_\label_tl=macro:->}
{restoring \l__text_purify_\__tl=macro:->}
{retaining \l__text_purify_\__tl=macro:->}
{restoring \l__text_purify_\%_tl=macro:->}
{retaining \l__text_purify_\%_tl=macro:->}
{restoring \l__text_purify_\$_tl=macro:->}
{retaining \l__text_purify_\$_tl=macro:->}
{restoring \l__text_purify_\#_tl=macro:->}
{retaining \l__text_purify_\#_tl=macro:->}
{restoring \l__text_purify_\}_tl=macro:->}
{retaining \l__text_purify_\}_tl=macro:->}
{restoring \l__text_purify_\{_tl=macro:->}
{retaining \l__text_purify_\{_tl=macro:->}
{restoring \l__text_purify_\\_tl=macro:->}
{retaining \l__text_purify_\\_tl=macro:->}
{restoring \l__text_purify_\end_tl=macro:->}
{retaining \l__text_purify_\end_tl=macro:->}
{restoring \l__text_purify_\begin_tl=macro:->}
{retaining \l__text_purify_\begin_tl=macro:->}
{restoring \l__text_purify_\@protected@testopt_tl=macro:->}
{retaining \l__text_purify_\@protected@testopt_tl=macro:->}
{restoring \@protected@testopt=undefined}
{restoring \l__text_purify_\tiny_tl=macro:->}
{retaining \l__text_purify_\tiny_tl=macro:->}
{restoring \l__text_purify_\small_tl=macro:->}
{retaining \l__text_purify_\small_tl=macro:->}
{restoring \l__text_purify_\scriptsize_tl=macro:->}
{retaining \l__text_purify_\scriptsize_tl=macro:->}
{restoring \l__text_purify_\normalsize_tl=macro:->}
{retaining \l__text_purify_\normalsize_tl=macro:->}
{restoring \l__text_purify_\large_tl=macro:->}
{retaining \l__text_purify_\large_tl=macro:->}
{restoring \l__text_purify_\huge_tl=macro:->}
{retaining \l__text_purify_\huge_tl=macro:->}
{restoring \l__text_purify_\footnotesize_tl=macro:->}
{retaining \l__text_purify_\footnotesize_tl=macro:->}
{restoring \l__text_purify_\Large_tl=macro:->}
{retaining \l__text_purify_\Large_tl=macro:->}
{restoring \l__text_purify_\LARGE_tl=macro:->}
{retaining \l__text_purify_\LARGE_tl=macro:->}
{restoring \l__text_purify_\Huge_tl=macro:->}
{retaining \l__text_purify_\Huge_tl=macro:->}
{restoring \l__text_purify_\em_tl=macro:->}
{retaining \l__text_purify_\em_tl=macro:->}
{restoring \l__text_purify_\upshape_tl=macro:->}
{retaining \l__text_purify_\upshape_tl=macro:->}
{restoring \l__text_purify_\slshape_tl=macro:->}
{retaining \l__text_purify_\slshape_tl=macro:->}
{restoring \l__text_purify_\scshape_tl=macro:->}
{retaining \l__text_purify_\scshape_tl=macro:->}
{restoring \l__text_purify_\itshape_tl=macro:->}
{retaining \l__text_purify_\itshape_tl=macro:->}
{restoring \l__text_purify_\mdseries_tl=macro:->}
{retaining \l__text_purify_\mdseries_tl=macro:->}
{restoring \l__text_purify_\bfseries_tl=macro:->}
{retaining \l__text_purify_\bfseries_tl=macro:->}
{restoring \l__text_purify_\ttfamily_tl=macro:->}
{retaining \l__text_purify_\ttfamily_tl=macro:->}
{restoring \l__text_purify_\sffamily_tl=macro:->}
{retaining \l__text_purify_\sffamily_tl=macro:->}
{restoring \l__text_purify_\rmfamily_tl=macro:->}
{retaining \l__text_purify_\rmfamily_tl=macro:->}
{restoring \l__text_purify_\normalfont_tl=macro:->}
{retaining \l__text_purify_\normalfont_tl=macro:->}
{restoring \l__text_purify_\textulc_tl=macro:->}
{retaining \l__text_purify_\textulc_tl=macro:->}
{restoring \l__text_purify_\textsc_tl=macro:->}
{retaining \l__text_purify_\textsc_tl=macro:->}
{restoring \l__text_purify_\textup_tl=macro:->}
{retaining \l__text_purify_\textup_tl=macro:->}
{restoring \l__text_purify_\textsl_tl=macro:->}
{retaining \l__text_purify_\textsl_tl=macro:->}
{restoring \l__text_purify_\textit_tl=macro:->}
{retaining \l__text_purify_\textit_tl=macro:->}
{restoring \l__text_purify_\textmd_tl=macro:->}
{retaining \l__text_purify_\textmd_tl=macro:->}
{restoring \l__text_purify_\textbf_tl=macro:->}
{retaining \l__text_purify_\textbf_tl=macro:->}
{restoring \l__text_purify_\texttt_tl=macro:->}
{retaining \l__text_purify_\texttt_tl=macro:->}
{restoring \l__text_purify_\textsf_tl=macro:->}
{retaining \l__text_purify_\textsf_tl=macro:->}
{restoring \l__text_purify_\textrm_tl=macro:->}
{retaining \l__text_purify_\textrm_tl=macro:->}
{restoring \l__text_purify_\textnormal_tl=macro:->}
{retaining \l__text_purify_\textnormal_tl=macro:->}
{restoring \l__text_purify_\text_tl=macro:->}
{retaining \l__text_purify_\text_tl=macro:->}
{restoring \l__text_purify_\emph_tl=macro:->}
{retaining \l__text_purify_\emph_tl=macro:->}
{restoring \l__text_purify_\usefont_tl=macro:->}
{retaining \l__text_purify_\usefont_tl=macro:->}
{restoring \l__text_purify_\selectfont_tl=macro:->}
{retaining \l__text_purify_\selectfont_tl=macro:->}
{restoring \l__text_purify_\fontsize_tl=macro:->}
{retaining \l__text_purify_\fontsize_tl=macro:->}
{restoring \l__text_purify_\fontshape_tl=macro:->}
{retaining \l__text_purify_\fontshape_tl=macro:->}
{restoring \l__text_purify_\fontseries_tl=macro:->}
{retaining \l__text_purify_\fontseries_tl=macro:->}
{restoring \l__text_purify_\fontfamily_tl=macro:->}
{retaining \l__text_purify_\fontfamily_tl=macro:->}
{restoring \l__text_purify_\fontencoding_tl=macro:->}
{retaining \l__text_purify_\fontencoding_tl=macro:->}
{retaining \text_declare_purify_equivalent:Ne=\protected\long macro:->\exp_args:NNe \text_declare_purify_equivalent:Nn }
{retaining \__text_use_none_delimit_by_q_recursion_stop:w=\long macro:#1\q__text_recursion_stop ->}
{retaining \__text_change_case_upper_la-x-medieval:nnnnn=\long macro:#1#2#3#4#5->\__text_codepoint_compare:nNnTF \ETC.}
{retaining \__text_change_case_lower_la-x-medieval:nnnnn=\long macro:#1#2#3#4#5->\__text_codepoint_compare:nNnTF \ETC.}
{retaining \__text_change_case_title_hy-x-yiwn:nnnnn=\long macro:#1#2#3#4#5->\__text_change_case_codepoint:nnnnn \ETC.}
{retaining \__text_change_case_upper_hy-x-yiwn:nnnnn=\long macro:#1#2#3#4#5->\__text_change_case_codepoint:nnnnn \ETC.}
{retaining \__text_change_case_boundary_upper_el-x-iota:Nnnnw=\long macro:#1#2#3#4#5\q__text_recursion_stop \ETC.}
{retaining \__text_change_case_if_takes_ypogegrammeni:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_takes_ypogegrammeni:n \ETC.}
{retaining \__text_change_case_if_takes_dialytika:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_takes_dialytika:n \ETC.}
{retaining \__text_change_case_if_greek_stress_p:n=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_stress:n \ETC.}
{retaining \__text_change_case_if_greek_stress:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_stress:n \ETC.}
{retaining \__text_change_case_if_greek_breathing_p:n=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_breathing:n \ETC.}
{retaining \__text_change_case_if_greek_breathing:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_breathing:n \ETC.}
{retaining \__text_change_case_if_greek_spacing_diacritic:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_spacing_diacritic:n \ETC.}
{retaining \__text_change_case_if_greek_accent_p:n=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_accent:n \ETC.}
{retaining \__text_change_case_if_greek_accent:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek_accent:n \ETC.}
{retaining \__text_change_case_if_greek:nTF=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek:n \ETC.}
{retaining \__text_change_case_if_greek_p:n=\long macro:#1->\exp_args:Nf \__text_change_case_if_greek:n \ETC.}
{retaining \__text_change_case_upper_el-x-iota_ypogegrammeni:n=\long macro:#1->\__text_change_case_codepoint:nn \ETC.}
{retaining \__text_change_case_upper_el-x-iota:nnnnn=\long macro:#1#2#3#4#5->\bool_lazy_and:nnTF {\__text_change_case_if_greek_p:n \ETC.}
{retaining \__text_change_case_upper_de-alt:nnnnn=\long macro:#1#2#3#4#5->\__text_codepoint_compare:nNnTF \ETC.}
{retaining \__text_change_case_upper_de-x-eszett:nnnnn=\long macro:#1#2#3#4#5->\__text_codepoint_compare:nNnTF \ETC.}
{retaining \__text_change_case_codepoint:fnn=\long macro:->\exp_args:Nf \__text_change_case_codepoint:nnn }
{retaining \__text_change_case_replace:vnnn=\long macro:->\exp_args:Nv \__text_change_case_replace:nnnn }
{retaining \__text_change_case_store:v=\long macro:->\exp_args:Nv \__text_change_case_store:n }
{retaining \__text_change_case_store:V=\long macro:->\exp_args:NV \__text_change_case_store:n }
{retaining \__text_change_case_store:e=\long macro:->\exp_args:Ne \__text_change_case_store:n }
{retaining \__text_change_case_store:o=\long macro:->\exp_args:No \__text_change_case_store:n }
{restoring \l_text_titlecase_check_letter_bool=\char"0}
{restoring \l__text_expand_\th_tl=macro:->}
{retaining \l__text_expand_\th_tl=macro:->}
{restoring \l__text_expand_\TH_tl=macro:->}
{retaining \l__text_expand_\TH_tl=macro:->}
{restoring \l__text_expand_\ss_tl=macro:->}
{retaining \l__text_expand_\ss_tl=macro:->}
{restoring \l__text_expand_\SS_tl=macro:->}
{retaining \l__text_expand_\SS_tl=macro:->}
{restoring \l__text_expand_\oe_tl=macro:->}
{retaining \l__text_expand_\oe_tl=macro:->}
{restoring \l__text_expand_\OE_tl=macro:->}
{retaining \l__text_expand_\OE_tl=macro:->}
{restoring \l__text_expand_\o_tl=macro:->}
{retaining \l__text_expand_\o_tl=macro:->}
{restoring \l__text_expand_\O_tl=macro:->}
{retaining \l__text_expand_\O_tl=macro:->}
{restoring \l__text_expand_\ng_tl=macro:->}
{retaining \l__text_expand_\ng_tl=macro:->}
{restoring \l__text_expand_\NG_tl=macro:->}
{retaining \l__text_expand_\NG_tl=macro:->}
{restoring \l__text_expand_\l_tl=macro:->}
{retaining \l__text_expand_\l_tl=macro:->}
{restoring \l__text_expand_\L_tl=macro:->}
{retaining \l__text_expand_\L_tl=macro:->}
{restoring \l__text_expand_\ij_tl=macro:->}
{retaining \l__text_expand_\ij_tl=macro:->}
{restoring \l__text_expand_\IJ_tl=macro:->}
{retaining \l__text_expand_\IJ_tl=macro:->}
{restoring \l__text_expand_\dj_tl=macro:->}
{retaining \l__text_expand_\dj_tl=macro:->}
{restoring \l__text_expand_\DJ_tl=macro:->}
{retaining \l__text_expand_\DJ_tl=macro:->}
{restoring \l__text_expand_\dh_tl=macro:->}
{retaining \l__text_expand_\dh_tl=macro:->}
{restoring \l__text_expand_\DH_tl=macro:->}
{retaining \l__text_expand_\DH_tl=macro:->}
{restoring \l__text_expand_\ae_tl=macro:->}
{retaining \l__text_expand_\ae_tl=macro:->}
{restoring \l__text_expand_\AE_tl=macro:->}
{retaining \l__text_expand_\AE_tl=macro:->}
{restoring \l__text_expand_\aa_tl=macro:->}
{retaining \l__text_expand_\aa_tl=macro:->}
{restoring \l__text_expand_\AA_tl=macro:->}
{retaining \l__text_expand_\AA_tl=macro:->}
{restoring \l__text_expand_\t_tl=macro:->}
{retaining \l__text_expand_\t_tl=macro:->}
{restoring \l__text_expand_\b_tl=macro:->}
{retaining \l__text_expand_\b_tl=macro:->}
{restoring \l__text_expand_\k_tl=macro:->}
{retaining \l__text_expand_\k_tl=macro:->}
{restoring \l__text_expand_\c_tl=macro:->}
{retaining \l__text_expand_\c_tl=macro:->}
{restoring \l__text_expand_\d_tl=macro:->}
{retaining \l__text_expand_\d_tl=macro:->}
{restoring \l__text_expand_\v_tl=macro:->}
{retaining \l__text_expand_\v_tl=macro:->}
{restoring \l__text_expand_\H_tl=macro:->}
{retaining \l__text_expand_\H_tl=macro:->}
{restoring \l__text_expand_\r_tl=macro:->}
{retaining \l__text_expand_\r_tl=macro:->}
{restoring \l__text_expand_\"_tl=macro:->}
{retaining \l__text_expand_\"_tl=macro:->}
{restoring \l__text_expand_\._tl=macro:->}
{retaining \l__text_expand_\._tl=macro:->}
{restoring \l__text_expand_\u_tl=macro:->}
{retaining \l__text_expand_\u_tl=macro:->}
{restoring \l__text_expand_\=_tl=macro:->}
{retaining \l__text_expand_\=_tl=macro:->}
{restoring \l__text_expand_\~_tl=macro:->}
{retaining \l__text_expand_\~_tl=macro:->}
{restoring \l__text_expand_\^_tl=macro:->}
{retaining \l__text_expand_\^_tl=macro:->}
{restoring \l__text_expand_\'_tl=macro:->}
{retaining \l__text_expand_\'_tl=macro:->}
{restoring \l__text_expand_\`_tl=macro:->}
{retaining \l__text_expand_\`_tl=macro:->}
{retaining \text_declare_expand_equivalent:cn=\protected\long macro:->\exp_args:Nc \text_declare_expand_equivalent:Nn }
{retaining \__text_expand_store:o=\long macro:->\exp_args:No \__text_expand_store:n }
{restoring \l_text_expand_exclude_tl=macro:->}
{restoring \l_text_math_delims_tl=macro:->}
{restoring \l_text_math_arg_tl=macro:->}
{restoring \l_text_case_exclude_arg_tl=macro:->}
{restoring \cite =undefined}
{retaining \__text_codepoint_compare_p:nNn=\long macro:#1#2#3->\int_compare:nNnTF {`#1}#2\ETC.}
{retaining \__text_codepoint_compare:nNnTF=\long macro:#1#2#3->\int_compare:nNnTF {`#1}#2\ETC.}
{retaining \__text_if_expandable:NTF=\long macro:#1->\token_if_expandable:NTF #1{\bool_lazy_any:nTF \ETC.}
{retaining \__text_if_expandable:NF=\long macro:#1->\token_if_expandable:NTF #1{\bool_lazy_any:nTF \ETC.}
{retaining \__text_if_expandable:NT=\long macro:#1->\token_if_expandable:NTF #1{\bool_lazy_any:nTF \ETC.}
{retaining \__text_quark_recursion_tail:w=\long macro:#1\q__text_recursion_tail #2?#3?\ETC.}
{retaining \__text_quark_if_nil:nTF=\long macro:#1->\__quark_if_empty_if:o {\__text_if_quark_nil:w \ETC.}
{retaining \__text_if_quark_nil:w=\long macro:#1\q__text_nil #2?#3?!->#1#2}
{retaining \tl_if_head_eq_meaning_p:oN=\long macro:->\exp_args:No \tl_if_head_eq_meaning_p:nN }
{retaining \__codepoint_to_bytes_output:fnn=\long macro:->\exp_args:Nf \__codepoint_to_bytes_output:nnn }
{retaining \msg extra text > luatex/module-not-found=\long macro:#1#2#3#4->The file `#1.lua' could \ETC.}
{retaining \msg text > luatex/module-not-found=\long macro:#1#2#3#4->Lua module `#1' not foun\ETC.}
{retaining \msg extra text > luatex/luatex-required=\long macro:#1#2#3#4->The feature you are usin\ETC.}
{retaining \msg text > luatex/luatex-required=\long macro:#1#2#3#4->LuaTeX engine not in use\ETC.}
{retaining \msg extra text > coffin/show=\long macro:#1#2#3#4->}
{retaining \msg text > coffin/show=\long macro:#1#2#3#4->Size of coffin #1:#2\\Po\ETC.}
{retaining \msg extra text > coffin/unknown-pole=\long macro:#1#2#3#4->LaTeX was asked to find \ETC.}
{retaining \msg text > coffin/unknown-pole=\long macro:#1#2#3#4->Pole '#1' unknown for co\ETC.}
{retaining \msg extra text > coffin/unknown=\long macro:#1#2#3#4->The coffin '#1' was neve\ETC.}
{retaining \msg text > coffin/unknown=\long macro:#1#2#3#4->Unknown coffin '#1'.}
{retaining \msg extra text > coffin/no-pole-intersection=\long macro:#1#2#3#4->LaTeX was asked to find \ETC.}
{retaining \msg text > coffin/no-pole-intersection=\long macro:#1#2#3#4->No intersection between \ETC.}
{retaining \coffin_log:cnn=\protected\long macro:->\exp_args:Nc \coffin_log:Nnn }
{retaining \coffin_show:cnn=\protected\long macro:->\exp_args:Nc \coffin_show:Nnn }
{retaining \coffin_log:c=\protected\long macro:->\exp_args:Nc \coffin_log:N }
{retaining \coffin_show:c=\protected\long macro:->\exp_args:Nc \coffin_show:N }
{retaining \coffin_log_structure:c=\protected\long macro:->\exp_args:Nc \coffin_log_structure:N }
{retaining \coffin_show_structure:c=\protected\long macro:->\exp_args:Nc \coffin_show_structure:N }
{retaining \coffin_display_handles:cn=\protected\long macro:->\exp_args:Nc \coffin_display_handles:Nn }
{retaining \coffin_mark_handle:cnnn=\protected\long macro:->\exp_args:Nc \coffin_mark_handle:Nnnn }
{restoring \dimen284=0.0pt}
{restoring \l__coffin_display_handles_prop=macro:->\s__prop \__prop_chk:w }
{retaining \coffin 273 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 273 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 272 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 272 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 271 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 271 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin_typeset:cnnnn=\protected\long macro:->\exp_args:Nc \coffin_typeset:Nnnnn }
{restoring \box270=void}
{retaining \coffin 270 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 270 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin_gattach:cnncnnnn=\protected\long macro:->\exp_args:Ncnnc \coffin_gattach:NnnNnnnn }
{retaining \coffin_gattach:Nnncnnnn=\protected\long macro:->\exp_args:NNnnc \coffin_gattach:NnnNnnnn }
{retaining \coffin_gattach:cnnNnnnn=\protected\long macro:->\exp_args:Nc \coffin_gattach:NnnNnnnn }
{retaining \coffin_attach:cnncnnnn=\protected\long macro:->\exp_args:Ncnnc \coffin_attach:NnnNnnnn }
{retaining \coffin_attach:Nnncnnnn=\protected\long macro:->\exp_args:NNnnc \coffin_attach:NnnNnnnn }
{retaining \coffin_attach:cnnNnnnn=\protected\long macro:->\exp_args:Nc \coffin_attach:NnnNnnnn }
{retaining \coffin_gjoin:cnncnnnn=\protected\long macro:->\exp_args:Ncnnc \coffin_gjoin:NnnNnnnn }
{retaining \coffin_gjoin:Nnncnnnn=\protected\long macro:->\exp_args:NNnnc \coffin_gjoin:NnnNnnnn }
{retaining \coffin_gjoin:cnnNnnnn=\protected\long macro:->\exp_args:Nc \coffin_gjoin:NnnNnnnn }
{retaining \coffin_join:cnncnnnn=\protected\long macro:->\exp_args:Ncnnc \coffin_join:NnnNnnnn }
{retaining \coffin_join:Nnncnnnn=\protected\long macro:->\exp_args:NNnnc \coffin_join:NnnNnnnn }
{retaining \coffin_join:cnnNnnnn=\protected\long macro:->\exp_args:Nc \coffin_join:NnnNnnnn }
{retaining \coffin_gscale:cnn=\protected\long macro:->\exp_args:Nc \coffin_gscale:Nnn }
{retaining \coffin_scale:cnn=\protected\long macro:->\exp_args:Nc \coffin_scale:Nnn }
{retaining \coffin_gresize:cnn=\protected\long macro:->\exp_args:Nc \coffin_gresize:Nnn }
{retaining \coffin_resize:cnn=\protected\long macro:->\exp_args:Nc \coffin_resize:Nnn }
{retaining \coffin_grotate:cn=\protected\long macro:->\exp_args:Nc \coffin_grotate:Nn }
{retaining \coffin_rotate:cn=\protected\long macro:->\exp_args:Nc \coffin_rotate:Nn }
{retaining \coffin_gset_vertical_pole:cnn=\protected\long macro:->\exp_args:Nc \coffin_gset_vertical_pole:Nnn }
{retaining \coffin_set_vertical_pole:cnn=\protected\long macro:->\exp_args:Nc \coffin_set_vertical_pole:Nnn }
{retaining \coffin_gset_horizontal_pole:cnn=\protected\long macro:->\exp_args:Nc \coffin_gset_horizontal_pole:Nnn }
{retaining \coffin_set_horizontal_pole:cnn=\protected\long macro:->\exp_args:Nc \coffin_set_horizontal_pole:Nnn }
{retaining \coffin 269 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 269 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 268 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 268 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 267 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 267 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 266 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 266 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 265 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 265 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 264 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 264 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 263 poles=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin 263 corners=macro:->\s__prop \__prop_chk:w \__prop_pair:wn \ETC.}
{retaining \coffin_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \coffin_gset_eq:NN }
{retaining \coffin_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \coffin_gset_eq:NN }
{retaining \coffin_gset_eq:cN=\protected\long macro:->\exp_args:Nc \coffin_gset_eq:NN }
{retaining \coffin_set_eq:cc=\protected\long macro:->\exp_args:Ncc \coffin_set_eq:NN }
{retaining \coffin_set_eq:Nc=\protected\long macro:->\exp_args:NNc \coffin_set_eq:NN }
{retaining \coffin_set_eq:cN=\protected\long macro:->\exp_args:Nc \coffin_set_eq:NN }
{retaining \vcoffin_gset:cnw=\protected\long macro:->\exp_args:Nc \vcoffin_gset:Nnw }
{retaining \vcoffin_set:cnw=\protected\long macro:->\exp_args:Nc \vcoffin_set:Nnw }
{retaining \hcoffin_gset:cw=\protected\long macro:->\exp_args:Nc \hcoffin_gset:Nw }
{retaining \hcoffin_set:cw=\protected\long macro:->\exp_args:Nc \hcoffin_set:Nw }
{retaining \vcoffin_gset:cnn=\protected\long macro:->\exp_args:Nc \vcoffin_gset:Nnn }
{retaining \vcoffin_set:cnn=\protected\long macro:->\exp_args:Nc \vcoffin_set:Nnn }
{retaining \hcoffin_gset:cn=\protected\long macro:->\exp_args:Nc \hcoffin_gset:Nn }
{retaining \hcoffin_set:cn=\protected\long macro:->\exp_args:Nc \hcoffin_set:Nn }
{retaining \coffin_new:c=\protected\long macro:->\exp_args:Nc \coffin_new:N }
{retaining \coffin_gclear:c=\protected\long macro:->\exp_args:Nc \coffin_gclear:N }
{retaining \coffin_clear:c=\protected\long macro:->\exp_args:Nc \coffin_clear:N }
{retaining \coffin_if_exist:cTF=\long macro:->\exp_args:Nc \coffin_if_exist:NTF }
{retaining \coffin_if_exist:cF=\long macro:->\exp_args:Nc \coffin_if_exist:NF }
{retaining \coffin_if_exist:cT=\long macro:->\exp_args:Nc \coffin_if_exist:NT }
{retaining \coffin_if_exist_p:c=\long macro:->\exp_args:Nc \coffin_if_exist_p:N }
{retaining \coffin_if_exist:NTF=\long macro:#1->\cs_if_exist:NTF #1{\cs_if_exist:cTF \ETC.}
{retaining \coffin_if_exist:NF=\long macro:#1->\cs_if_exist:NTF #1{\cs_if_exist:cTF \ETC.}
{retaining \coffin_if_exist:NT=\long macro:#1->\cs_if_exist:NTF #1{\cs_if_exist:cTF \ETC.}
{retaining \coffin_if_exist_p:N=\long macro:#1->\cs_if_exist:NTF #1{\cs_if_exist:cTF \ETC.}
{retaining \__pdf_version_compare_>:w=\long macro:#1.#2.#3\s__pdf_stop ->\bool_lazy_or:nnTF \ETC.}
{retaining \__pdf_version_compare_<:w=\long macro:#1.#2.#3\s__pdf_stop ->\bool_lazy_or:nnTF \ETC.}
{retaining \__pdf_version_compare_=:w=\long macro:#1.#2.#3\s__pdf_stop ->\bool_lazy_and:nnTF \ETC.}
{retaining \pdf_version_compare:NnTF=\long macro:#1#2->\use:c {__pdf_version_compar\ETC.}
{retaining \pdf_version_compare:NnF=\long macro:#1#2->\use:c {__pdf_version_compar\ETC.}
{retaining \pdf_version_compare:NnT=\long macro:#1#2->\use:c {__pdf_version_compar\ETC.}
{retaining \pdf_version_compare_p:Nn=\long macro:#1#2->\use:c {__pdf_version_compar\ETC.}
{retaining \pdf_object_if_exist:nTF=\long macro:#1->\int_if_exist:cTF {c__pdf_obje\ETC.}
{retaining \pdf_object_if_exist:nF=\long macro:#1->\int_if_exist:cTF {c__pdf_obje\ETC.}
{retaining \pdf_object_if_exist:nT=\long macro:#1->\int_if_exist:cTF {c__pdf_obje\ETC.}
{retaining \pdf_object_if_exist_p:n=\long macro:#1->\int_if_exist:cTF {c__pdf_obje\ETC.}
{retaining \pdf_object_unnamed_write:nx=\protected\long macro:->\exp_args:Nnx \pdf_object_unnamed_write:nn }
{retaining \pdf_object_unnamed_write:ne=\protected\long macro:->\exp_args:Nne \pdf_object_unnamed_write:nn }
{retaining \pdf_object_write:nnx=\protected\long macro:->\exp_args:Nnnx \pdf_object_write:nnn }
{retaining \pdf_object_write:nne=\protected\long macro:->\exp_args:Nnne \pdf_object_write:nnn }
{retaining \msg extra text > color/show=\long macro:#1#2#3#4->}
{retaining \msg text > color/show=\long macro:#1#2#3#4->The color #1 \tl_if_empty:nTF \ETC.}
{retaining \msg extra text > color/unknown-model-type=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-model-type=\long macro:#1#2#3#4->Unknown color model type\ETC.}
{retaining \msg extra text > color/unknown-model=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-model=\long macro:#1#2#3#4->Unknown color model '#1'\ETC.}
{retaining \msg extra text > color/unknown-CIELAB-illuminant=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-CIELAB-illuminant=\long macro:#1#2#3#4->Unknown illuminant model\ETC.}
{retaining \msg extra text > color/unknown-export-format=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-export-format=\long macro:#1#2#3#4->Unknown export format '#1\ETC.}
{retaining \msg extra text > color/unknown-alternative-model=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-alternative-model=\long macro:#1#2#3#4->Separation color space '\ETC.}
{retaining \msg extra text > color/unknown-color=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/unknown-color=\long macro:#1#2#3#4->Unknown color '#1'.}
{retaining \msg extra text > color/unhandled-model=\long macro:#1#2#3#4->}
{retaining \msg text > color/unhandled-model=\long macro:#1#2#3#4->Unhandled color model in\ETC.}
{retaining \msg extra text > color/separation-requires-name=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/separation-requires-name=\long macro:#1#2#3#4->Separation color space '\ETC.}
{retaining \msg extra text > color/separation-alternative-values=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/separation-alternative-values=\long macro:#1#2#3#4->Separation color space '\ETC.}
{retaining \msg extra text > color/separation-alternative-model=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/separation-alternative-model=\long macro:#1#2#3#4->Separation color space '\ETC.}
{retaining \msg extra text > color/out-of-range=\long macro:#1#2#3#4->LaTeX was expecting a va\ETC.}
{retaining \msg text > color/out-of-range=\long macro:#1#2#3#4->Input value #1 out of ra\ETC.}
{retaining \msg extra text > color/model-already-defined=\long macro:#1#2#3#4->LaTeX was asked to defin\ETC.}
{retaining \msg text > color/model-already-defined=\long macro:#1#2#3#4->Color model '#1' already\ETC.}
{retaining \msg extra text > color/ICCBased-requires-file=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/ICCBased-requires-file=\long macro:#1#2#3#4->ICCBased color space '#1\ETC.}
{retaining \msg extra text > color/ICCBased-unsupported-colorspace=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/ICCBased-unsupported-colorspace=\long macro:#1#2#3#4->ICCBased color space '#1\ETC.}
{retaining \msg extra text > color/ICC-Device-unknown=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/ICC-Device-unknown=\long macro:#1#2#3#4->Unknown device color spa\ETC.}
{retaining \msg extra text > color/DeviceN-requires-names=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/DeviceN-requires-names=\long macro:#1#2#3#4->DeviceN color space '#1'\ETC.}
{retaining \msg extra text > color/DeviceN-no-alternative=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/DeviceN-no-alternative=\long macro:#1#2#3#4->DeviceN color spaces req\ETC.}
{retaining \msg extra text > color/DeviceN-inconsistent-alternative=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/DeviceN-inconsistent-alternative=\long macro:#1#2#3#4->DeviceN color spaces req\ETC.}
{retaining \msg extra text > color/conversion-not-available=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/conversion-not-available=\long macro:#1#2#3#4->No model conversion avai\ETC.}
{retaining \msg extra text > color/CIELAB-requires-illuminant=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > color/CIELAB-requires-illuminant=\long macro:#1#2#3#4->CIELAB color space '#1' \ETC.}
{restoring \l__kernel_keyval_allow_blank_keys_bool=\char"0}
{retaining \__color_model_devicen_convert:nnne=\protected\long macro:->\exp_args:Nnnne \__color_model_devicen_convert:nnnn }
{retaining \__color_model_devicen_transform_4:nnnnn=\protected\long macro:#1#2#3#4#5->\clist_map_inline:nn {\ETC.}
{retaining \__color_model_devicen_transform_3:nnnnn=\protected\long macro:#1#2#3#4#5->\clist_map_inline:nn {\ETC.}
{retaining \__color_model_devicen_transform_1:nnnnn=\protected\long macro:#1#2#3#4#5->\__color_model_devicen_transform:nnn \ETC.}
{retaining \__color_model_devicen_parse_4:nn=\protected\long macro:#1#2->\cs_new:cpn {__color_parse_m\ETC.}
{retaining \__color_model_devicen_parse_3:nn=\protected\long macro:#1#2->\cs_new:cpn {__color_parse_m\ETC.}
{retaining \__color_model_devicen_parse_2:nn=\protected\long macro:#1#2->\cs_new:cpn {__color_parse_m\ETC.}
{retaining \__color_model_devicen_parse_1:nn=\protected\long macro:#1#2->\cs_new:cpn {__color_parse_m\ETC.}
{retaining \__color_model_init:nne=\protected\long macro:->\exp_args:Nnne \__color_model_init:nnn }
{retaining \c__color_model_whitepoint_CIELAB_d75_tl=macro:->0.9497 1 1.2261}
{retaining \c__color_model_whitepoint_CIELAB_d65_tl=macro:->0.9504 1 1.0888}
{retaining \c__color_model_whitepoint_CIELAB_d55_tl=macro:->0.9568 1 0.9214}
{retaining \c__color_model_whitepoint_CIELAB_d50_tl=macro:->0.9642 1 0.8251}
{retaining \__color_export_space-sep-rgb:Nw=\protected\long macro:#1#2\s__color_stop ->\tl_set:Nn #1\ETC.}
{retaining \__color_export_comma-sep-rgb:Nw=\protected\long macro:#1#2 #3 #4\s__color_stop ->\tl_set:Ne \ETC.}
{retaining \__color_export_space-sep-cmyk:Nw=\protected\long macro:#1#2\s__color_stop ->\tl_set:Nn #1\ETC.}
{retaining \__color_export_comma-sep-cmyk:Nw=\protected\long macro:#1#2 #3 #4 #5\s__color_stop ->\tl_set:Nn \ETC.}
{retaining \c__color_export_space-sep-rgb_tl=macro:->rgb}
{retaining \c__color_export_space-sep-cmyk_tl=macro:->cmyk}
{retaining \c__color_export_comma-sep-rgb_tl=macro:->rgb}
{retaining \c__color_export_comma-sep-cmyk_tl=macro:->cmyk}
{restoring \l__color_named_._tl=macro:->}
{restoring \l__color_named_blue_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_blue_tl=macro:->}
{retaining \l__color_named_blue_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_blue_tl=macro:->}
{restoring \l__color_named_green_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_green_tl=macro:->}
{retaining \l__color_named_green_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_green_tl=macro:->}
{restoring \l__color_named_red_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_red_tl=macro:->}
{retaining \l__color_named_red_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_red_tl=macro:->}
{restoring \l__color_named_yellow_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_yellow_tl=macro:->}
{retaining \l__color_named_yellow_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_yellow_tl=macro:->}
{restoring \l__color_named_magenta_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_magenta_tl=macro:->}
{retaining \l__color_named_magenta_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_magenta_tl=macro:->}
{restoring \l__color_named_cyan_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_cyan_tl=macro:->}
{retaining \l__color_named_cyan_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_cyan_tl=macro:->}
{restoring \l__color_named_white_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_white_tl=macro:->}
{retaining \l__color_named_white_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_white_tl=macro:->}
{restoring \l__color_named_black_prop=macro:->\s__prop \__prop_chk:w }
{restoring \l__color_named_black_tl=macro:->}
{restoring \l__color_internal_tl=macro:->}
{restoring \l__color_named_tl=macro:->}
{retaining \l__color_named_black_prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_black_tl=macro:->}
{restoring \l_color_math_active_tl=macro:->}
{retaining \__color_parse_model_&spot:w=\long macro:#1,#2\s__color_stop ->{gray}{#1}}
{retaining \__color_parse_model_hsb_6:nnnn=\long macro:#1#2#3#4->#1 #2 #2}
{retaining \__color_parse_model_hsb_5:nnnn=\long macro:#1#2#3#4->#1 #2 #3}
{retaining \__color_parse_model_hsb_4:nnnn=\long macro:#1#2#3#4->#4 #2 #1}
{retaining \__color_parse_model_hsb_3:nnnn=\long macro:#1#2#3#4->#2 #3 #1}
{retaining \__color_parse_model_hsb_2:nnnn=\long macro:#1#2#3#4->#2 #1 #4}
{retaining \__color_parse_model_hsb_1:nnnn=\long macro:#1#2#3#4->#3 #1 #2}
{retaining \__color_parse_model_hsb_0:nnnn=\long macro:#1#2#3#4->#1 #4 #2}
{retaining \__color_parse_mix:NVVn=\long macro:->\exp_args:NNVV \__color_parse_mix:Nnnn }
{retaining \l__color_named_._prop=macro:->\s__prop \__prop_chk:w }
{retaining \l__color_named_._tl=macro:->}
{retaining \__color_convert:nnVN=\protected\long macro:->\exp_args:NnnV \__color_convert:nnnN }
{retaining \__color_convert:nVnN=\protected\long macro:->\exp_args:NnV \__color_convert:nnnN }
{retaining \exp_last_unbraced:cf=\long macro:->\exp_args:Nc \exp_last_unbraced:Nf }
{retaining \__color_convert:VVN=\protected\long macro:->\exp_args:NVV \__color_convert:nnN }
{retaining \__color_extract:VNN=\protected\long macro:->\exp_args:NV \__color_extract:nNN }
{retaining \color_if_exist:nTF=\long macro:#1->\prop_if_exist:cTF {l__color_n\ETC.}
{retaining \color_if_exist:nF=\long macro:#1->\prop_if_exist:cTF {l__color_n\ETC.}
{retaining \color_if_exist:nT=\long macro:#1->\prop_if_exist:cTF {l__color_n\ETC.}
{retaining \color_if_exist_p:n=\long macro:#1->\prop_if_exist:cTF {l__color_n\ETC.}
{restoring \l__color_current_tl=macro:->}
{retaining \box_gset_viewport:cnnnn=\protected\long macro:->\exp_args:Nc \box_gset_viewport:Nnnnn }
{retaining \box_set_viewport:cnnnn=\protected\long macro:->\exp_args:Nc \box_set_viewport:Nnnnn }
{retaining \box_gset_trim:cnnnn=\protected\long macro:->\exp_args:Nc \box_gset_trim:Nnnnn }
{retaining \box_set_trim:cnnnn=\protected\long macro:->\exp_args:Nc \box_set_trim:Nnnnn }
{retaining \box_gset_clipped:c=\protected\long macro:->\exp_args:Nc \box_gset_clipped:N }
{retaining \box_set_clipped:c=\protected\long macro:->\exp_args:Nc \box_set_clipped:N }
{retaining \box_gautosize_to_wd_and_ht_plus_dp:cnn=\protected\long macro:->\exp_args:Nc \box_gautosize_to_wd_and_ht_plus_dp:Nnn }
{retaining \box_autosize_to_wd_and_ht_plus_dp:cnn=\protected\long macro:->\exp_args:Nc \box_autosize_to_wd_and_ht_plus_dp:Nnn }
{retaining \box_gautosize_to_wd_and_ht:cnn=\protected\long macro:->\exp_args:Nc \box_gautosize_to_wd_and_ht:Nnn }
{retaining \box_autosize_to_wd_and_ht:cnn=\protected\long macro:->\exp_args:Nc \box_autosize_to_wd_and_ht:Nnn }
{retaining \box_gscale:cnn=\protected\long macro:->\exp_args:Nc \box_gscale:Nnn }
{retaining \box_scale:cnn=\protected\long macro:->\exp_args:Nc \box_scale:Nnn }
{retaining \box_gresize_to_wd_and_ht:cnn=\protected\long macro:->\exp_args:Nc \box_gresize_to_wd_and_ht:Nnn }
{retaining \box_resize_to_wd_and_ht:cnn=\protected\long macro:->\exp_args:Nc \box_resize_to_wd_and_ht:Nnn }
{retaining \box_gresize_to_wd:cn=\protected\long macro:->\exp_args:Nc \box_gresize_to_wd:Nn }
{retaining \box_resize_to_wd:cn=\protected\long macro:->\exp_args:Nc \box_resize_to_wd:Nn }
{retaining \box_gresize_to_ht_plus_dp:cn=\protected\long macro:->\exp_args:Nc \box_gresize_to_ht_plus_dp:Nn }
{retaining \box_resize_to_ht_plus_dp:cn=\protected\long macro:->\exp_args:Nc \box_resize_to_ht_plus_dp:Nn }
{retaining \box_gresize_to_ht:cn=\protected\long macro:->\exp_args:Nc \box_gresize_to_ht:Nn }
{retaining \box_resize_to_ht:cn=\protected\long macro:->\exp_args:Nc \box_resize_to_ht:Nn }
{retaining \box_gresize_to_wd_and_ht_plus_dp:cnn=\protected\long macro:->\exp_args:Nc \box_gresize_to_wd_and_ht_plus_dp:Nnn }
{retaining \box_resize_to_wd_and_ht_plus_dp:cnn=\protected\long macro:->\exp_args:Nc \box_resize_to_wd_and_ht_plus_dp:Nnn }
{retaining \box_grotate:cn=\protected\long macro:->\exp_args:Nc \box_grotate:Nn }
{retaining \box_rotate:cn=\protected\long macro:->\exp_args:Nc \box_rotate:Nn }
{retaining \vbox_gset_split_to_ht:ccn=\protected\long macro:->\exp_args:Ncc \vbox_gset_split_to_ht:NNn }
{retaining \vbox_gset_split_to_ht:Ncn=\protected\long macro:->\exp_args:NNc \vbox_gset_split_to_ht:NNn }
{retaining \vbox_gset_split_to_ht:cNn=\protected\long macro:->\exp_args:Nc \vbox_gset_split_to_ht:NNn }
{retaining \vbox_set_split_to_ht:ccn=\protected\long macro:->\exp_args:Ncc \vbox_set_split_to_ht:NNn }
{retaining \vbox_set_split_to_ht:Ncn=\protected\long macro:->\exp_args:NNc \vbox_set_split_to_ht:NNn }
{retaining \vbox_set_split_to_ht:cNn=\protected\long macro:->\exp_args:Nc \vbox_set_split_to_ht:NNn }
{retaining \vbox_unpack_drop:c=\protected\long macro:->\exp_args:Nc \vbox_unpack_drop:N }
{retaining \vbox_unpack:c=\protected\long macro:->\exp_args:Nc \vbox_unpack:N }
{retaining \vbox_gset_to_ht:cnw=\protected\long macro:->\exp_args:Nc \vbox_gset_to_ht:Nnw }
{retaining \vbox_set_to_ht:cnw=\protected\long macro:->\exp_args:Nc \vbox_set_to_ht:Nnw }
{retaining \vbox_gset:cw=\protected\long macro:->\exp_args:Nc \vbox_gset:Nw }
{retaining \vbox_set:cw=\protected\long macro:->\exp_args:Nc \vbox_set:Nw }
{retaining \vbox_gset_to_ht:cnn=\protected\long macro:->\exp_args:Nc \vbox_gset_to_ht:Nnn }
{retaining \vbox_set_to_ht:cnn=\protected\long macro:->\exp_args:Nc \vbox_set_to_ht:Nnn }
{retaining \vbox_gset_top:cn=\protected\long macro:->\exp_args:Nc \vbox_gset_top:Nn }
{retaining \vbox_set_top:cn=\protected\long macro:->\exp_args:Nc \vbox_set_top:Nn }
{retaining \vbox_gset:cn=\protected\long macro:->\exp_args:Nc \vbox_gset:Nn }
{retaining \vbox_set:cn=\protected\long macro:->\exp_args:Nc \vbox_set:Nn }
{retaining \hbox_unpack_drop:c=\protected\long macro:->\exp_args:Nc \hbox_unpack_drop:N }
{retaining \hbox_unpack:c=\protected\long macro:->\exp_args:Nc \hbox_unpack:N }
{retaining \hbox_gset_to_wd:cnw=\protected\long macro:->\exp_args:Nc \hbox_gset_to_wd:Nnw }
{retaining \hbox_set_to_wd:cnw=\protected\long macro:->\exp_args:Nc \hbox_set_to_wd:Nnw }
{retaining \hbox_gset:cw=\protected\long macro:->\exp_args:Nc \hbox_gset:Nw }
{retaining \hbox_set:cw=\protected\long macro:->\exp_args:Nc \hbox_set:Nw }
{retaining \hbox_gset_to_wd:cnn=\protected\long macro:->\exp_args:Nc \hbox_gset_to_wd:Nnn }
{retaining \hbox_set_to_wd:cnn=\protected\long macro:->\exp_args:Nc \hbox_set_to_wd:Nnn }
{retaining \hbox_gset:cn=\protected\long macro:->\exp_args:Nc \hbox_gset:Nn }
{retaining \hbox_set:cn=\protected\long macro:->\exp_args:Nc \hbox_set:Nn }
{retaining \__box_show:NNff=\protected\long macro:->\exp_args:NNNff \__box_show:NNnn }
{retaining \box_log:cnn=\protected\long macro:->\exp_args:Nc \box_log:Nnn }
{retaining \box_log:c=\protected\long macro:->\exp_args:Nc \box_log:N }
{retaining \box_show:cnn=\protected\long macro:->\exp_args:Nc \box_show:Nnn }
{retaining \box_show:c=\protected\long macro:->\exp_args:Nc \box_show:N }
{retaining \box_gset_to_last:c=\protected\long macro:->\exp_args:Nc \box_gset_to_last:N }
{retaining \box_set_to_last:c=\protected\long macro:->\exp_args:Nc \box_set_to_last:N }
{retaining \box_if_empty:cTF=\long macro:->\exp_args:Nc \box_if_empty:NTF }
{retaining \box_if_empty:cF=\long macro:->\exp_args:Nc \box_if_empty:NF }
{retaining \box_if_empty:cT=\long macro:->\exp_args:Nc \box_if_empty:NT }
{retaining \box_if_empty_p:c=\long macro:->\exp_args:Nc \box_if_empty_p:N }
{retaining \box_if_empty:NTF=\long macro:#1->\if_box_empty:N #1\__prg_TF_true:w \ETC.}
{retaining \box_if_empty:NF=\long macro:#1->\if_box_empty:N #1\__prg_F_true:w \ETC.}
{retaining \box_if_empty:NT=\long macro:#1->\if_box_empty:N #1\__prg_T_true:w \ETC.}
{retaining \box_if_empty_p:N=\long macro:#1->\if_box_empty:N #1\__prg_p_true:w \ETC.}
{retaining \box_if_vertical:cTF=\long macro:->\exp_args:Nc \box_if_vertical:NTF }
{retaining \box_if_vertical:cF=\long macro:->\exp_args:Nc \box_if_vertical:NF }
{retaining \box_if_vertical:cT=\long macro:->\exp_args:Nc \box_if_vertical:NT }
{retaining \box_if_vertical_p:c=\long macro:->\exp_args:Nc \box_if_vertical_p:N }
{retaining \box_if_horizontal:cTF=\long macro:->\exp_args:Nc \box_if_horizontal:NTF }
{retaining \box_if_horizontal:cF=\long macro:->\exp_args:Nc \box_if_horizontal:NF }
{retaining \box_if_horizontal:cT=\long macro:->\exp_args:Nc \box_if_horizontal:NT }
{retaining \box_if_horizontal_p:c=\long macro:->\exp_args:Nc \box_if_horizontal_p:N }
{retaining \box_if_vertical:NTF=\long macro:#1->\if_vbox:N #1\__prg_TF_true:w \ETC.}
{retaining \box_if_vertical:NF=\long macro:#1->\if_vbox:N #1\__prg_F_true:w \fi: \ETC.}
{retaining \box_if_vertical:NT=\long macro:#1->\if_vbox:N #1\__prg_T_true:w \fi: \ETC.}
{retaining \box_if_vertical_p:N=\long macro:#1->\if_vbox:N #1\__prg_p_true:w \fi: \ETC.}
{retaining \box_if_horizontal:NTF=\long macro:#1->\if_hbox:N #1\__prg_TF_true:w \ETC.}
{retaining \box_if_horizontal:NF=\long macro:#1->\if_hbox:N #1\__prg_F_true:w \fi: \ETC.}
{retaining \box_if_horizontal:NT=\long macro:#1->\if_hbox:N #1\__prg_T_true:w \fi: \ETC.}
{retaining \box_if_horizontal_p:N=\long macro:#1->\if_hbox:N #1\__prg_p_true:w \fi: \ETC.}
{retaining \box_use:c=\protected\long macro:->\exp_args:Nc \box_use:N }
{retaining \box_use_drop:c=\protected\long macro:->\exp_args:Nc \box_use_drop:N }
{retaining \box_gset_wd:cn=\protected\long macro:->\exp_args:Nc \box_gset_wd:Nn }
{retaining \box_set_wd:cn=\protected\long macro:->\exp_args:Nc \box_set_wd:Nn }
{retaining \box_gset_ht:cn=\protected\long macro:->\exp_args:Nc \box_gset_ht:Nn }
{retaining \box_set_ht:cn=\protected\long macro:->\exp_args:Nc \box_set_ht:Nn }
{retaining \box_gset_dp:cn=\protected\long macro:->\exp_args:Nc \box_gset_dp:Nn }
{retaining \box_set_dp:cn=\protected\long macro:->\exp_args:Nc \box_set_dp:Nn }
{retaining \box_ht_plus_dp:c=\protected\long macro:->\exp_args:Nc \box_ht_plus_dp:N }
{retaining \box_wd:c=\protected\long macro:->\exp_args:Nc \box_wd:N }
{retaining \box_dp:c=\protected\long macro:->\exp_args:Nc \box_dp:N }
{retaining \box_ht:c=\protected\long macro:->\exp_args:Nc \box_ht:N }
{retaining \box_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \box_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \box_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \box_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \box_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \box_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \box_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \box_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \box_gset_eq_drop:cc=\protected\long macro:->\exp_args:Ncc \box_gset_eq_drop:NN }
{retaining \box_gset_eq_drop:Nc=\protected\long macro:->\exp_args:NNc \box_gset_eq_drop:NN }
{retaining \box_gset_eq_drop:cN=\protected\long macro:->\exp_args:Nc \box_gset_eq_drop:NN }
{retaining \box_set_eq_drop:cc=\protected\long macro:->\exp_args:Ncc \box_set_eq_drop:NN }
{retaining \box_set_eq_drop:Nc=\protected\long macro:->\exp_args:NNc \box_set_eq_drop:NN }
{retaining \box_set_eq_drop:cN=\protected\long macro:->\exp_args:Nc \box_set_eq_drop:NN }
{retaining \box_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \box_gset_eq:NN }
{retaining \box_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \box_gset_eq:NN }
{retaining \box_gset_eq:cN=\protected\long macro:->\exp_args:Nc \box_gset_eq:NN }
{retaining \box_set_eq:cc=\protected\long macro:->\exp_args:Ncc \box_set_eq:NN }
{retaining \box_set_eq:Nc=\protected\long macro:->\exp_args:NNc \box_set_eq:NN }
{retaining \box_set_eq:cN=\protected\long macro:->\exp_args:Nc \box_set_eq:NN }
{retaining \box_gclear_new:c=\protected\long macro:->\exp_args:Nc \box_gclear_new:N }
{retaining \box_clear_new:c=\protected\long macro:->\exp_args:Nc \box_clear_new:N }
{retaining \box_gclear:c=\protected\long macro:->\exp_args:Nc \box_gclear:N }
{retaining \box_clear:c=\protected\long macro:->\exp_args:Nc \box_clear:N }
{retaining \box_new:c=\protected\long macro:->\exp_args:Nc \box_new:N }
{retaining \msg extra text > regex/show=\long macro:#1#2#3#4->}
{retaining \msg text > regex/show=\long macro:#1#2#3#4->> Compiled regex \tl_if_empty:nTF \ETC.}
{retaining \msg extra text > regex/case-odd=\long macro:#1#2#3#4->There must be a #2 part \ETC.}
{retaining \msg text > regex/case-odd=\long macro:#1#2#3#4->#1 with odd number of it\ETC.}
{retaining \msg extra text > regex/backwards-quantifier=\long macro:#1#2#3#4->The values given in a qu\ETC.}
{retaining \msg text > regex/backwards-quantifier=\long macro:#1#2#3#4->Quantifer "{#1,#2}" is b\ETC.}
{retaining \msg extra text > regex/submatch-too-big=\long macro:#1#2#3#4->}
{retaining \msg text > regex/submatch-too-big=\long macro:#1#2#3#4->Submatch #1 used but reg\ETC.}
{retaining \msg extra text > regex/replacement-missing-rparen=\long macro:#1#2#3#4->There \int_compare:nTF {\ETC.}
{retaining \msg text > regex/replacement-missing-rparen=\long macro:#1#2#3#4->Missing right parenthesi\ETC.}
{retaining \msg extra text > regex/replacement-missing-rbrace=\long macro:#1#2#3#4->There \int_compare:nTF {\ETC.}
{retaining \msg text > regex/replacement-missing-rbrace=\long macro:#1#2#3#4->Missing right brace inse\ETC.}
{retaining \msg extra text > regex/replacement-null-space=\long macro:#1#2#3#4->You asked for a characte\ETC.}
{retaining \msg text > regex/replacement-null-space=\long macro:#1#2#3#4->TeX cannot build a space\ETC.}
{retaining \msg extra text > regex/replacement-catcode-in-cs=\long macro:#1#2#3#4->In a replacement text, t\ETC.}
{retaining \msg text > regex/replacement-catcode-in-cs=\long macro:#1#2#3#4->Category code '\iow_char:N \ETC.}
{retaining \msg extra text > regex/replacement-catcode-escaped=\long macro:#1#2#3#4->In a replacement text, t\ETC.}
{retaining \msg text > regex/replacement-catcode-escaped=\long macro:#1#2#3#4->Escaped letter or digit \ETC.}
{retaining \msg extra text > regex/replacement-catcode-end=\long macro:#1#2#3#4->In a replacement text, t\ETC.}
{retaining \msg text > regex/replacement-catcode-end=\long macro:#1#2#3#4->Missing character for th\ETC.}
{retaining \msg extra text > regex/replacement-g=\long macro:#1#2#3#4->In the replacement text \ETC.}
{retaining \msg text > regex/replacement-g=\long macro:#1#2#3#4->Missing brace for the '\iow_char:N \ETC.}
{retaining \msg extra text > regex/replacement-u=\long macro:#1#2#3#4->In a replacement text, t\ETC.}
{retaining \msg text > regex/replacement-u=\long macro:#1#2#3#4->Misused '\iow_char:N \\u\ETC.}
{retaining \msg extra text > regex/replacement-c=\long macro:#1#2#3#4->In a replacement text, t\ETC.}
{retaining \msg text > regex/replacement-c=\long macro:#1#2#3#4->Misused '\iow_char:N \\c\ETC.}
{retaining \msg extra text > regex/special-group-unknown=\long macro:#1#2#3#4->The only valid construct\ETC.}
{retaining \msg text > regex/special-group-unknown=\long macro:#1#2#3#4->Unknown special group '#1\ETC.}
{retaining \msg extra text > regex/unknown-option=\long macro:#1#2#3#4->The only available optio\ETC.}
{retaining \msg text > regex/unknown-option=\long macro:#1#2#3#4->Unknown option '#1' for \ETC.}
{retaining \msg extra text > regex/result-unbalanced=\long macro:#1#2#3#4->LaTeX was asked to do so\ETC.}
{retaining \msg text > regex/result-unbalanced=\long macro:#1#2#3#4->Missing brace inserted w\ETC.}
{retaining \msg extra text > regex/posix-missing-close=\long macro:#1#2#3#4->The POSIX syntax '#1' mu\ETC.}
{retaining \msg text > regex/posix-missing-close=\long macro:#1#2#3#4->Missing closing ':]' for\ETC.}
{retaining \msg extra text > regex/posix-unknown=\long macro:#1#2#3#4->'[:#1:]' is not among th\ETC.}
{retaining \msg text > regex/posix-unknown=\long macro:#1#2#3#4->POSIX class '[:#1:]' unk\ETC.}
{retaining \msg extra text > regex/posix-unsupported=\long macro:#1#2#3#4->The '[.foo.]' and '[=bar\ETC.}
{retaining \msg text > regex/posix-unsupported=\long macro:#1#2#3#4->POSIX collating element \ETC.}
{retaining \msg extra text > regex/u-missing-rbrace=\long macro:#1#2#3#4->LaTeX \str_if_eq:eeTF {}\ETC.}
{retaining \msg text > regex/u-missing-rbrace=\long macro:#1#2#3#4->Missing right brace inse\ETC.}
{retaining \msg extra text > regex/u-missing-lbrace=\long macro:#1#2#3#4->The '\iow_char:N \\u' es\ETC.}
{retaining \msg text > regex/u-missing-lbrace=\long macro:#1#2#3#4->Missing left brace follo\ETC.}
{retaining \msg extra text > regex/c-trailing=\long macro:#1#2#3#4->A regular expression end\ETC.}
{retaining \msg text > regex/c-trailing=\long macro:#1#2#3#4->Trailing category code e\ETC.}
{retaining \msg extra text > regex/c-missing-category=\long macro:#1#2#3#4->In regular expressions, \ETC.}
{retaining \msg text > regex/c-missing-category=\long macro:#1#2#3#4->Invalid character '#1' f\ETC.}
{retaining \msg extra text > regex/c-missing-rbrack=\long macro:#1#2#3#4->A construction '\iow_char:N \ETC.}
{retaining \msg text > regex/c-missing-rbrack=\long macro:#1#2#3#4->Missing right bracket in\ETC.}
{retaining \msg extra text > regex/c-missing-rbrace=\long macro:#1#2#3#4->LaTeX was given a regula\ETC.}
{retaining \msg text > regex/c-missing-rbrace=\long macro:#1#2#3#4->Missing right brace inse\ETC.}
{retaining \msg extra text > regex/c-lparen-in-class=\long macro:#1#2#3#4->Construction such as '\iow_char:N \ETC.}
{retaining \msg text > regex/c-lparen-in-class=\long macro:#1#2#3#4->Catcode test cannot appl\ETC.}
{retaining \msg extra text > regex/cu-lbrace=\long macro:#1#2#3#4->Constructions such as '\iow_char:N \ETC.}
{retaining \msg text > regex/cu-lbrace=\long macro:#1#2#3#4->Left braces must be esca\ETC.}
{retaining \msg extra text > regex/c-C-invalid=\long macro:#1#2#3#4->The '\iow_char:N \\cC' c\ETC.}
{retaining \msg text > regex/c-C-invalid=\long macro:#1#2#3#4->'\iow_char:N \\cC' shoul\ETC.}
{retaining \msg extra text > regex/c-bad-mode=\long macro:#1#2#3#4->The '\iow_char:N \\c' es\ETC.}
{retaining \msg text > regex/c-bad-mode=\long macro:#1#2#3#4->Invalid nested '\iow_char:N \ETC.}
{retaining \msg extra text > regex/range-backwards=\long macro:#1#2#3#4->In ranges of characters \ETC.}
{retaining \msg text > regex/range-backwards=\long macro:#1#2#3#4->Range '[#1-#2]' out of o\ETC.}
{retaining \msg extra text > regex/range-missing-end=\long macro:#1#2#3#4->The end-point '#2' of th\ETC.}
{retaining \msg text > regex/range-missing-end=\long macro:#1#2#3#4->Invalid end-point for ra\ETC.}
{retaining \msg extra text > regex/bad-escape=\long macro:#1#2#3#4->The escape sequence '\iow_char:N \ETC.}
{retaining \msg text > regex/bad-escape=\long macro:#1#2#3#4->Invalid escape '\iow_char:N \ETC.}
{retaining \msg extra text > regex/extra-rparen=\long macro:#1#2#3#4->LaTeX came across a clos\ETC.}
{retaining \msg text > regex/extra-rparen=\long macro:#1#2#3#4->Extra right parenthesis \ETC.}
{retaining \msg extra text > regex/missing-rparen=\long macro:#1#2#3#4->LaTeX was given a regula\ETC.}
{retaining \msg text > regex/missing-rparen=\long macro:#1#2#3#4->Missing right \int_compare:nTF \ETC.}
{retaining \msg extra text > regex/missing-rbrack=\long macro:#1#2#3#4->LaTeX was given a regula\ETC.}
{retaining \msg text > regex/missing-rbrack=\long macro:#1#2#3#4->Missing right bracket in\ETC.}
{retaining \msg extra text > regex/invalid-quantifier=\long macro:#1#2#3#4->The character '#2' is in\ETC.}
{retaining \msg text > regex/invalid-quantifier=\long macro:#1#2#3#4->Braced quantifier '#1' m\ETC.}
{retaining \msg extra text > regex/x-overflow=\long macro:#1#2#3#4->}
{retaining \msg text > regex/x-overflow=\long macro:#1#2#3#4->Character code ##1 too l\ETC.}
{retaining \msg extra text > regex/x-missing-rbrace=\long macro:#1#2#3#4->}
{retaining \msg text > regex/x-missing-rbrace=\long macro:#1#2#3#4->Missing brace '}' in reg\ETC.}
{retaining \msg extra text > regex/trailing-backslash=\long macro:#1#2#3#4->}
{retaining \msg text > regex/trailing-backslash=\long macro:#1#2#3#4->Trailing '\' in regex or\ETC.}
{retaining \regex_split:NVNTF=\protected\long macro:->\exp_args:NNV \regex_split:NnNTF }
{retaining \regex_split:NVNF=\protected\long macro:->\exp_args:NNV \regex_split:NnNF }
{retaining \regex_split:NVNT=\protected\long macro:->\exp_args:NNV \regex_split:NnNT }
{retaining \regex_split:NVN=\protected\long macro:->\exp_args:NNV \regex_split:NnN }
{retaining \regex_split:nVNTF=\protected\long macro:->\exp_args:NnV \regex_split:nnNTF }
{retaining \regex_split:nVNF=\protected\long macro:->\exp_args:NnV \regex_split:nnNF }
{retaining \regex_split:nVNT=\protected\long macro:->\exp_args:NnV \regex_split:nnNT }
{retaining \regex_split:nVN=\protected\long macro:->\exp_args:NnV \regex_split:nnN }
{retaining \regex_split:NnNTF=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:N \ETC.}
{retaining \regex_split:NnNF=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:N \ETC.}
{retaining \regex_split:NnNT=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:N \ETC.}
{retaining \regex_split:nnNTF=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:n \ETC.}
{retaining \regex_split:nnNF=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:n \ETC.}
{retaining \regex_split:nnNT=\protected\long macro:#1#2#3->\__regex_split:nnN {\__regex_build:n \ETC.}
{retaining \regex_replace_all:NVNTF=\protected\long macro:->\exp_args:NNV \regex_replace_all:NnNTF }
{retaining \regex_replace_all:NVNF=\protected\long macro:->\exp_args:NNV \regex_replace_all:NnNF }
{retaining \regex_replace_all:NVNT=\protected\long macro:->\exp_args:NNV \regex_replace_all:NnNT }
{retaining \regex_replace_all:NVN=\protected\long macro:->\exp_args:NNV \regex_replace_all:NnN }
{retaining \regex_replace_all:nVNTF=\protected\long macro:->\exp_args:NnV \regex_replace_all:nnNTF }
{retaining \regex_replace_all:nVNF=\protected\long macro:->\exp_args:NnV \regex_replace_all:nnNF }
{retaining \regex_replace_all:nVNT=\protected\long macro:->\exp_args:NnV \regex_replace_all:nnNT }
{retaining \regex_replace_all:nVN=\protected\long macro:->\exp_args:NnV \regex_replace_all:nnN }
{retaining \regex_replace_all:NnNTF=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_all:NnNF=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_all:NnNT=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_all:nnNTF=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_all:nnNF=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_all:nnNT=\protected\long macro:#1#2#3->\__regex_replace_all:nnN {\ETC.}
{retaining \regex_replace_once:NVNTF=\protected\long macro:->\exp_args:NNV \regex_replace_once:NnNTF }
{retaining \regex_replace_once:NVNF=\protected\long macro:->\exp_args:NNV \regex_replace_once:NnNF }
{retaining \regex_replace_once:NVNT=\protected\long macro:->\exp_args:NNV \regex_replace_once:NnNT }
{retaining \regex_replace_once:NVN=\protected\long macro:->\exp_args:NNV \regex_replace_once:NnN }
{retaining \regex_replace_once:nVNTF=\protected\long macro:->\exp_args:NnV \regex_replace_once:nnNTF }
{retaining \regex_replace_once:nVNF=\protected\long macro:->\exp_args:NnV \regex_replace_once:nnNF }
{retaining \regex_replace_once:nVNT=\protected\long macro:->\exp_args:NnV \regex_replace_once:nnNT }
{retaining \regex_replace_once:nVN=\protected\long macro:->\exp_args:NnV \regex_replace_once:nnN }
{retaining \regex_replace_once:NnNTF=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_replace_once:NnNF=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_replace_once:NnNT=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_replace_once:nnNTF=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_replace_once:nnNF=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_replace_once:nnNT=\protected\long macro:#1#2#3->\__regex_replace_once:nnN \ETC.}
{retaining \regex_extract_all:NVNTF=\protected\long macro:->\exp_args:NNV \regex_extract_all:NnNTF }
{retaining \regex_extract_all:NVNF=\protected\long macro:->\exp_args:NNV \regex_extract_all:NnNF }
{retaining \regex_extract_all:NVNT=\protected\long macro:->\exp_args:NNV \regex_extract_all:NnNT }
{retaining \regex_extract_all:NVN=\protected\long macro:->\exp_args:NNV \regex_extract_all:NnN }
{retaining \regex_extract_all:nVNTF=\protected\long macro:->\exp_args:NnV \regex_extract_all:nnNTF }
{retaining \regex_extract_all:nVNF=\protected\long macro:->\exp_args:NnV \regex_extract_all:nnNF }
{retaining \regex_extract_all:nVNT=\protected\long macro:->\exp_args:NnV \regex_extract_all:nnNT }
{retaining \regex_extract_all:nVN=\protected\long macro:->\exp_args:NnV \regex_extract_all:nnN }
{retaining \regex_extract_all:NnNTF=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_all:NnNF=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_all:NnNT=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_all:nnNTF=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_all:nnNF=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_all:nnNT=\protected\long macro:#1#2#3->\__regex_extract_all:nnN {\ETC.}
{retaining \regex_extract_once:NVNTF=\protected\long macro:->\exp_args:NNV \regex_extract_once:NnNTF }
{retaining \regex_extract_once:NVNF=\protected\long macro:->\exp_args:NNV \regex_extract_once:NnNF }
{retaining \regex_extract_once:NVNT=\protected\long macro:->\exp_args:NNV \regex_extract_once:NnNT }
{retaining \regex_extract_once:NVN=\protected\long macro:->\exp_args:NNV \regex_extract_once:NnN }
{retaining \regex_extract_once:nVNTF=\protected\long macro:->\exp_args:NnV \regex_extract_once:nnNTF }
{retaining \regex_extract_once:nVNF=\protected\long macro:->\exp_args:NnV \regex_extract_once:nnNF }
{retaining \regex_extract_once:nVNT=\protected\long macro:->\exp_args:NnV \regex_extract_once:nnNT }
{retaining \regex_extract_once:nVN=\protected\long macro:->\exp_args:NnV \regex_extract_once:nnN }
{retaining \regex_extract_once:NnNTF=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_extract_once:NnNF=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_extract_once:NnNT=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_extract_once:nnNTF=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_extract_once:nnNF=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_extract_once:nnNT=\protected\long macro:#1#2#3->\__regex_extract_once:nnN \ETC.}
{retaining \regex_count:NVN=\protected\long macro:->\exp_args:NNV \regex_count:NnN }
{retaining \regex_count:nVN=\protected\long macro:->\exp_args:NnV \regex_count:nnN }
{retaining \regex_match:NVTF=\protected\long macro:->\exp_args:NNV \regex_match:NnTF }
{retaining \regex_match:NVF=\protected\long macro:->\exp_args:NNV \regex_match:NnF }
{retaining \regex_match:NVT=\protected\long macro:->\exp_args:NNV \regex_match:NnT }
{retaining \regex_match:NnTF=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:N \ETC.}
{retaining \regex_match:NnF=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:N \ETC.}
{retaining \regex_match:NnT=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:N \ETC.}
{retaining \regex_match:nVTF=\protected\long macro:->\exp_args:NnV \regex_match:nnTF }
{retaining \regex_match:nVF=\protected\long macro:->\exp_args:NnV \regex_match:nnF }
{retaining \regex_match:nVT=\protected\long macro:->\exp_args:NnV \regex_match:nnT }
{retaining \regex_match:nnTF=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:n \ETC.}
{retaining \regex_match:nnF=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:n \ETC.}
{retaining \regex_match:nnT=\protected\long macro:#1#2->\__regex_if_match:nn {\__regex_build:n \ETC.}
{retaining \__regex_case_replacement:e=\protected\long macro:->\exp_args:Ne \__regex_case_replacement:n }
{retaining \__regex_replacement:e=\protected\long macro:->\exp_args:Ne \__regex_replacement:n }
{retaining \__regex_case_build:e=\protected\long macro:->\exp_args:Ne \__regex_case_build:n }
{restoring \count348=0}
{retaining \__regex_compile_/K:=\protected\long macro:->\int_compare:nNnTF \l__regex_mode_int \ETC.}
{retaining \__regex_compile_/u:=\protected\long macro:#1#2->\__regex_if_in_class_or_catcode:TF \ETC.}
{retaining \__regex_compile_}:=\protected\long macro:->\__regex_if_in_cs:TF {\__regex_compile_end_cs: \ETC.}
{retaining \__regex_compile_{:=\protected\long macro:->\__regex_if_in_cs:TF {\msg_error:nnn \ETC.}
{retaining \__regex_compile_c_{:w=\protected\long macro:->\__regex_compile:w \__regex_disable_submatches: \ETC.}
{retaining \__regex_compile_c_[:w=\protected\long macro:#1#2->\l__regex_mode_int =\if_case:w \ETC.}
{retaining \__regex_compile_/c:=\protected\long macro:->\__regex_chk_c_allowed:T {\__regex_compile_c_test:NN \ETC.}
{retaining \__regex_compile_special_group_-:w=\protected\long macro:#1#2#3#4->\__regex_two_if_eq:NNNNTF \ETC.}
{retaining \__regex_compile_special_group_|:w=\protected\long macro:->\__regex_compile_group_begin:N \__regex_group_resetting:nnnN }
{retaining \__regex_compile_special_group_::w=\protected\long macro:->\__regex_compile_group_begin:N \__regex_group_no_capture:nnnN }
{retaining \__regex_compile_):=\protected\long macro:->\__regex_if_in_class:TF {\__regex_compile_raw:N \ETC.}
{retaining \__regex_compile_|:=\protected\long macro:->\__regex_if_in_class:TF {\__regex_compile_raw:N \ETC.}
{retaining \__regex_compile_(:=\protected\long macro:->\__regex_if_in_class:TF {\__regex_compile_raw:N \ETC.}
{retaining \__regex_compile_[:=\protected\long macro:->\__regex_if_in_class:TF {\__regex_compile_class_posix_test:w \ETC.}
{retaining \__regex_compile_]:=\protected\long macro:->\__regex_if_in_class:TF {\if_int_compare:w \ETC.}
{retaining \__regex_compile_$:=\protected\long macro:->\__regex_if_in_class_or_catcode:TF \ETC.}
{retaining \__regex_compile_^:=\protected\long macro:->\__regex_if_in_class_or_catcode:TF \ETC.}
{retaining \__regex_compile_/B:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/b:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/z:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/Z:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/G:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/A:=\protected\long macro:->\__regex_compile_anchor_letter:NNN \ETC.}
{retaining \__regex_compile_/N:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_N: }
{retaining \__regex_compile_/W:=\protected\long macro:->\__regex_compile_one:n {\__regex_item_reverse:n \ETC.}
{retaining \__regex_compile_/w:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_w: }
{retaining \__regex_compile_/V:=\protected\long macro:->\__regex_compile_one:n {\__regex_item_reverse:n \ETC.}
{retaining \__regex_compile_/v:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_v: }
{retaining \__regex_compile_/S:=\protected\long macro:->\__regex_compile_one:n {\__regex_item_reverse:n \ETC.}
{retaining \__regex_compile_/s:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_s: }
{retaining \__regex_compile_/H:=\protected\long macro:->\__regex_compile_one:n {\__regex_item_reverse:n \ETC.}
{retaining \__regex_compile_/h:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_h: }
{retaining \__regex_compile_/D:=\protected\long macro:->\__regex_compile_one:n {\__regex_item_reverse:n \ETC.}
{retaining \__regex_compile_/d:=\protected\long macro:->\__regex_compile_one:n \__regex_prop_d: }
{restoring \__regex_tmp:w=\long macro:->}
{retaining \__regex_prop_.:=\protected\long macro:->\if_int_compare:w \l__regex_curr_char_int \ETC.}
{retaining \__regex_compile_.:=\protected\long macro:->\__regex_if_in_class:TF {\__regex_compile_raw:N \ETC.}
{retaining \__regex_compile_quantifier_{:w=\protected\long macro:->\__regex_get_digits:NTFw \l__regex_internal_a_int \ETC.}
{retaining \__regex_compile_quantifier_+:w=\protected\long macro:->\__regex_compile_quantifier_lazyness:nnNN \ETC.}
{retaining \__regex_compile_quantifier_*:w=\protected\long macro:->\__regex_compile_quantifier_lazyness:nnNN \ETC.}
{retaining \__regex_compile_quantifier_?:w=\protected\long macro:->\__regex_compile_quantifier_lazyness:nnNN \ETC.}
{retaining \__regex_compile_abort_tokens:e=\protected\long macro:->\exp_args:Ne \__regex_compile_abort_tokens:n }
{retaining \__regex_if_within_catcode:TF=\long macro:->\if_int_compare:w \l__regex_mode_int \ETC.}
{retaining \__regex_if_in_class:TF=\long macro:->\if_int_odd:w \l__regex_mode_int \ETC.}
{retaining \__regex_char_if_alphanumeric:NTF=\long macro:#1->\if:w T\if_int_compare:w `#1>`\ETC.}
{retaining \__regex_char_if_special:NTF=\long macro:#1->\if:w T\if_int_compare:w `#1>`\ETC.}
{retaining \__regex_escape_/x:w=\long macro:\__regex_escape_loop:N ->\exp_after:wN \ETC.}
{retaining \__regex_escape_/e:w=\long macro:->\__regex_escape_raw:N ^^[}
{retaining \__regex_escape_/r:w=\long macro:->\__regex_escape_raw:N ^^M}
{retaining \__regex_escape_/f:w=\long macro:->\__regex_escape_raw:N ^^L}
{retaining \__regex_escape_/n:w=\long macro:->\__regex_escape_raw:N 
}
{retaining \__regex_escape_/t:w=\long macro:->\__regex_escape_raw:N ^^I}
{retaining \__regex_escape_/a:w=\long macro:->\__regex_escape_raw:N ^^G}
{retaining \__regex_escape_ :w=\long macro:->}
{retaining \__regex_escape_/\scan_stop::w=\long macro:->\msg_expandable_error:nn {regex}\ETC.}
{retaining \__regex_escape_\scan_stop::w=\long macro:#1\prg_break_point: ->}
{retaining \__regex_escape_\:w=\long macro:\__regex_escape_loop:N #1->\cs_if_exist_use:cF \ETC.}
{retaining \__regex_item_catcode:nT=\protected\long macro:#1->\if_int_odd:w \__regex_int_eval:w \ETC.}
{retaining \__regex_quark_if_nil:NF=\long macro:#1->\if_meaning:w \q__regex_nil #1\ETC.}
{retaining \msg extra text > tl/show-analysis=\long macro:#1#2#3#4->}
{retaining \msg text > tl/show-analysis=\long macro:#1#2#3#4->The token list \tl_if_empty:nF \ETC.}
{retaining \__tl_analysis_show_long_aux:oofn=\long macro:->\exp_args:Noof \__tl_analysis_show_long_aux:nnnn }
{retaining \__str_convert_decode_utf8:=\protected\long macro:->\flag_clear:N \l__str_error_flag \ETC.}
{retaining \msg extra text > str/utf8-decode=\long macro:#1#2#3#4->In the UTF-8 encoding, e\ETC.}
{retaining \msg text > str/utf8-decode=\long macro:#1#2#3#4->Invalid UTF-8 string:\exp_last_unbraced:Nf \ETC.}
{retaining \__str_convert_encode_utf8:=\protected\long macro:->\__str_convert_gmap_internal:N \__str_encode_utf_viii_char:n }
{retaining \__str_if_escape_url:nTF=\long macro:#1->\if_int_compare:w `#1<"30\exp_stop_f: \ETC.}
{retaining \__str_if_escape_string:NTF=\long macro:#1->\if_int_compare:w `#1<"27\exp_stop_f: \ETC.}
{retaining \__str_if_escape_name:nTF=\long macro:#1->\if_int_compare:w `#1<"2A\exp_stop_f: \ETC.}
{retaining \msg extra text > str/unescape-url=\long macro:#1#2#3#4->LaTeX came across the es\ETC.}
{retaining \msg text > str/unescape-url=\long macro:#1#2#3#4->String invalid in escapi\ETC.}
{retaining \__str_convert_unescape_url:=\protected\long macro:->\group_begin: \flag_clear:N \l__str_byte_flag \ETC.}
{retaining \msg extra text > str/unescape-name=\long macro:#1#2#3#4->LaTeX came across the es\ETC.}
{retaining \msg text > str/unescape-name=\long macro:#1#2#3#4->String invalid in escapi\ETC.}
{retaining \__str_convert_unescape_name:=\protected\long macro:->\group_begin: \flag_clear:N \l__str_byte_flag \ETC.}
{restoring \__str_tmp:w=\protected\long macro:->}
{retaining \msg extra text > str/unescape-hex=\long macro:#1#2#3#4->Some characters in the s\ETC.}
{retaining \msg text > str/unescape-hex=\long macro:#1#2#3#4->String invalid in escapi\ETC.}
{retaining \msg extra text > str/encode-8-bit=\long macro:#1#2#3#4->The encoding '#1' only c\ETC.}
{retaining \msg text > str/encode-8-bit=\long macro:#1#2#3#4->Unicode string cannot be\ETC.}
{retaining \msg extra text > str/decode-8-bit=\long macro:#1#2#3#4->LaTeX came across a byte\ETC.}
{retaining \msg text > str/decode-8-bit=\long macro:#1#2#3#4->Invalid string in encodi\ETC.}
{retaining \msg extra text > str/non-byte=\long macro:#1#2#3#4->Some characters in the s\ETC.}
{retaining \msg text > str/non-byte=\long macro:#1#2#3#4->String invalid in escapi\ETC.}
{retaining \msg extra text > str/file-not-found=\long macro:#1#2#3#4->}
{retaining \msg text > str/file-not-found=\long macro:#1#2#3#4->File 'l3str-#1.def' not \ETC.}
{retaining \msg extra text > str/native-escaping=\long macro:#1#2#3#4->Since native strings do \ETC.}
{retaining \msg text > str/native-escaping=\long macro:#1#2#3#4->The 'native' encoding sc\ETC.}
{retaining \msg extra text > str/unknown-enc=\long macro:#1#2#3#4->}
{retaining \msg text > str/unknown-enc=\long macro:#1#2#3#4->Encoding scheme '#1' (fi\ETC.}
{retaining \msg extra text > str/unknown-esc=\long macro:#1#2#3#4->}
{retaining \msg text > str/unknown-esc=\long macro:#1#2#3#4->Escaping scheme '#1' (fi\ETC.}
{retaining \str_gset_convert:NnnnTF=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \str_gset_convert:NnnnF=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \str_gset_convert:NnnnT=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \str_set_convert:NnnnTF=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \str_set_convert:NnnnF=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \str_set_convert:NnnnT=\protected\long macro:#1#2#3#4->\bool_gset_false:N \g__str_error_bool \ETC.}
{retaining \c__str_byte_-1_tl=macro:->{}\use_none:n {}}
{retaining \__str_hexadecimal_use:NTF=\long macro:#1->\if_int_compare:w 1<"1\token_to_str:N \ETC.}
{retaining \__str_octal_use:NTF=\long macro:#1->\if_int_compare:w 1<'1\token_to_str:N \ETC.}
{retaining \__str_if_contains_char:nnTF=\long macro:#1#2->\__str_if_contains_char_auxi:nN \ETC.}
{retaining \__str_if_contains_char:NnTF=\long macro:#1#2->\exp_after:wN \__str_if_contains_char_aux:nn \ETC.}
{retaining \__str_if_contains_char:NnT=\long macro:#1#2->\exp_after:wN \__str_if_contains_char_aux:nn \ETC.}
{retaining \msg extra text > sort/return-two=\long macro:#1#2#3#4->When sorting a list, the\ETC.}
{retaining \msg text > sort/return-two=\long macro:#1#2#3#4->The comparison code retu\ETC.}
{retaining \msg extra text > sort/return-none=\long macro:#1#2#3#4->When sorting a list, the\ETC.}
{retaining \msg text > sort/return-none=\long macro:#1#2#3#4->The comparison code did \ETC.}
{retaining \msg extra text > sort/too-large=\long macro:#1#2#3#4->TeX has #2 toks register\ETC.}
{retaining \msg text > sort/too-large=\long macro:#1#2#3#4->The list #1 is too long \ETC.}
{retaining \msg extra text > sort/toksdef=\long macro:#1#2#3#4->The comparison code used\ETC.}
{retaining \msg text > sort/toksdef=\long macro:#1#2#3#4->Allocation of \iow_char:N \ETC.}
{retaining \clist_gsort:cn=\protected\long macro:->\exp_args:Nc \clist_gsort:Nn }
{retaining \clist_sort:cn=\protected\long macro:->\exp_args:Nc \clist_sort:Nn }
{retaining \seq_gsort:cn=\protected\long macro:->\exp_args:Nc \seq_gsort:Nn }
{retaining \seq_sort:cn=\protected\long macro:->\exp_args:Nc \seq_sort:Nn }
{retaining \tl_gsort:cn=\protected\long macro:->\exp_args:Nc \tl_gsort:Nn }
{retaining \tl_sort:cn=\protected\long macro:->\exp_args:Nc \tl_sort:Nn }
{retaining \msg extra text > cctab/group-mismatch=\long macro:#1#2#3#4->Catcode tables and group\ETC.}
{retaining \msg text > cctab/group-mismatch=\long macro:#1#2#3#4->\iow_char:N \\cctab_end:\ETC.}
{retaining \msg extra text > cctab/invalid-cctab=\long macro:#1#2#3#4->You can only switch to a\ETC.}
{retaining \msg text > cctab/invalid-cctab=\long macro:#1#2#3#4->Invalid \iow_char:N \\ca\ETC.}
{retaining \msg extra text > cctab/missing-end=\long macro:#1#2#3#4->LaTeX came across more \iow_char:N \ETC.}
{retaining \msg text > cctab/missing-end=\long macro:#1#2#3#4->Missing \iow_char:N \\cc\ETC.}
{retaining \msg extra text > cctab/extra-end=\long macro:#1#2#3#4->LaTeX came across a \iow_char:N \ETC.}
{retaining \msg text > cctab/extra-end=\long macro:#1#2#3#4->Extra \iow_char:N \\ccta\ETC.}
{retaining \msg extra text > cctab/stack-full=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > cctab/stack-full=\long macro:#1#2#3#4->The category code table \ETC.}
{retaining \cctab_const:cn=\protected\long macro:->\exp_args:Nc \cctab_const:Nn }
{retaining \__cctab_chk_if_valid:NF=\protected\long macro:#1->\cctab_if_exist:NTF #1{\__cctab_chk_if_valid_aux:NTF \ETC.}
{retaining \__cctab_chk_if_valid:NT=\protected\long macro:#1->\cctab_if_exist:NTF #1{\__cctab_chk_if_valid_aux:NTF \ETC.}
{retaining \__cctab_chk_if_valid:NTF=\protected\long macro:#1->\cctab_if_exist:NTF #1{\__cctab_chk_if_valid_aux:NTF \ETC.}
{retaining \cctab_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cctab_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cctab_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cctab_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cctab_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cctab_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cctab_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cctab_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cctab_item:cn=\long macro:->\exp_args:Nc \cctab_item:Nn }
{retaining \__cctab_chk_group_begin:e=\protected\long macro:->\exp_args:Ne \__cctab_chk_group_begin:n }
{retaining \cctab_begin:c=\protected\long macro:->\exp_args:Nc \cctab_begin:N }
{retaining \cctab_select:c=\protected\long macro:->\exp_args:Nc \cctab_select:N }
{retaining \cctab_gsave_current:c=\protected\long macro:->\exp_args:Nc \cctab_gsave_current:N }
{retaining \cctab_gset:cn=\protected\long macro:->\exp_args:Nc \cctab_gset:Nn }
{retaining \cctab_new:c=\protected\long macro:->\exp_args:Nc \cctab_new:N }
{retaining \msg extra text > bitset/unknown-name=\long macro:#1#2#3#4->}
{retaining \msg text > bitset/unknown-name=\long macro:#1#2#3#4->The name '#2' is unknown\ETC.}
{retaining \msg extra text > bitset/show-names=\long macro:#1#2#3#4->}
{retaining \msg text > bitset/show-names=\long macro:#1#2#3#4->The bitset #1 \tl_if_empty:nTF \ETC.}
{retaining \msg extra text > bitset/show=\long macro:#1#2#3#4->}
{retaining \msg text > bitset/show=\long macro:#1#2#3#4->The bitset #1 has the re\ETC.}
{retaining \bitset_log_named_index:c=\protected\long macro:->\exp_args:Nc \bitset_log_named_index:N }
{retaining \bitset_show_named_index:c=\protected\long macro:->\exp_args:Nc \bitset_show_named_index:N }
{retaining \bitset_log:c=\protected\long macro:->\exp_args:Nc \bitset_log:N }
{retaining \bitset_show:c=\protected\long macro:->\exp_args:Nc \bitset_show:N }
{retaining \bitset_item:cn=\long macro:->\exp_args:Nc \bitset_item:Nn }
{retaining \bitset_to_bin:c=\long macro:->\exp_args:Nc \bitset_to_bin:N }
{retaining \bitset_to_arabic:c=\long macro:->\exp_args:Nc \bitset_to_arabic:N }
{retaining \bitset_gclear:c=\protected\long macro:->\exp_args:Nc \bitset_gclear:N }
{retaining \bitset_clear:c=\protected\long macro:->\exp_args:Nc \bitset_clear:N }
{retaining \bitset_gset_false:cn=\protected\long macro:->\exp_args:Nc \bitset_gset_false:Nn }
{retaining \bitset_set_false:cn=\protected\long macro:->\exp_args:Nc \bitset_set_false:Nn }
{retaining \bitset_gset_true:cn=\protected\long macro:->\exp_args:Nc \bitset_gset_true:Nn }
{retaining \bitset_set_true:cn=\protected\long macro:->\exp_args:Nc \bitset_set_true:Nn }
{retaining \__bitset_test_digits:nTF=\protected\long macro:#1->\tex_afterassignment:D \__bitset_test_digits:w \ETC.}
{retaining \bitset_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bitset_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bitset_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bitset_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bitset_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bitset_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bitset_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bitset_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bitset_new:cn=\protected\long macro:->\exp_args:Nc \bitset_new:Nn }
{retaining \bitset_new:c=\protected\long macro:->\exp_args:Nc \bitset_new:N }
{retaining \fparray_item_to_tl:cn=\long macro:->\exp_args:Nc \fparray_item_to_tl:Nn }
{retaining \fparray_item:cn=\long macro:->\exp_args:Nc \fparray_item:Nn }
{retaining \fparray_gzero:c=\protected\long macro:->\exp_args:Nc \fparray_gzero:N }
{retaining \fparray_gset:cnn=\protected\long macro:->\exp_args:Nc \fparray_gset:Nnn }
{retaining \fparray_count:c=\long macro:->\exp_args:Nc \fparray_count:N }
{retaining \fparray_new:cn=\protected\long macro:->\exp_args:Nc \fparray_new:Nn }
{retaining \msg extra text > fp/id-loop=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > fp/id-loop=\long macro:#1#2#3#4->Variable '#1' used in th\ETC.}
{retaining \msg extra text > fp/id-used-elsewhere=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > fp/id-used-elsewhere=\long macro:#1#2#3#4->Floating point identifie\ETC.}
{retaining \msg extra text > fp/id-already-defined=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > fp/id-already-defined=\long macro:#1#2#3#4->Floating point identifie\ETC.}
{retaining \msg extra text > fp/id-invalid=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > fp/id-invalid=\long macro:#1#2#3#4->Floating point identifie\ETC.}
{retaining \__fp_id_if_invalid:nTF=\protected\long macro:#1->\tl_if_empty:nTF {#1}{\prg_return_true: \ETC.}
{retaining \__fp_id_if_invalid:nF=\protected\long macro:#1->\tl_if_empty:nTF {#1}{\prg_return_true: \ETC.}
{retaining \__fp_id_if_invalid:nT=\protected\long macro:#1->\tl_if_empty:nTF {#1}{\prg_return_true: \ETC.}
{retaining \__fp_symbolic_to_scientific:w=\long macro:->\exp_after:wN \__fp_symbolic_convert:wnnN \ETC.}
{retaining \__fp_symbolic_to_int:w=\long macro:->\exp_after:wN \__fp_symbolic_convert:wnnN \ETC.}
{retaining \__fp_symbolic_to_decimal:w=\long macro:->\exp_after:wN \__fp_symbolic_convert:wnnN \ETC.}
{retaining \__fp_symbolic_tan_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_tan_o:w }
{retaining \__fp_symbolic_sqrt_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_sqrt_o:w }
{retaining \__fp_symbolic_sin_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_sin_o:w }
{retaining \__fp_symbolic_set_sign_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_set_sign_o:w }
{retaining \__fp_symbolic_sec_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_sec_o:w }
{retaining \__fp_symbolic_not_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_not_o:w }
{retaining \__fp_symbolic_ln_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_ln_o:w }
{retaining \__fp_symbolic_exp_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_exp_o:w }
{retaining \__fp_symbolic_csc_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_csc_o:w }
{retaining \__fp_symbolic_cot_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_cot_o:w }
{retaining \__fp_symbolic_cos_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_cos_o:w }
{retaining \__fp_symbolic_asin_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_asin_o:w }
{retaining \__fp_symbolic_asec_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_asec_o:w }
{retaining \__fp_symbolic_acsc_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_acsc_o:w }
{retaining \__fp_symbolic_acos_o:w=\long macro:->\__fp_symbolic_unary_o:NNw \__fp_acos_o:w }
{retaining \__fp_|_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_|_o:ww }
{retaining \__fp_symbolic_|_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_|_o:ww }
{retaining \__fp_symbolic_|_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_|_o:ww }
{retaining \__fp_&_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_&_o:ww }
{retaining \__fp_symbolic_&_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_&_o:ww }
{retaining \__fp_symbolic_&_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_&_o:ww }
{retaining \__fp_^_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_^_o:ww }
{retaining \__fp_symbolic_^_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_^_o:ww }
{retaining \__fp_symbolic_^_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_^_o:ww }
{retaining \__fp_/_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_/_o:ww }
{retaining \__fp_symbolic_/_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_/_o:ww }
{retaining \__fp_symbolic_/_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_/_o:ww }
{retaining \__fp_*_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_*_o:ww }
{retaining \__fp_symbolic_*_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_*_o:ww }
{retaining \__fp_symbolic_*_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_*_o:ww }
{retaining \__fp_-_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_-_o:ww }
{retaining \__fp_symbolic_-_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_-_o:ww }
{retaining \__fp_symbolic_-_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_-_o:ww }
{retaining \__fp_+_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_+_o:ww }
{retaining \__fp_symbolic_+_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_+_o:ww }
{retaining \__fp_symbolic_+_symbolic_o:ww=\long macro:->\__fp_symbolic_binary_o:Nww \__fp_+_o:ww }
{retaining \fp_use:c=\long macro:->\exp_args:Nc \fp_use:N }
{retaining \fp_to_int:c=\long macro:->\exp_args:Nc \fp_to_int:N }
{retaining \fp_to_dim:c=\long macro:->\exp_args:Nc \fp_to_dim:N }
{retaining \fp_to_tl:c=\long macro:->\exp_args:Nc \fp_to_tl:N }
{retaining \fp_to_decimal:c=\long macro:->\exp_args:Nc \fp_to_decimal:N }
{retaining \fp_to_scientific:c=\long macro:->\exp_args:Nc \fp_to_scientific:N }
{retaining \__fp_parse_word_tand:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_tan_o:w \ETC.}
{retaining \__fp_tan_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3#4;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_tan:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_tan_o:w \ETC.}
{retaining \__fp_parse_word_sind:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_sin_o:w \ETC.}
{retaining \__fp_sin_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3#4;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_sin:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_sin_o:w \ETC.}
{retaining \__fp_parse_word_secd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_sec_o:w \ETC.}
{retaining \__fp_sec_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_sec:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_sec_o:w \ETC.}
{retaining \__fp_parse_word_cscd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_csc_o:w \ETC.}
{retaining \__fp_csc_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3#4;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_csc:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_csc_o:w \ETC.}
{retaining \__fp_parse_word_cotd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_cot_o:w \ETC.}
{retaining \__fp_cot_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3#4;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_cot:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_cot_o:w \ETC.}
{retaining \__fp_parse_word_cosd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_cos_o:w \ETC.}
{retaining \__fp_cos_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_cos:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_cos_o:w \ETC.}
{retaining \__fp_parse_word_asind:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_asin_o:w \ETC.}
{retaining \__fp_asin_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_asin:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_asin_o:w \ETC.}
{retaining \__fp_parse_word_asecd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_asec_o:w \ETC.}
{retaining \__fp_asec_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_asec:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_asec_o:w \ETC.}
{retaining \__fp_parse_word_acscd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_acsc_o:w \ETC.}
{retaining \__fp_acsc_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3#4;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_acsc:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_acsc_o:w \ETC.}
{retaining \__fp_parse_word_acosd:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_acos_o:w \ETC.}
{retaining \__fp_acos_o:w=\long macro:#1\s__fp \__fp_chk:w #2#3;@->\if_case:w \ETC.}
{retaining \__fp_parse_word_acos:N=\long macro:->\__fp_parse_unary_function:NNN \__fp_acos_o:w \ETC.}
{retaining \__fp_^_o:ww=\long macro:\s__fp \__fp_chk:w #1#2#3;\s__fp \ETC.}
{restoring \count299=0}
{retaining \__fp_tuple_-_tuple_o:ww=\long macro:\s__fp_tuple \__fp_tuple_chk:w #1\ETC.}
{retaining \__fp_tuple_+_tuple_o:ww=\long macro:\s__fp_tuple \__fp_tuple_chk:w #1\ETC.}
{retaining \__fp_tuple_/_o:ww=\long macro:#1;#2;->\__fp_tuple_map_o:nw {\__fp_binary_rev_type_o:Nww \ETC.}
{retaining \__fp_tuple_*_o:ww=\long macro:#1;#2;->\__fp_tuple_map_o:nw {\__fp_binary_rev_type_o:Nww \ETC.}
{retaining \__fp_*_tuple_o:ww=\long macro:#1;->\__fp_tuple_map_o:nw {\__fp_binary_type_o:Nww \ETC.}
{retaining \__fp_/_o:ww=\long macro:->\__fp_mul_cases_o:NnNnww /{-}\__fp_div_npos_o:Nww \ETC.}
{retaining \__fp_*_o:ww=\long macro:->\__fp_mul_cases_o:NnNnww *{-2+}\__fp_mul_npos_o:Nww \ETC.}
{retaining \__fp_+_o:ww=\long macro:\s__fp #1\__fp_chk:w #2#3;\s__fp \ETC.}
{retaining \__fp_-_o:ww=\long macro:\s__fp ->\__fp_+_o:ww \s__fp \__fp_neg_sign:N }
{retaining \msg extra text > fp/tiny-step=\long macro:#1#2#3#4->}
{retaining \msg text > fp/tiny-step=\long macro:#1#2#3#4->Tiny step size (#1+#2=#1\ETC.}
{retaining \msg extra text > fp/bad-step=\long macro:#1#2#3#4->}
{retaining \msg text > fp/bad-step=\long macro:#1#2#3#4->Invalid step size #2 for\ETC.}
{retaining \msg extra text > fp/step-tuple=\long macro:#1#2#3#4->}
{retaining \msg text > fp/step-tuple=\long macro:#1#2#3#4->Tuple argument in fp_ste\ETC.}
{retaining \__fp_step:NfnnnN=\long macro:->\exp_args:NNf \__fp_step:NnnnnN }
{retaining \fp_step_function:nnnc=\long macro:->\exp_args:Nnnnc \fp_step_function:nnnN }
{retaining \fp_compare:nNnTF=\long macro:#1#2#3->\if_int_compare:w \exp_after:wN \ETC.}
{retaining \fp_compare:nNnF=\long macro:#1#2#3->\if_int_compare:w \exp_after:wN \ETC.}
{retaining \fp_compare:nNnT=\long macro:#1#2#3->\if_int_compare:w \exp_after:wN \ETC.}
{retaining \fp_compare_p:nNn=\long macro:#1#2#3->\if_int_compare:w \exp_after:wN \ETC.}
{retaining \fp_compare:nTF=\long macro:#1->\exp_after:wN \__fp_compare_return:w \ETC.}
{retaining \fp_compare:nF=\long macro:#1->\exp_after:wN \__fp_compare_return:w \ETC.}
{retaining \fp_compare:nT=\long macro:#1->\exp_after:wN \__fp_compare_return:w \ETC.}
{retaining \fp_compare_p:n=\long macro:#1->\exp_after:wN \__fp_compare_return:w \ETC.}
{retaining \fp_if_nan_p:n=\long macro:#1->\if:w 3\exp_last_unbraced:Nf \__fp_kind:w \ETC.}
{retaining \fp_if_nan:nF=\long macro:#1->\if:w 3\exp_last_unbraced:Nf \__fp_kind:w \ETC.}
{retaining \fp_if_nan:nT=\long macro:#1->\if:w 3\exp_last_unbraced:Nf \__fp_kind:w \ETC.}
{retaining \fp_if_nan:nTF=\long macro:#1->\if:w 3\exp_last_unbraced:Nf \__fp_kind:w \ETC.}
{retaining \fp_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \fp_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \fp_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \fp_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \fp_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \fp_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \fp_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \fp_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \fp_log:c=\protected\long macro:->\exp_args:Nc \fp_log:N }
{retaining \fp_show:c=\protected\long macro:->\exp_args:Nc \fp_show:N }
{retaining \fp_gsub:cn=\protected\long macro:->\exp_args:Nc \fp_gsub:Nn }
{retaining \fp_sub:cn=\protected\long macro:->\exp_args:Nc \fp_sub:Nn }
{retaining \fp_gadd:cn=\protected\long macro:->\exp_args:Nc \fp_gadd:Nn }
{retaining \fp_add:cn=\protected\long macro:->\exp_args:Nc \fp_add:Nn }
{retaining \fp_gzero_new:c=\protected\long macro:->\exp_args:Nc \fp_gzero_new:N }
{retaining \fp_zero_new:c=\protected\long macro:->\exp_args:Nc \fp_zero_new:N }
{retaining \fp_gzero:c=\protected\long macro:->\exp_args:Nc \fp_gzero:N }
{retaining \fp_zero:c=\protected\long macro:->\exp_args:Nc \fp_zero:N }
{retaining \fp_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \fp_gset_eq:NN }
{retaining \fp_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \fp_gset_eq:NN }
{retaining \fp_gset_eq:cN=\protected\long macro:->\exp_args:Nc \fp_gset_eq:NN }
{retaining \fp_set_eq:cc=\protected\long macro:->\exp_args:Ncc \fp_set_eq:NN }
{retaining \fp_set_eq:Nc=\protected\long macro:->\exp_args:NNc \fp_set_eq:NN }
{retaining \fp_set_eq:cN=\protected\long macro:->\exp_args:Nc \fp_set_eq:NN }
{retaining \fp_const:cn=\protected\long macro:->\exp_args:Nc \fp_const:Nn }
{retaining \fp_gset:cn=\protected\long macro:->\exp_args:Nc \fp_gset:Nn }
{retaining \fp_set:cn=\protected\long macro:->\exp_args:Nc \fp_set:Nn }
{retaining \fp_new:c=\protected\long macro:->\exp_args:Nc \fp_new:N }
{retaining \msg extra text > fp/infty-pi=\long macro:#1#2#3#4->}
{retaining \msg text > fp/infty-pi=\long macro:#1#2#3#4->Math command #1is not an\ETC.}
{retaining \msg extra text > fp/bad-args=\long macro:#1#2#3#4->}
{retaining \msg text > fp/bad-args=\long macro:#1#2#3#4->Arguments in #1#2 are in\ETC.}
{retaining \msg extra text > fp/num-args=\long macro:#1#2#3#4->}
{retaining \msg text > fp/num-args=\long macro:#1#2#3#4->#1 expects between #2 an\ETC.}
{retaining \msg extra text > fp/multi-arg=\long macro:#1#2#3#4->}
{retaining \msg text > fp/multi-arg=\long macro:#1#2#3#4->#1 got more than one arg\ETC.}
{retaining \msg extra text > fp/no-arg=\long macro:#1#2#3#4->}
{retaining \msg text > fp/no-arg=\long macro:#1#2#3#4->#1 got no argument; used\ETC.}
{retaining \msg extra text > fp/extra-comma=\long macro:#1#2#3#4->}
{retaining \msg text > fp/extra-comma=\long macro:#1#2#3#4->Unexpected comma turned \ETC.}
{retaining \msg extra text > fp/unknown-symbol=\long macro:#1#2#3#4->}
{retaining \msg text > fp/unknown-symbol=\long macro:#1#2#3#4->Unknown symbol #1 ignore\ETC.}
{retaining \msg extra text > fp/missing-number=\long macro:#1#2#3#4->}
{retaining \msg text > fp/missing-number=\long macro:#1#2#3#4->Missing number before '#1\ETC.}
{retaining \msg extra text > fp/after-e=\long macro:#1#2#3#4->}
{retaining \msg text > fp/after-e=\long macro:#1#2#3#4->Cannot use #1after 'e'.}
{retaining \msg extra text > fp/early-end=\long macro:#1#2#3#4->}
{retaining \msg text > fp/early-end=\long macro:#1#2#3#4->Premature end in fp expr\ETC.}
{retaining \msg extra text > fp/extra=\long macro:#1#2#3#4->}
{retaining \msg text > fp/extra=\long macro:#1#2#3#4->Extra #1 ignored.}
{retaining \msg extra text > fp/missing=\long macro:#1#2#3#4->}
{retaining \msg text > fp/missing=\long macro:#1#2#3#4->Missing #1 inserted#2.}
{retaining \msg extra text > fp/unknown-fp-word=\long macro:#1#2#3#4->}
{retaining \msg text > fp/unknown-fp-word=\long macro:#1#2#3#4->Unknown fp word #1.}
{retaining \msg extra text > fp/deprecated=\long macro:#1#2#3#4->}
{retaining \msg text > fp/deprecated=\long macro:#1#2#3#4->'#1' deprecated; use '#2\ETC.}
{retaining \__fp_parse_infix_!:N=\long macro:#1->\exp_after:wN \__fp_parse_compare:NNNNNNN \ETC.}
{retaining \__fp_parse_infix_>:N=\long macro:#1->\__fp_parse_compare:NNNNNNN #1\ETC.}
{retaining \__fp_parse_infix_=:N=\long macro:#1->\__fp_parse_compare:NNNNNNN #1\ETC.}
{retaining \__fp_parse_infix_<:N=\long macro:#1->\__fp_parse_compare:NNNNNNN #1\ETC.}
{retaining \__fp_parse_infix_::N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_quest_int \ETC.}
{retaining \__fp_parse_infix_?:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_quest_int \ETC.}
{retaining \__fp_parse_infix_&:N=\long macro:#1#2->\if:w &\exp_not:N #2\exp_after:wN \ETC.}
{retaining \__fp_parse_infix_|:N=\long macro:#1#2->\if:w |\exp_not:N #2\exp_after:wN \ETC.}
{retaining \__fp_parse_infix_*:N=\long macro:#1#2->\if:w *\exp_not:N #2\exp_after:wN \ETC.}
{retaining \__fp_parse_infix_(:N=\long macro:#1->\__fp_parse_infix_mul:N #1(}
{retaining \__fp_parse_infix_or:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_or_int \ETC.}
{retaining \__fp_parse_infix_and:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_and_int \ETC.}
{retaining \__fp_parse_infix_+:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_plus_int \ETC.}
{retaining \__fp_parse_infix_-:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_plus_int \ETC.}
{retaining \__fp_parse_infix_mul:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_times_int \ETC.}
{retaining \__fp_parse_infix_/:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_times_int \ETC.}
{retaining \__fp_parse_infix_juxt:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_juxt_int \ETC.}
{retaining \__fp_parse_infix_^:N=\long macro:#1->\if_int_compare:w #1<\c__fp_prec_hatii_int \ETC.}
{retaining \__fp_parse_infix_,:N=\long macro:#1->\if_int_compare:w #1>\c__fp_prec_comma_int \ETC.}
{retaining \__fp_parse_word_ex:N=\long macro:->\exp_after:wN \__fp_from_dim_test:ww \ETC.}
{retaining \__fp_parse_word_em:N=\long macro:->\exp_after:wN \__fp_from_dim_test:ww \ETC.}
{retaining \__fp_parse_word_sp:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_bp:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_nc:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_nd:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_cc:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_dd:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_mm:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_cm:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_pc:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_in:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_pt:N=\long macro:->\__fp_exp_after_f:nw {\__fp_parse_infix:NN \ETC.}
{retaining \__fp_parse_word_false:N=\long macro:->\exp_after:wN \c_zero_fp \exp:w \ETC.}
{retaining \__fp_parse_word_true:N=\long macro:->\exp_after:wN \c_one_fp \exp:w \exp_end_continue_f:w \ETC.}
{retaining \__fp_parse_word_deg:N=\long macro:->\exp_after:wN \c_one_degree_fp \exp:w \ETC.}
{retaining \__fp_parse_word_pi:N=\long macro:->\exp_after:wN \c_pi_fp \exp:w \exp_end_continue_f:w \ETC.}
{retaining \__fp_parse_word_nan:N=\long macro:->\exp_after:wN \c_nan_fp \exp:w \exp_end_continue_f:w \ETC.}
{retaining \__fp_parse_word_inf:N=\long macro:->\exp_after:wN \c_inf_fp \exp:w \exp_end_continue_f:w \ETC.}
{retaining \__fp_parse_prefix_):Nw=\long macro:#1->\if_int_compare:w #1=\c__fp_prec_comma_int \ETC.}
{retaining \__fp_parse_infix_):N=\long macro:#1->\if_int_compare:w #1>\c__fp_prec_end_int \ETC.}
{retaining \__fp_parse_prefix_(:Nw=\long macro:#1->\exp_after:wN \__fp_parse_lparen_after:NwN \ETC.}
{retaining \__fp_parse_prefix_.:Nw=\long macro:#1->\exp_after:wN \__fp_parse_infix_after_operand:NwN \ETC.}
{retaining \__fp_parse_prefix_!:Nw=\long macro:#1->\exp_after:wN \__fp_parse_apply_unary:NNNwN \ETC.}
{retaining \__fp_parse_prefix_-:Nw=\long macro:#1->\exp_after:wN \__fp_parse_apply_unary:NNNwN \ETC.}
{retaining \__fp_parse_prefix_+:Nw=\long macro:#1#2->\if_catcode:w \scan_stop: \exp_not:N \ETC.}
{retaining \__fp_parse_exponent_keep:NTF=\long macro:#1->\if_catcode:w \scan_stop: \exp_not:N \ETC.}
{restoring \@unexpandable@protect=undefined}
{retaining \__fp_exp_after_?_f:nw=\long macro:#1#2->\msg_expandable_error:nnn {k\ETC.}
{retaining \__fp_parse_digits_i:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_ii:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_iii:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_iv:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_v:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_vi:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \__fp_parse_digits_vii:N=\long macro:#1->\if_int_compare:w 9<1\token_to_str:N \ETC.}
{retaining \msg extra text > fp/unknown-type=\long macro:#1#2#3#4->}
{retaining \msg text > fp/unknown-type=\long macro:#1#2#3#4->Unknown type for '#1'}
{retaining \msg extra text > fp/invalid-ii=\long macro:#1#2#3#4->}
{retaining \msg text > fp/invalid-ii=\long macro:#1#2#3#4->Invalid operation (#1)#3\ETC.}
{retaining \msg extra text > fp/invalid=\long macro:#1#2#3#4->}
{retaining \msg text > fp/invalid=\long macro:#1#2#3#4->Invalid operation #1(#2)}
{retaining \msg extra text > fp/zero-div-ii=\long macro:#1#2#3#4->}
{retaining \msg text > fp/zero-div-ii=\long macro:#1#2#3#4->Division by zero in (#1)\ETC.}
{retaining \msg extra text > fp/zero-div=\long macro:#1#2#3#4->}
{retaining \msg text > fp/zero-div=\long macro:#1#2#3#4->Division by zero in #1(#2\ETC.}
{retaining \msg extra text > fp/flow-to=\long macro:#1#2#3#4->}
{retaining \msg text > fp/flow-to=\long macro:#1#2#3#4->#1 #3ed to #2.}
{retaining \msg extra text > fp/flow=\long macro:#1#2#3#4->}
{retaining \msg text > fp/flow=\long macro:#1#2#3#4->An #3 occurred.}
{retaining \msg extra text > fp/unknown-fpu-trap-type=\long macro:#1#2#3#4->The trap type must be on\ETC.}
{retaining \msg text > fp/unknown-fpu-trap-type=\long macro:#1#2#3#4->The FPU trap type '#2' i\ETC.}
{retaining \msg extra text > fp/unknown-fpu-exception=\long macro:#1#2#3#4->The only exceptions to w\ETC.}
{retaining \msg text > fp/unknown-fpu-exception=\long macro:#1#2#3#4->The FPU exception '#1' i\ETC.}
{retaining \__fp_error:nfff=\long macro:->\exp_args:Nnfff \__fp_error:nnnn }
{retaining \__fp_error:nffn=\long macro:->\exp_args:Nnff \__fp_error:nnnn }
{retaining \__fp_error:nnfn=\long macro:->\exp_args:Nnnf \__fp_error:nnnn }
{retaining \__fp_invalid_operation_o:fw=\long macro:->\exp_args:Nf \__fp_invalid_operation_o:nw }
{restoring \__fp_underflow:w=\long macro:->}
{restoring \__fp_overflow:w=\long macro:->}
{restoring \__fp_division_by_zero_o:NNww=\long macro:#1#2#3;#4;->}
{restoring \__fp_division_by_zero_o:Nnw=\long macro:#1#2#3;->}
{restoring \__fp_invalid_operation_tl_o:ff=\long macro:#1#2->}
{restoring \__fp_invalid_operation_o:Nww=\long macro:#1#2;#3;->}
{restoring \__fp_invalid_operation:nnw=\long macro:#1#2#3;->}
{retaining \msg extra text > fp/misused=\long macro:#1#2#3#4->To obtain the value of a\ETC.}
{retaining \msg text > fp/misused=\long macro:#1#2#3#4->A floating point with va\ETC.}
{restoring \__fp_tmp:w=\long macro:#1#2#3->\cs_new:cpn {__fp_decimate\ETC.}
{retaining \__fp_int_p:w=\long macro:\s__fp \__fp_chk:w #1#2#3#4;->\if_case:w \ETC.}
{retaining \__fp_int:wF=\long macro:\s__fp \__fp_chk:w #1#2#3#4;->\if_case:w \ETC.}
{retaining \__fp_int:wT=\long macro:\s__fp \__fp_chk:w #1#2#3#4;->\if_case:w \ETC.}
{retaining \__fp_int:wTF=\long macro:\s__fp \__fp_chk:w #1#2#3#4;->\if_case:w \ETC.}
{retaining \__fp_decimate_xvi:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_xv:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_xiv:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_xiii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_xii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_xi:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_x:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_ix:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_viii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_vii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_vi:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_v:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_iv:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_iii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_ii:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \__fp_decimate_i:Nnnnn=\long macro:#1#2#3#4#5->\exp_after:wN #1\int_value:w \ETC.}
{retaining \intarray_log:c=\protected\long macro:->\exp_args:Nc \intarray_log:N }
{retaining \intarray_show:c=\protected\long macro:->\exp_args:Nc \intarray_show:N }
{retaining \intarray_const_from_clist:cn=\protected\long macro:->\exp_args:Nc \intarray_const_from_clist:Nn }
{retaining \intarray_rand_item:c=\long macro:->\exp_args:Nc \intarray_rand_item:N }
{retaining \intarray_item:cn=\long macro:->\exp_args:Nc \intarray_item:Nn }
{retaining \intarray_gzero:c=\protected\long macro:->\exp_args:Nc \intarray_gzero:N }
{retaining \intarray_gset:cnn=\protected\long macro:->\exp_args:Nc \intarray_gset:Nnn }
{retaining \intarray_count:c=\long macro:->\exp_args:Nc \intarray_count:N }
{retaining \intarray_new:cn=\protected\long macro:->\exp_args:Nc \intarray_new:Nn }
{retaining \msg extra text > kernel/negative-array-size=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/negative-array-size=\long macro:#1#2#3#4->Size of array may not be\ETC.}
{retaining \msg extra text > keys/show-key=\long macro:#1#2#3#4->}
{retaining \msg text > keys/show-key=\long macro:#1#2#3#4->The key #1 \tl_if_empty:nTF \ETC.}
{retaining \msg extra text > keys/value-required=\long macro:#1#2#3#4->The key '#1' must have a\ETC.}
{retaining \msg text > keys/value-required=\long macro:#1#2#3#4->The key '#1' requires a \ETC.}
{retaining \msg extra text > keys/value-forbidden=\long macro:#1#2#3#4->The key '#1' should be g\ETC.}
{retaining \msg text > keys/value-forbidden=\long macro:#1#2#3#4->The key '#1' does not ta\ETC.}
{retaining \msg extra text > keys/nested-choice-key=\long macro:#1#2#3#4->The key '#1' cannot be d\ETC.}
{retaining \msg text > keys/nested-choice-key=\long macro:#1#2#3#4->Attempt to define '#1' a\ETC.}
{retaining \msg extra text > keys/unknown=\long macro:#1#2#3#4->The module '#2' does not\ETC.}
{retaining \msg text > keys/unknown=\long macro:#1#2#3#4->The key '#1' is unknown \ETC.}
{retaining \msg extra text > keys/choice-unknown=\long macro:#1#2#3#4->The key '#1' only accept\ETC.}
{retaining \msg text > keys/choice-unknown=\long macro:#1#2#3#4->Key '#1' accepts only a \ETC.}
{retaining \msg extra text > keys/boolean-values-only=\long macro:#1#2#3#4->The key '#1' only accept\ETC.}
{retaining \msg text > keys/boolean-values-only=\long macro:#1#2#3#4->Key '#1' accepts boolean\ETC.}
{retaining \msg extra text > keys/bad-relative-key-path=\long macro:#1#2#3#4->The key '#1' cannot be e\ETC.}
{retaining \msg text > keys/bad-relative-key-path=\long macro:#1#2#3#4->The key '#1' is not insi\ETC.}
{retaining \keys_if_choice_exist:nnnTF=\long macro:#1#2#3->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_choice_exist:nnnF=\long macro:#1#2#3->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_choice_exist:nnnT=\long macro:#1#2#3->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_choice_exist_p:nnn=\long macro:#1#2#3->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_exist:neTF=\long macro:->\exp_args:Nne \keys_if_exist:nnTF }
{retaining \keys_if_exist:neF=\long macro:->\exp_args:Nne \keys_if_exist:nnF }
{retaining \keys_if_exist:neT=\long macro:->\exp_args:Nne \keys_if_exist:nnT }
{retaining \keys_if_exist_p:ne=\long macro:->\exp_args:Nne \keys_if_exist_p:nn }
{retaining \keys_if_exist:nnTF=\long macro:#1#2->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_exist:nnF=\long macro:#1#2->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_exist:nnT=\long macro:#1#2->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \keys_if_exist_p:nn=\long macro:#1#2->\cs_if_exist:cTF {\c__keys_code_root_str \ETC.}
{retaining \__keys_set_keyval:onn=\protected\long macro:->\exp_args:No \__keys_set_keyval:nnn }
{retaining \keys_set_groups:nno=\protected\long macro:->\exp_args:Nnno \keys_set_groups:nnn }
{retaining \keys_set_groups:nnv=\protected\long macro:->\exp_args:Nnnv \keys_set_groups:nnn }
{retaining \keys_set_groups:nnV=\protected\long macro:->\exp_args:NnnV \keys_set_groups:nnn }
{retaining \keys_set_exclude_groups:nno=\protected\long macro:->\exp_args:Nnno \keys_set_exclude_groups:nnn }
{retaining \keys_set_exclude_groups:nnv=\protected\long macro:->\exp_args:Nnnv \keys_set_exclude_groups:nnn }
{retaining \keys_set_exclude_groups:nnV=\protected\long macro:->\exp_args:NnnV \keys_set_exclude_groups:nnn }
{retaining \keys_set_exclude_groups:nnonN=\protected\long macro:->\exp_args:Nnno \keys_set_exclude_groups:nnnnN }
{retaining \keys_set_exclude_groups:nnvnN=\protected\long macro:->\exp_args:Nnnv \keys_set_exclude_groups:nnnnN }
{retaining \keys_set_exclude_groups:nnVnN=\protected\long macro:->\exp_args:NnnV \keys_set_exclude_groups:nnnnN }
{retaining \keys_set_exclude_groups:nnoN=\protected\long macro:->\exp_args:Nnno \keys_set_exclude_groups:nnnN }
{retaining \keys_set_exclude_groups:nnvN=\protected\long macro:->\exp_args:Nnnv \keys_set_exclude_groups:nnnN }
{retaining \keys_set_exclude_groups:nnVN=\protected\long macro:->\exp_args:NnnV \keys_set_exclude_groups:nnnN }
{retaining \keys_set_known:no=\protected\long macro:->\exp_args:Nno \keys_set_known:nn }
{retaining \keys_set_known:ne=\protected\long macro:->\exp_args:Nne \keys_set_known:nn }
{retaining \keys_set_known:nv=\protected\long macro:->\exp_args:Nnv \keys_set_known:nn }
{retaining \keys_set_known:nV=\protected\long macro:->\exp_args:NnV \keys_set_known:nn }
{retaining \keys_set_known:nonN=\protected\long macro:->\exp_args:Nno \keys_set_known:nnnN }
{retaining \keys_set_known:nenN=\protected\long macro:->\exp_args:Nne \keys_set_known:nnnN }
{retaining \keys_set_known:nvnN=\protected\long macro:->\exp_args:Nnv \keys_set_known:nnnN }
{retaining \keys_set_known:nVnN=\protected\long macro:->\exp_args:NnV \keys_set_known:nnnN }
{retaining \keys_set_known:noN=\protected\long macro:->\exp_args:Nno \keys_set_known:nnN }
{retaining \keys_set_known:neN=\protected\long macro:->\exp_args:Nne \keys_set_known:nnN }
{retaining \keys_set_known:nvN=\protected\long macro:->\exp_args:Nnv \keys_set_known:nnN }
{retaining \keys_set_known:nVN=\protected\long macro:->\exp_args:NnV \keys_set_known:nnN }
{retaining \keys_set:nx=\protected\long macro:->\exp_args:Nnx \keys_set:nn }
{retaining \keys_set:no=\protected\long macro:->\exp_args:Nno \keys_set:nn }
{retaining \keys_set:ne=\protected\long macro:->\exp_args:Nne \keys_set:nn }
{retaining \keys_set:nv=\protected\long macro:->\exp_args:Nnv \keys_set:nn }
{retaining \keys_set:nV=\protected\long macro:->\exp_args:NnV \keys_set:nn }
{retaining \key prop > .value_required:n=\protected\long macro:#1->\__keys_value_requirement:nn {\ETC.}
{retaining \key prop > .value_forbidden:n=\protected\long macro:#1->\__keys_value_requirement:nn {\ETC.}
{retaining \key prop > .usage:n=\protected\long macro:#1->\__keys_usage:n {#1}}
{retaining \key prop > .undefine:=\protected\long macro:->\__keys_undefine: }
{retaining \key prop > .tl_gset_e:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_gset_e:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .tl_gset:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_gset:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .tl_set_e:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_set_e:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .tl_set:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .tl_set:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{t\ETC.}
{retaining \key prop > .str_gset_e:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_gset_e:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \key prop > .str_gset:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_gset:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \key prop > .str_set_e:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_set_e:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \key prop > .str_set:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .str_set:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{s\ETC.}
{retaining \key prop > .skip_gset:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .skip_gset:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .skip_set:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .skip_set:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .prop_gput:c=\protected\long macro:#1->\__keys_prop_put:cn {#1}{g}}
{retaining \key prop > .prop_gput:N=\protected\long macro:#1->\__keys_prop_put:Nn #1{g}}
{retaining \key prop > .prop_put:c=\protected\long macro:#1->\__keys_prop_put:cn {#1}{}}
{retaining \key prop > .prop_put:N=\protected\long macro:#1->\__keys_prop_put:Nn #1{}}
{retaining \key prop > .muskip_gset:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .muskip_gset:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .muskip_set:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .muskip_set:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .multichoices:xn=\protected\long macro:#1->\exp_args:Nx \__keys_multichoices_make:nn \ETC.}
{retaining \key prop > .multichoices:on=\protected\long macro:#1->\exp_args:No \__keys_multichoices_make:nn \ETC.}
{retaining \key prop > .multichoices:en=\protected\long macro:#1->\exp_args:Ne \__keys_multichoices_make:nn \ETC.}
{retaining \key prop > .multichoices:Vn=\protected\long macro:#1->\exp_args:NV \__keys_multichoices_make:nn \ETC.}
{retaining \key prop > .multichoices:nn=\protected\long macro:#1->\__keys_multichoices_make:nn #1}
{retaining \key prop > .multichoice:=\protected\long macro:->\__keys_multichoice_make: }
{retaining \key prop > .meta:nn=\protected\long macro:#1->\__keys_meta_make:nn #1}
{retaining \key prop > .meta:n=\protected\long macro:#1->\__keys_meta_make:n {#1}}
{retaining \key prop > .legacy_if_gset_inverse:n=\protected\long macro:#1->\__keys_legacy_if_set_inverse:nn \ETC.}
{retaining \key prop > .legacy_if_set_inverse:n=\protected\long macro:#1->\__keys_legacy_if_set_inverse:nn \ETC.}
{retaining \key prop > .legacy_if_gset:n=\protected\long macro:#1->\__keys_legacy_if_set:nn {#1}{\ETC.}
{retaining \key prop > .legacy_if_set:n=\protected\long macro:#1->\__keys_legacy_if_set:nn {#1}{\ETC.}
{retaining \key prop > .int_gset:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .int_gset:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .int_set:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .int_set:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .initial:x=\protected\long macro:#1->\exp_args:Nx \__keys_initialise:n \ETC.}
{retaining \key prop > .initial:o=\protected\long macro:#1->\exp_args:No \__keys_initialise:n \ETC.}
{retaining \key prop > .initial:e=\protected\long macro:#1->\exp_args:Ne \__keys_initialise:n \ETC.}
{retaining \key prop > .initial:V=\protected\long macro:#1->\exp_args:NV \__keys_initialise:n \ETC.}
{retaining \key prop > .initial:n=\protected\long macro:#1->\__keys_initialise:n {#1}}
{retaining \key prop > .inherit:n=\protected\long macro:#1->\__keys_inherit:n {#1}}
{retaining \key prop > .groups:n=\protected\long macro:#1->\__keys_groups_set:n {#1}}
{retaining \key prop > .fp_gset:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .fp_gset:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .fp_set:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .fp_set:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .dim_gset:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .dim_gset:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .dim_set:c=\protected\long macro:#1->\__keys_variable_set_required:cnnN \ETC.}
{retaining \key prop > .dim_set:N=\protected\long macro:#1->\__keys_variable_set_required:NnnN \ETC.}
{retaining \key prop > .default:x=\protected\long macro:#1->\exp_args:Nx \__keys_default_set:n \ETC.}
{retaining \key prop > .default:o=\protected\long macro:#1->\exp_args:No \__keys_default_set:n \ETC.}
{retaining \key prop > .default:e=\protected\long macro:#1->\exp_args:Ne \__keys_default_set:n \ETC.}
{retaining \key prop > .default:V=\protected\long macro:#1->\exp_args:NV \__keys_default_set:n \ETC.}
{retaining \key prop > .default:n=\protected\long macro:#1->\__keys_default_set:n {#1}}
{retaining \key prop > .cs_gset_protected:cp=\protected\long macro:#1->\__keys_cs_set:Ncpn \cs_gset_protected:Npn \ETC.}
{retaining \key prop > .cs_gset_protected:Np=\protected\long macro:#1->\__keys_cs_set:NNpn \cs_gset_protected:Npn \ETC.}
{retaining \key prop > .cs_gset:cp=\protected\long macro:#1->\__keys_cs_set:Ncpn \cs_gset:Npn \ETC.}
{retaining \key prop > .cs_gset:Np=\protected\long macro:#1->\__keys_cs_set:NNpn \cs_gset:Npn \ETC.}
{retaining \key prop > .cs_set_protected:cp=\protected\long macro:#1->\__keys_cs_set:Ncpn \cs_set_protected:Npn \ETC.}
{retaining \key prop > .cs_set_protected:Np=\protected\long macro:#1->\__keys_cs_set:NNpn \cs_set_protected:Npn \ETC.}
{retaining \key prop > .cs_set:cp=\protected\long macro:#1->\__keys_cs_set:Ncpn \cs_set:Npn \ETC.}
{retaining \key prop > .cs_set:Np=\protected\long macro:#1->\__keys_cs_set:NNpn \cs_set:Npn \ETC.}
{retaining \key prop > .clist_gset:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .clist_gset:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{c\ETC.}
{retaining \key prop > .clist_set:c=\protected\long macro:#1->\__keys_variable_set:cnnN {#1}\ETC.}
{retaining \key prop > .clist_set:N=\protected\long macro:#1->\__keys_variable_set:NnnN #1{c\ETC.}
{retaining \key prop > .code:n=\protected\long macro:#1->\__keys_cmd_set:nn \l_keys_path_str \ETC.}
{retaining \key prop > .choices:xn=\protected\long macro:#1->\exp_args:Nx \__keys_choices_make:nn \ETC.}
{retaining \key prop > .choices:on=\protected\long macro:#1->\exp_args:No \__keys_choices_make:nn \ETC.}
{retaining \key prop > .choices:en=\protected\long macro:#1->\exp_args:Ne \__keys_choices_make:nn \ETC.}
{retaining \key prop > .choices:Vn=\protected\long macro:#1->\exp_args:NV \__keys_choices_make:nn \ETC.}
{retaining \key prop > .choices:nn=\protected\long macro:#1->\__keys_choices_make:nn #1}
{retaining \key prop > .choice:=\protected\long macro:->\__keys_choice_make: }
{retaining \key prop > .bool_gset_inverse:c=\protected\long macro:#1->\__keys_bool_set_inverse:cn {#1\ETC.}
{retaining \key prop > .bool_gset_inverse:N=\protected\long macro:#1->\__keys_bool_set_inverse:Nn #1\ETC.}
{retaining \key prop > .bool_set_inverse:c=\protected\long macro:#1->\__keys_bool_set_inverse:cn {#1\ETC.}
{retaining \key prop > .bool_set_inverse:N=\protected\long macro:#1->\__keys_bool_set_inverse:Nn #1\ETC.}
{retaining \key prop > .bool_gset:c=\protected\long macro:#1->\__keys_bool_set:cn {#1}{g}}
{retaining \key prop > .bool_gset:N=\protected\long macro:#1->\__keys_bool_set:Nn #1{g}}
{retaining \key prop > .bool_set:c=\protected\long macro:#1->\__keys_bool_set:cn {#1}{}}
{retaining \key prop > .bool_set:N=\protected\long macro:#1->\__keys_bool_set:Nn #1{}}
{retaining \__keys_variable_set_required:cnnN=\protected\long macro:->\exp_args:Nc \__keys_variable_set_required:NnnN }
{retaining \__keys_variable_set:cnnN=\protected\long macro:->\exp_args:Nc \__keys_variable_set:NnnN }
{retaining \__keys_prop_put:cn=\protected\long macro:->\exp_args:Nc \__keys_prop_put:Nn }
{retaining \__keys_cs_set:Ncpn=\protected\long macro:->\exp_args:NNc \__keys_cs_set:NNpn }
{retaining \__keys_cmd_set:Vo=\protected\long macro:->\exp_args:NVo \__keys_cmd_set:nn }
{retaining \__keys_cmd_set:Vn=\protected\long macro:->\exp_args:NV \__keys_cmd_set:nn }
{retaining \__keys_cmd_set:ne=\protected\long macro:->\exp_args:Nne \__keys_cmd_set:nn }
{retaining \__keys_bool_set_inverse:cn=\protected\long macro:->\exp_args:Nc \__keys_bool_set_inverse:Nn }
{retaining \__keys_bool_set:cn=\protected\long macro:->\exp_args:Nc \__keys_bool_set:Nn }
{retaining \__keys_define:onn=\protected\long macro:->\exp_args:No \__keys_define:nnn }
{retaining \keys_define:nx=\protected\long macro:->\exp_args:Nnx \keys_define:nn }
{retaining \keys_define:ne=\protected\long macro:->\exp_args:Nne \keys_define:nn }
{retaining \__keys_quark_if_no_value:NTF=\long macro:#1->\if_meaning:w \q__keys_no_value \ETC.}
{restoring \l__keys_relative_tl=macro:->}
{retaining \msg extra text > keyval/blank-key-name=\long macro:#1#2#3#4->}
{retaining \msg text > keyval/blank-key-name=\long macro:#1#2#3#4->Blank key name in key-va\ETC.}
{retaining \msg extra text > keyval/misplaced-equals-sign=\long macro:#1#2#3#4->}
{retaining \msg text > keyval/misplaced-equals-sign=\long macro:#1#2#3#4->Misplaced '=' in key-val\ETC.}
{retaining \keyval_parse:nnv=\long macro:->\exp_args:Nnnv \keyval_parse:nnn }
{retaining \keyval_parse:nnV=\long macro:->\exp_args:NnnV \keyval_parse:nnn }
{retaining \keyval_parse:NNv=\long macro:->\exp_args:NNNv \keyval_parse:NNn }
{retaining \keyval_parse:NNV=\long macro:->\exp_args:NNNV \keyval_parse:NNn }
{retaining \muskip_show:c=\protected\long macro:->\exp_args:Nc \muskip_show:N }
{retaining \muskip_gsub:cn=\protected\long macro:->\exp_args:Nc \muskip_gsub:Nn }
{retaining \muskip_sub:cn=\protected\long macro:->\exp_args:Nc \muskip_sub:Nn }
{retaining \muskip_gadd:cn=\protected\long macro:->\exp_args:Nc \muskip_gadd:Nn }
{retaining \muskip_add:cn=\protected\long macro:->\exp_args:Nc \muskip_add:Nn }
{retaining \muskip_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \muskip_gset_eq:NN }
{retaining \muskip_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \muskip_gset_eq:NN }
{retaining \muskip_gset_eq:cN=\protected\long macro:->\exp_args:Nc \muskip_gset_eq:NN }
{retaining \muskip_set_eq:cc=\protected\long macro:->\exp_args:Ncc \muskip_set_eq:NN }
{retaining \muskip_set_eq:Nc=\protected\long macro:->\exp_args:NNc \muskip_set_eq:NN }
{retaining \muskip_set_eq:cN=\protected\long macro:->\exp_args:Nc \muskip_set_eq:NN }
{retaining \muskip_gset:cn=\protected\long macro:->\exp_args:Nc \muskip_gset:Nn }
{retaining \muskip_set:cn=\protected\long macro:->\exp_args:Nc \muskip_set:Nn }
{retaining \muskip_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \muskip_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \muskip_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \muskip_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \muskip_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \muskip_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \muskip_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \muskip_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \muskip_gzero_new:c=\protected\long macro:->\exp_args:Nc \muskip_gzero_new:N }
{retaining \muskip_zero_new:c=\protected\long macro:->\exp_args:Nc \muskip_zero_new:N }
{retaining \muskip_gzero:c=\protected\long macro:->\exp_args:Nc \muskip_gzero:N }
{retaining \muskip_zero:c=\protected\long macro:->\exp_args:Nc \muskip_zero:N }
{retaining \muskip_const:cn=\protected\long macro:->\exp_args:Nc \muskip_const:Nn }
{retaining \muskip_new:c=\protected\long macro:->\exp_args:Nc \muskip_new:N }
{retaining \skip_show:c=\protected\long macro:->\exp_args:Nc \skip_show:N }
{retaining \skip_vertical:c=\protected\long macro:->\exp_args:Nc \skip_vertical:N }
{retaining \skip_horizontal:c=\protected\long macro:->\exp_args:Nc \skip_horizontal:N }
{retaining \skip_if_finite:nTF=\long macro:#1->\exp_after:wN \__skip_if_finite:wwNw \ETC.}
{retaining \skip_if_finite:nF=\long macro:#1->\exp_after:wN \__skip_if_finite:wwNw \ETC.}
{retaining \skip_if_finite:nT=\long macro:#1->\exp_after:wN \__skip_if_finite:wwNw \ETC.}
{retaining \skip_if_finite_p:n=\long macro:#1->\exp_after:wN \__skip_if_finite:wwNw \ETC.}
{restoring \__skip_tmp:w=undefined}
{retaining \skip_if_eq:nnTF=\long macro:#1#2->\str_if_eq:eeTF {\skip_eval:n \ETC.}
{retaining \skip_if_eq:nnF=\long macro:#1#2->\str_if_eq:eeTF {\skip_eval:n \ETC.}
{retaining \skip_if_eq:nnT=\long macro:#1#2->\str_if_eq:eeTF {\skip_eval:n \ETC.}
{retaining \skip_if_eq_p:nn=\long macro:#1#2->\str_if_eq:eeTF {\skip_eval:n \ETC.}
{retaining \skip_gsub:cn=\protected\long macro:->\exp_args:Nc \skip_gsub:Nn }
{retaining \skip_sub:cn=\protected\long macro:->\exp_args:Nc \skip_sub:Nn }
{retaining \skip_gadd:cn=\protected\long macro:->\exp_args:Nc \skip_gadd:Nn }
{retaining \skip_add:cn=\protected\long macro:->\exp_args:Nc \skip_add:Nn }
{retaining \skip_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \skip_gset_eq:NN }
{retaining \skip_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \skip_gset_eq:NN }
{retaining \skip_gset_eq:cN=\protected\long macro:->\exp_args:Nc \skip_gset_eq:NN }
{retaining \skip_set_eq:cc=\protected\long macro:->\exp_args:Ncc \skip_set_eq:NN }
{retaining \skip_set_eq:Nc=\protected\long macro:->\exp_args:NNc \skip_set_eq:NN }
{retaining \skip_set_eq:cN=\protected\long macro:->\exp_args:Nc \skip_set_eq:NN }
{retaining \skip_gset:cn=\protected\long macro:->\exp_args:Nc \skip_gset:Nn }
{retaining \skip_set:cn=\protected\long macro:->\exp_args:Nc \skip_set:Nn }
{retaining \skip_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \skip_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \skip_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \skip_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \skip_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \skip_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \skip_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \skip_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \skip_gzero_new:c=\protected\long macro:->\exp_args:Nc \skip_gzero_new:N }
{retaining \skip_zero_new:c=\protected\long macro:->\exp_args:Nc \skip_zero_new:N }
{retaining \skip_gzero:c=\protected\long macro:->\exp_args:Nc \skip_gzero:N }
{retaining \skip_zero:c=\protected\long macro:->\exp_args:Nc \skip_zero:N }
{retaining \skip_const:cn=\protected\long macro:->\exp_args:Nc \skip_const:Nn }
{retaining \skip_new:c=\protected\long macro:->\exp_args:Nc \skip_new:N }
{retaining \dim_show:c=\protected\long macro:->\exp_args:Nc \dim_show:N }
{retaining \__dim_compare_>:w=\long macro:#1\reverse_if:N #2>#3=->#1#2<#3}
{retaining \__dim_compare_<:w=\long macro:#1\reverse_if:N #2<#3=->#1#2>#3}
{retaining \__dim_compare_=:w=\long macro:#1\__dim_eval:w =->#1\__dim_eval:w }
{retaining \__dim_compare_!:w=\long macro:#1\reverse_if:N #2!#3=->#1#2=#3}
{retaining \dim_compare:nTF=\long macro:#1->\exp_after:wN \__dim_compare:w \ETC.}
{retaining \dim_compare:nF=\long macro:#1->\exp_after:wN \__dim_compare:w \ETC.}
{retaining \dim_compare:nT=\long macro:#1->\exp_after:wN \__dim_compare:w \ETC.}
{retaining \dim_compare_p:n=\long macro:#1->\exp_after:wN \__dim_compare:w \ETC.}
{retaining \dim_compare:nNnTF=\long macro:#1#2#3->\if_dim:w \__dim_eval:w #1\ETC.}
{retaining \dim_compare:nNnF=\long macro:#1#2#3->\if_dim:w \__dim_eval:w #1\ETC.}
{retaining \dim_compare:nNnT=\long macro:#1#2#3->\if_dim:w \__dim_eval:w #1\ETC.}
{retaining \dim_compare_p:nNn=\long macro:#1#2#3->\if_dim:w \__dim_eval:w #1\ETC.}
{retaining \dim_gsub:cn=\protected\long macro:->\exp_args:Nc \dim_gsub:Nn }
{retaining \dim_sub:cn=\protected\long macro:->\exp_args:Nc \dim_sub:Nn }
{retaining \dim_gadd:cn=\protected\long macro:->\exp_args:Nc \dim_gadd:Nn }
{retaining \dim_add:cn=\protected\long macro:->\exp_args:Nc \dim_add:Nn }
{retaining \dim_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \dim_gset_eq:NN }
{retaining \dim_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \dim_gset_eq:NN }
{retaining \dim_gset_eq:cN=\protected\long macro:->\exp_args:Nc \dim_gset_eq:NN }
{retaining \dim_set_eq:cc=\protected\long macro:->\exp_args:Ncc \dim_set_eq:NN }
{retaining \dim_set_eq:Nc=\protected\long macro:->\exp_args:NNc \dim_set_eq:NN }
{retaining \dim_set_eq:cN=\protected\long macro:->\exp_args:Nc \dim_set_eq:NN }
{retaining \dim_gset:cn=\protected\long macro:->\exp_args:Nc \dim_gset:Nn }
{retaining \dim_set:cn=\protected\long macro:->\exp_args:Nc \dim_set:Nn }
{retaining \dim_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \dim_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \dim_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \dim_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \dim_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \dim_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \dim_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \dim_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \dim_gzero_new:c=\protected\long macro:->\exp_args:Nc \dim_gzero_new:N }
{retaining \dim_zero_new:c=\protected\long macro:->\exp_args:Nc \dim_zero_new:N }
{retaining \dim_gzero:c=\protected\long macro:->\exp_args:Nc \dim_gzero:N }
{retaining \dim_zero:c=\protected\long macro:->\exp_args:Nc \dim_zero:N }
{retaining \dim_const:cn=\protected\long macro:->\exp_args:Nc \dim_const:Nn }
{retaining \dim_new:c=\protected\long macro:->\exp_args:Nc \dim_new:N }
{retaining \sys_if_platform_windows_p:=\char"0}
{retaining \sys_if_platform_windows:TF=\long macro:#1#2->#2}
{retaining \sys_if_platform_windows:F=\long macro:#1->#1}
{retaining \sys_if_platform_windows:T=\long macro:#1->}
{retaining \sys_if_platform_unix_p:=\char"1}
{retaining \sys_if_platform_unix:TF=\long macro:#1#2->#1}
{retaining \sys_if_platform_unix:F=\long macro:#1->}
{retaining \sys_if_platform_unix:T=\long macro:#1->#1}
{retaining \msg extra text > kernel/iow-indent=\long macro:#1#2#3#4->The command #2can only b\ETC.}
{retaining \msg text > kernel/iow-indent=\long macro:#1#2#3#4->Only #1allows #2}
{retaining \msg extra text > kernel/unbalanced-quote-in-filename=\long macro:#1#2#3#4->File names must contain \ETC.}
{retaining \msg text > kernel/unbalanced-quote-in-filename=\long macro:#1#2#3#4->Unbalanced quotes in fil\ETC.}
{retaining \msg extra text > kernel/filename-missing-endcsname=\long macro:#1#2#3#4->The file name had more \iow_char:N \ETC.}
{retaining \msg text > kernel/filename-missing-endcsname=\long macro:#1#2#3#4->Missing \iow_char:N \\en\ETC.}
{retaining \msg extra text > kernel/filename-chars-lost=\long macro:#1#2#3#4->There was an invalid tok\ETC.}
{retaining \msg text > kernel/filename-chars-lost=\long macro:#1#2#3#4->#1 invalid in file name.\ETC.}
{retaining \msg extra text > kernel/file-list=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/file-list=\long macro:#1#2#3#4->> File List <#1\\.......\ETC.}
{retaining \msg extra text > kernel/file-not-found=\long macro:#1#2#3#4->The requested file could\ETC.}
{retaining \msg text > kernel/file-not-found=\long macro:#1#2#3#4->File '#1' not found.}
{retaining \msg extra text > kernel/mismatched-support-file=\long macro:#1#2#3#4->\int_compare:nNnTF {\seq_count:N \ETC.}
{retaining \msg text > kernel/mismatched-support-file=\long macro:#1#2#3#4->Mismatched LaTeX support\ETC.}
{retaining \file_parse_full_name:VNNN=\protected\long macro:->\exp_args:NV \file_parse_full_name:nNNN }
{retaining \file_parse_full_name_apply:VN=\long macro:->\exp_args:NV \file_parse_full_name_apply:nN }
{retaining \file_parse_full_name:V=\long macro:->\exp_args:NV \file_parse_full_name:n }
{retaining \file_input_raw:V=\long macro:->\exp_args:NV \file_input_raw:n }
{retaining \__file_input:V=\protected\long macro:->\exp_args:NV \__file_input:n }
{retaining \file_input:V=\protected\long macro:->\exp_args:NV \file_input:n }
{retaining \file_if_exist_input:VF=\protected\long macro:->\exp_args:NV \file_if_exist_input:nF }
{retaining \file_if_exist_input:V=\protected\long macro:->\exp_args:NV \file_if_exist_input:n }
{retaining \file_if_exist:VTF=\long macro:->\exp_args:NV \file_if_exist:nTF }
{retaining \file_if_exist:VF=\long macro:->\exp_args:NV \file_if_exist:nF }
{retaining \file_if_exist:VT=\long macro:->\exp_args:NV \file_if_exist:nT }
{retaining \file_if_exist_p:V=\long macro:->\exp_args:NV \file_if_exist_p:n }
{retaining \file_if_exist:nTF=\long macro:#1->\tl_if_blank:eTF {\file_full_name:n \ETC.}
{retaining \file_if_exist:nF=\long macro:#1->\tl_if_blank:eTF {\file_full_name:n \ETC.}
{retaining \file_if_exist:nT=\long macro:#1->\tl_if_blank:eTF {\file_full_name:n \ETC.}
{retaining \file_if_exist_p:n=\long macro:#1->\tl_if_blank:eTF {\file_full_name:n \ETC.}
{retaining \file_compare_timestamp:VNVTF=\long macro:->\exp_args:NVNV \file_compare_timestamp:nNnTF }
{retaining \file_compare_timestamp:VNnTF=\long macro:->\exp_args:NV \file_compare_timestamp:nNnTF }
{retaining \file_compare_timestamp:nNVTF=\long macro:->\exp_args:NnNV \file_compare_timestamp:nNnTF }
{retaining \file_compare_timestamp:VNVF=\long macro:->\exp_args:NVNV \file_compare_timestamp:nNnF }
{retaining \file_compare_timestamp:VNnF=\long macro:->\exp_args:NV \file_compare_timestamp:nNnF }
{retaining \file_compare_timestamp:nNVF=\long macro:->\exp_args:NnNV \file_compare_timestamp:nNnF }
{retaining \file_compare_timestamp:VNVT=\long macro:->\exp_args:NVNV \file_compare_timestamp:nNnT }
{retaining \file_compare_timestamp:VNnT=\long macro:->\exp_args:NV \file_compare_timestamp:nNnT }
{retaining \file_compare_timestamp:nNVT=\long macro:->\exp_args:NnNV \file_compare_timestamp:nNnT }
{retaining \file_compare_timestamp_p:VNV=\long macro:->\exp_args:NVNV \file_compare_timestamp_p:nNn }
{retaining \file_compare_timestamp_p:VNn=\long macro:->\exp_args:NV \file_compare_timestamp_p:nNn }
{retaining \file_compare_timestamp_p:nNV=\long macro:->\exp_args:NnNV \file_compare_timestamp_p:nNn }
{retaining \file_compare_timestamp:nNnTF=\long macro:#1#2#3->\exp_args:Nee \__file_compare_timestamp:nnN \ETC.}
{retaining \file_compare_timestamp:nNnF=\long macro:#1#2#3->\exp_args:Nee \__file_compare_timestamp:nnN \ETC.}
{retaining \file_compare_timestamp:nNnT=\long macro:#1#2#3->\exp_args:Nee \__file_compare_timestamp:nnN \ETC.}
{retaining \file_compare_timestamp_p:nNn=\long macro:#1#2#3->\exp_args:Nee \__file_compare_timestamp:nnN \ETC.}
{retaining \file_get_hex_dump:VnnNTF=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nnnNTF }
{retaining \file_get_hex_dump:VnnNF=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nnnNF }
{retaining \file_get_hex_dump:VnnNT=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nnnNT }
{retaining \file_get_hex_dump:nnnNTF=\protected\long macro:#1#2#3#4->\__kernel_tl_set:Nx #4{\file_hex_dump:nnn \ETC.}
{retaining \file_get_hex_dump:nnnNF=\protected\long macro:#1#2#3#4->\__kernel_tl_set:Nx #4{\file_hex_dump:nnn \ETC.}
{retaining \file_get_hex_dump:nnnNT=\protected\long macro:#1#2#3#4->\__kernel_tl_set:Nx #4{\file_hex_dump:nnn \ETC.}
{retaining \file_get_hex_dump:VnnN=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nnnN }
{retaining \file_get_timestamp:VNTF=\protected\long macro:->\exp_args:NV \file_get_timestamp:nNTF }
{retaining \file_get_timestamp:VNF=\protected\long macro:->\exp_args:NV \file_get_timestamp:nNF }
{retaining \file_get_timestamp:VNT=\protected\long macro:->\exp_args:NV \file_get_timestamp:nNT }
{retaining \file_get_timestamp:nNTF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_timestamp:nNF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_timestamp:nNT=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_size:VNTF=\protected\long macro:->\exp_args:NV \file_get_size:nNTF }
{retaining \file_get_size:VNF=\protected\long macro:->\exp_args:NV \file_get_size:nNF }
{retaining \file_get_size:VNT=\protected\long macro:->\exp_args:NV \file_get_size:nNT }
{retaining \file_get_size:nNTF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_size:nNF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_size:nNT=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_mdfive_hash:VNTF=\protected\long macro:->\exp_args:NV \file_get_mdfive_hash:nNTF }
{retaining \file_get_mdfive_hash:VNF=\protected\long macro:->\exp_args:NV \file_get_mdfive_hash:nNF }
{retaining \file_get_mdfive_hash:VNT=\protected\long macro:->\exp_args:NV \file_get_mdfive_hash:nNT }
{retaining \file_get_mdfive_hash:nNTF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_mdfive_hash:nNF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_mdfive_hash:nNT=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_hex_dump:VNTF=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nNTF }
{retaining \file_get_hex_dump:VNF=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nNF }
{retaining \file_get_hex_dump:VNT=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nNT }
{retaining \file_get_hex_dump:nNTF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_hex_dump:nNF=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_hex_dump:nNT=\protected\long macro:#1#2->\__file_get_details:nnN {#1}\ETC.}
{retaining \file_get_timestamp:VN=\protected\long macro:->\exp_args:NV \file_get_timestamp:nN }
{retaining \file_get_size:VN=\protected\long macro:->\exp_args:NV \file_get_size:nN }
{retaining \file_get_mdfive_hash:VN=\protected\long macro:->\exp_args:NV \file_get_mdfive_hash:nN }
{retaining \file_get_hex_dump:VN=\protected\long macro:->\exp_args:NV \file_get_hex_dump:nN }
{retaining \file_hex_dump:V=\long macro:->\exp_args:NV \file_hex_dump:n }
{retaining \file_hex_dump:Vnn=\long macro:->\exp_args:NV \file_hex_dump:nnn }
{retaining \file_mdfive_hash:V=\long macro:->\exp_args:NV \file_mdfive_hash:n }
{retaining \file_timestamp:V=\long macro:->\exp_args:NV \file_timestamp:n }
{retaining \file_size:V=\long macro:->\exp_args:NV \file_size:n }
{retaining \file_get_full_name:VNTF=\protected\long macro:->\exp_args:NV \file_get_full_name:nNTF }
{retaining \file_get_full_name:VNF=\protected\long macro:->\exp_args:NV \file_get_full_name:nNF }
{retaining \file_get_full_name:VNT=\protected\long macro:->\exp_args:NV \file_get_full_name:nNT }
{retaining \file_get_full_name:nNTF=\protected\long macro:#1#2->\__kernel_tl_set:Nx #2{\file_full_name:n \ETC.}
{retaining \file_get_full_name:nNF=\protected\long macro:#1#2->\__kernel_tl_set:Nx #2{\file_full_name:n \ETC.}
{retaining \file_get_full_name:nNT=\protected\long macro:#1#2->\__kernel_tl_set:Nx #2{\file_full_name:n \ETC.}
{retaining \file_get_full_name:VN=\protected\long macro:->\exp_args:NV \file_get_full_name:nN }
{retaining \file_full_name:V=\long macro:->\exp_args:NV \file_full_name:n }
{retaining \file_get:VnNTF=\protected\long macro:->\exp_args:NV \file_get:nnNTF }
{retaining \file_get:VnNF=\protected\long macro:->\exp_args:NV \file_get:nnNF }
{retaining \file_get:VnNT=\protected\long macro:->\exp_args:NV \file_get:nnNT }
{retaining \file_get:nnNTF=\protected\long macro:#1#2#3->\file_get_full_name:nNTF {\ETC.}
{retaining \file_get:nnNF=\protected\long macro:#1#2#3->\file_get_full_name:nNTF {\ETC.}
{retaining \file_get:nnNT=\protected\long macro:#1#2#3->\file_get_full_name:nNTF {\ETC.}
{retaining \file_get:VnN=\protected\long macro:->\exp_args:NV \file_get:nnN }
{retaining \__file_use_i_delimit_by_q_recursion_stop:nw=\long macro:#1#2\q__file_recursion_stop ->#1}
{retaining \__file_quark_recursion_tail:w=\long macro:#1\q__file_recursion_tail #2?#3?\ETC.}
{retaining \__file_use_none_delimit_by_q_recursion_stop:w=\long macro:#1\q__file_recursion_stop ->}
{retaining \__file_quark_if_nil:nTF=\long macro:#1->\__quark_if_empty_if:o {\__file_if_quark_nil:w \ETC.}
{retaining \__file_if_quark_nil:w=\long macro:#1\q__file_nil #2?#3?!->#1#2}
{restoring \__iow_tmp:w=undefined}
{retaining \iow_wrap:nenN=\protected\long macro:->\exp_args:Nne \iow_wrap:nnnN }
{retaining \c__iow_wrap_unindent_marker_tl=macro:->^^I^^O^^W^^_^^W^^R^^A^^Punindent }
{retaining \c__iow_wrap_indent_marker_tl=macro:->^^I^^O^^W^^_^^W^^R^^A^^Pindent }
{retaining \c__iow_wrap_allow_break_marker_tl=macro:->^^I^^O^^W^^_^^W^^R^^A^^Pallow_break }
{retaining \c__iow_wrap_newline_marker_tl=macro:->^^I^^O^^W^^_^^W^^R^^A^^Pnewline }
{retaining \c__iow_wrap_end_marker_tl=macro:->^^I^^O^^W^^_^^W^^R^^A^^Pend }
{restoring \__iow_unindent:w=\long macro:->}
{restoring \count296=0}
{restoring \l__iow_one_indent_tl=macro:->}
{restoring \count294=0}
{retaining \iow_term:x=\protected\long macro:->\exp_args:Nx \iow_term:n }
{restoring \iow_term:e=\protected\long macro:->\tex_immediate:D \tex_write:D 16}
{retaining \iow_log:x=\protected\long macro:->\exp_args:Nx \iow_log:n }
{restoring \iow_log:e=\protected\long macro:->\tex_immediate:D \tex_write:D -1}
{retaining \iow_now:cx=\protected\long macro:->\exp_args:Ncx \iow_now:Nn }
{retaining \iow_now:Nx=\protected\long macro:->\exp_args:NNx \iow_now:Nn }
{retaining \iow_now:ce=\protected\long macro:->\exp_args:Nce \iow_now:Nn }
{retaining \iow_now:cV=\protected\long macro:->\exp_args:NcV \iow_now:Nn }
{retaining \iow_now:cn=\protected\long macro:->\exp_args:Nc \iow_now:Nn }
{retaining \iow_now:Ne=\protected\long macro:->\exp_args:NNe \iow_now:Nn }
{retaining \iow_now:NV=\protected\long macro:->\exp_args:NNV \iow_now:Nn }
{retaining \__iow_with:oNnn=\protected\long macro:->\exp_args:No \__iow_with:nNnn }
{retaining \iow_shipout:cx=\protected\long macro:->\exp_args:Ncx \iow_shipout:Nn }
{retaining \iow_shipout:Nx=\protected\long macro:->\exp_args:NNx \iow_shipout:Nn }
{retaining \iow_shipout:ce=\protected\long macro:->\exp_args:Nce \iow_shipout:Nn }
{retaining \iow_shipout:cn=\protected\long macro:->\exp_args:Nc \iow_shipout:Nn }
{retaining \iow_shipout:Ne=\protected\long macro:->\exp_args:NNe \iow_shipout:Nn }
{retaining \iow_shipout_e:ce=\protected\long macro:->\exp_args:Nce \iow_shipout_e:Nn }
{retaining \iow_shipout_e:cn=\protected\long macro:->\exp_args:Nc \iow_shipout_e:Nn }
{retaining \iow_shipout_e:Ne=\protected\long macro:->\exp_args:NNe \iow_shipout_e:Nn }
{retaining \iow_log:c=\protected\long macro:->\exp_args:Nc \iow_log:N }
{retaining \iow_show:c=\protected\long macro:->\exp_args:Nc \iow_show:N }
{retaining \iow_close:c=\protected\long macro:->\exp_args:Nc \iow_close:N }
{retaining \__iow_shell_open:oN=\protected\long macro:->\exp_args:No \__iow_shell_open:nN }
{retaining \__iow_open_stream:NV=\protected\long macro:->\exp_args:NNV \__iow_open_stream:Nn }
{retaining \iow_open:cV=\protected\long macro:->\exp_args:NcV \iow_open:Nn }
{retaining \iow_open:cn=\protected\long macro:->\exp_args:Nc \iow_open:Nn }
{retaining \iow_open:NV=\protected\long macro:->\exp_args:NNV \iow_open:Nn }
{retaining \iow_new:c=\protected\long macro:->\exp_args:Nc \iow_new:N }
{retaining \ior_str_get:NNTF=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_str_get:NNF=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_str_get:NNT=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_get:NNTF=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_get:NNF=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_get:NNT=\protected\long macro:#1#2->\ior_if_eof:NTF #1{\prg_return_false: \ETC.}
{retaining \ior_if_eof:NTF=\long macro:#1->\if_int_compare:w -1<#1\if_int_compare:w \ETC.}
{retaining \ior_if_eof:NF=\long macro:#1->\if_int_compare:w -1<#1\if_int_compare:w \ETC.}
{retaining \ior_if_eof:NT=\long macro:#1->\if_int_compare:w -1<#1\if_int_compare:w \ETC.}
{retaining \ior_if_eof_p:N=\long macro:#1->\if_int_compare:w -1<#1\if_int_compare:w \ETC.}
{retaining \ior_log:c=\protected\long macro:->\exp_args:Nc \ior_log:N }
{retaining \ior_show:c=\protected\long macro:->\exp_args:Nc \ior_show:N }
{retaining \ior_close:c=\protected\long macro:->\exp_args:Nc \ior_close:N }
{retaining \msg extra text > kernel/pipe-failed=\long macro:#1#2#3#4->LaTeX tried to call a sy\ETC.}
{retaining \msg text > kernel/pipe-failed=\long macro:#1#2#3#4->Cannot run piped system \ETC.}
{retaining \__ior_shell_open:oN=\protected\long macro:->\exp_args:No \__ior_shell_open:nN }
{retaining \__kernel_ior_open:No=\protected\long macro:->\exp_args:NNo \__kernel_ior_open:Nn }
{retaining \ior_open:cnTF=\protected\long macro:->\exp_args:Nc \ior_open:NnTF }
{retaining \ior_open:cnF=\protected\long macro:->\exp_args:Nc \ior_open:NnF }
{retaining \ior_open:cnT=\protected\long macro:->\exp_args:Nc \ior_open:NnT }
{retaining \ior_open:NnTF=\protected\long macro:#1#2->\file_get_full_name:nNTF {#2\ETC.}
{retaining \ior_open:NnF=\protected\long macro:#1#2->\file_get_full_name:nNTF {#2\ETC.}
{retaining \ior_open:NnT=\protected\long macro:#1#2->\file_get_full_name:nNTF {#2\ETC.}
{retaining \ior_open:cn=\protected\long macro:->\exp_args:Nc \ior_open:Nn }
{retaining \ior_new:c=\protected\long macro:->\exp_args:Nc \ior_new:N }
{retaining \__int_map_1:w=\protected\long macro:#1->\tl_if_eq:ccT {l__codepoint_lo\ETC.}
{retaining \msg_expandable_error:nnf=\long macro:->\exp_args:Nnnf \msg_expandable_error:nnn }
{retaining \msg_expandable_error:nnff=\long macro:->\exp_args:Nnnff \msg_expandable_error:nnnn }
{retaining \msg_expandable_error:nnfff=\long macro:->\exp_args:Nnnfff \msg_expandable_error:nnnnn }
{retaining \msg_expandable_error:nnffff=\long macro:->\exp_args:Nnnffff \msg_expandable_error:nnnnnn }
{retaining \exp_args:Noooo=\long macro:#1#2#3#4#5->\tex_expanded:D {\exp_not:N \ETC.}
{retaining \__str_map_2:w=\protected\long macro:#1->\str_if_in:nnF {NnpcofeVvx}{#1\ETC.}
{retaining \__clist_map_1:w=\protected\long macro:#1->\__codepoint_range:nnn {110000\ETC.}
{restoring \l__clist_internal_clist=macro:->}
{retaining \???=\long macro:?->}
{restoring \__msg_tmp:w=undefined}
{retaining \msg extra text > sys/wrong-backend=\long macro:#1#2#3#4->You have requested backe\ETC.}
{retaining \msg text > sys/wrong-backend=\long macro:#1#2#3#4->Backend request inconsis\ETC.}
{retaining \msg extra text > sys/load-debug-in-preamble=\long macro:#1#2#3#4->Debugging requires suppo\ETC.}
{retaining \msg text > sys/load-debug-in-preamble=\long macro:#1#2#3#4->Load debug support in th\ETC.}
{retaining \msg extra text > sys/backend-set=\long macro:#1#2#3#4->Run-time backend selecti\ETC.}
{retaining \msg text > sys/backend-set=\long macro:#1#2#3#4->Backend configuration al\ETC.}
{retaining \msg extra text > kernel/show-streams=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/show-streams=\long macro:#1#2#3#4->\tl_if_empty:nTF {#2}{No\ETC.}
{retaining \msg extra text > seq/show=\long macro:#1#2#3#4->}
{retaining \msg text > seq/show=\long macro:#1#2#3#4->The sequence #1 \tl_if_empty:nTF \ETC.}
{retaining \msg extra text > prop/show=\long macro:#1#2#3#4->}
{retaining \msg text > prop/show=\long macro:#1#2#3#4->The \str_if_eq:nnF {#3}{\ETC.}
{retaining \msg extra text > intarray/show=\long macro:#1#2#3#4->}
{retaining \msg text > intarray/show=\long macro:#1#2#3#4->The integer array #1 con\ETC.}
{retaining \msg extra text > clist/show=\long macro:#1#2#3#4->}
{retaining \msg text > clist/show=\long macro:#1#2#3#4->The comma list \tl_if_empty:nF \ETC.}
{retaining \msg extra text > kernel/zero-step=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/zero-step=\long macro:#1#2#3#4->Zero step size for funct\ETC.}
{retaining \msg extra text > kernel/unknown-comparison=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/unknown-comparison=\long macro:#1#2#3#4->Relation '#1' not among \ETC.}
{retaining \msg extra text > prop/prop-keyval=\long macro:#1#2#3#4->}
{retaining \msg text > prop/prop-keyval=\long macro:#1#2#3#4->Missing '=' in '#1' (in \ETC.}
{retaining \msg extra text > prg/negative-replication=\long macro:#1#2#3#4->}
{retaining \msg text > prg/negative-replication=\long macro:#1#2#3#4->Negative argument for \iow_char:N \ETC.}
{retaining \msg extra text > seq/misused=\long macro:#1#2#3#4->}
{retaining \msg text > seq/misused=\long macro:#1#2#3#4->A sequence was misused.}
{retaining \msg extra text > kernel/bad-variable=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/bad-variable=\long macro:#1#2#3#4->Erroneous variable #1use\ETC.}
{retaining \msg extra text > kernel/bad-exp-end-f=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/bad-exp-end-f=\long macro:#1#2#3#4->Misused \exp_end_continue_f:w \ETC.}
{retaining \msg extra text > prop/inner-make=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > prop/inner-make=\long macro:#1#2#3#4->'#1' cannot be used in a\ETC.}
{retaining \msg extra text > prop/misused=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > prop/misused=\long macro:#1#2#3#4->A property list was misu\ETC.}
{retaining \msg extra text > clist/non-clist=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > clist/non-clist=\long macro:#1#2#3#4->Variable '#1' is not a v\ETC.}
{retaining \msg extra text > prop/bad-link=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > prop/bad-link=\long macro:#1#2#3#4->Variable '#1' is not a v\ETC.}
{retaining \msg extra text > kernel/bad-type=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/bad-type=\long macro:#1#2#3#4->Variable '#1' is not a v\ETC.}
{retaining \msg extra text > kernel/variable-not-defined=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/variable-not-defined=\long macro:#1#2#3#4->Variable #1 undefined.}
{retaining \msg extra text > seq/shuffle-too-large=\long macro:#1#2#3#4->TeX has \int_eval:n {\c_max_register_int \ETC.}
{retaining \msg text > seq/shuffle-too-large=\long macro:#1#2#3#4->The sequence #1 is too l\ETC.}
{retaining \msg extra text > seq/item-too-large=\long macro:#1#2#3#4->An attempt was made to p\ETC.}
{retaining \msg text > seq/item-too-large=\long macro:#1#2#3#4->Sequence '#1' does not h\ETC.}
{retaining \msg extra text > scanmark/already-defined=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > scanmark/already-defined=\long macro:#1#2#3#4->Scan mark #1 already def\ETC.}
{retaining \msg extra text > LaTeX/quark/invalid=\long macro:#1#2#3#4->}
{retaining \msg text > LaTeX/quark/invalid=\long macro:#1#2#3#4->Invalid quark variable '\ETC.}
{retaining \msg extra text > quark/invalid-function=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > quark/invalid-function=\long macro:#1#2#3#4->Quark test function '#1'\ETC.}
{retaining \msg extra text > keys/property-unknown=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > keys/property-unknown=\long macro:#1#2#3#4->The key property '#1' is\ETC.}
{retaining \msg extra text > keys/property-requires-value=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > keys/property-requires-value=\long macro:#1#2#3#4->The property '#1' requir\ETC.}
{retaining \msg extra text > keys/property-boolean-values-only=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > keys/property-boolean-values-only=\long macro:#1#2#3#4->The property '#1' accept\ETC.}
{retaining \msg extra text > keys/no-property=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > keys/no-property=\long macro:#1#2#3#4->No property given in def\ETC.}
{retaining \msg extra text > kernel/quote-in-shell=\long macro:#1#2#3#4->Shell commands cannot co\ETC.}
{retaining \msg text > kernel/quote-in-shell=\long macro:#1#2#3#4->Quotes in shell command \ETC.}
{retaining \msg extra text > dim/zero-unit=\long macro:#1#2#3#4->}
{retaining \msg text > dim/zero-unit=\long macro:#1#2#3#4->Zero unit in conversion.}
{retaining \msg extra text > char/out-of-range=\long macro:#1#2#3#4->}
{retaining \msg text > char/out-of-range=\long macro:#1#2#3#4->Charcode requested out o\ETC.}
{retaining \msg extra text > char/null-space=\long macro:#1#2#3#4->}
{retaining \msg text > char/null-space=\long macro:#1#2#3#4->Cannot generate null cha\ETC.}
{retaining \msg extra text > char/invalid-catcode=\long macro:#1#2#3#4->}
{retaining \msg text > char/invalid-catcode=\long macro:#1#2#3#4->Invalid catcode for char\ETC.}
{retaining \msg extra text > char/active=\long macro:#1#2#3#4->}
{retaining \msg text > char/active=\long macro:#1#2#3#4->Cannot generate active c\ETC.}
{retaining \msg extra text > kernel/deprecated-variant=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/deprecated-variant=\long macro:#1#2#3#4->Variant form '#1' deprec\ETC.}
{retaining \msg extra text > kernel/invalid-exp-args=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/invalid-exp-args=\long macro:#1#2#3#4->Invalid variant specifie\ETC.}
{retaining \msg extra text > kernel/invalid-variant=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/invalid-variant=\long macro:#1#2#3#4->Variant form '#1' invali\ETC.}
{retaining \msg extra text > kernel/variant-too-long=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/variant-too-long=\long macro:#1#2#3#4->Variant form '#1' longer\ETC.}
{retaining \msg extra text > kernel/conditional-form-unknown=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/conditional-form-unknown=\long macro:#1#2#3#4->Conditional form '#1' fo\ETC.}
{retaining \msg extra text > kernel/randint-backward-range=\long macro:#1#2#3#4->}
{retaining \msg text > kernel/randint-backward-range=\long macro:#1#2#3#4->Wrong order of bounds in\ETC.}
{retaining \msg extra text > kernel/protected-predicate=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/protected-predicate=\long macro:#1#2#3#4->Predicate '#1' must be e\ETC.}
{retaining \msg extra text > kernel/out-of-bounds=\long macro:#1#2#3#4->An attempt was made to a\ETC.}
{retaining \msg text > kernel/out-of-bounds=\long macro:#1#2#3#4->Access to an entry beyon\ETC.}
{retaining \msg extra text > kernel/overflow=\long macro:#1#2#3#4->An attempt was made to s\ETC.}
{retaining \msg text > kernel/overflow=\long macro:#1#2#3#4->Integers larger than 2^{\ETC.}
{retaining \msg extra text > kernel/missing-colon=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/missing-colon=\long macro:#1#2#3#4->Function '#1' contains n\ETC.}
{retaining \msg extra text > kernel/non-base-function=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/non-base-function=\long macro:#1#2#3#4->Function '#1' is not a b\ETC.}
{retaining \msg extra text > kernel/no-elapsed-time=\long macro:#1#2#3#4->The current engine provi\ETC.}
{retaining \msg text > kernel/no-elapsed-time=\long macro:#1#2#3#4->No clock detected for #1\ETC.}
{retaining \msg extra text > kernel/empty-search-pattern=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/empty-search-pattern=\long macro:#1#2#3#4->Empty search pattern.}
{retaining \msg extra text > kernel/command-not-defined=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/command-not-defined=\long macro:#1#2#3#4->Control sequence #1 unde\ETC.}
{retaining \msg extra text > kernel/command-already-defined=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/command-already-defined=\long macro:#1#2#3#4->Control sequence #1 alre\ETC.}
{retaining \msg extra text > kernel/bad-number-of-arguments=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > kernel/bad-number-of-arguments=\long macro:#1#2#3#4->Function '#1' cannot be \ETC.}
{retaining \msg extra text > msg/redirect-loop=\long macro:#1#2#3#4->Adding the message redir\ETC.}
{retaining \msg text > msg/redirect-loop=\long macro:#1#2#3#4->Message redirection loop\ETC.}
{retaining \msg extra text > msg/class-unknown=\long macro:#1#2#3#4->LaTeX has been asked to \ETC.}
{retaining \msg text > msg/class-unknown=\long macro:#1#2#3#4->Unknown message class '#1\ETC.}
{retaining \msg extra text > msg/unknown=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > msg/unknown=\long macro:#1#2#3#4->Unknown message '#2' for\ETC.}
{retaining \msg extra text > msg/already-defined=\long macro:#1#2#3#4->\c__msg_coding_error_text_tl \ETC.}
{retaining \msg text > msg/already-defined=\long macro:#1#2#3#4->Message '#2' for module \ETC.}
{retaining \__msg_redirect_loop_chk:onn=\protected\long macro:->\exp_args:No \__msg_redirect_loop_chk:nnn }
{restoring \__prop_split_flat:w=\long macro:->}
{restoring \l__prop_internal_tl=macro:->}
{retaining \msg_new:nnx=\protected\long macro:->\exp_args:Nnnx \msg_new:nnn }
{retaining \msg_new:nne=\protected\long macro:->\exp_args:Nnne \msg_new:nnn }
{retaining \msg_new:nnxx=\protected\long macro:->\exp_args:Nnnxx \msg_new:nnnn }
{retaining \msg_new:nnee=\protected\long macro:->\exp_args:Nnnee \msg_new:nnnn }
{retaining \msg_if_exist:nnTF=\long macro:#1#2->\cs_if_exist:cTF {\c__msg_text_prefix_tl \ETC.}
{retaining \msg_if_exist:nnF=\long macro:#1#2->\cs_if_exist:cTF {\c__msg_text_prefix_tl \ETC.}
{retaining \msg_if_exist:nnT=\long macro:#1#2->\cs_if_exist:cTF {\c__msg_text_prefix_tl \ETC.}
{retaining \msg_if_exist_p:nn=\long macro:#1#2->\cs_if_exist:cTF {\c__msg_text_prefix_tl \ETC.}
{retaining \prop_log:c=\protected\long macro:->\exp_args:Nc \prop_log:N }
{retaining \prop_show:c=\protected\long macro:->\exp_args:Nc \prop_show:N }
{retaining \prop_count:c=\long macro:->\exp_args:Nc \prop_count:N }
{retaining \prop_map_tokens:cn=\long macro:->\exp_args:Nc \prop_map_tokens:Nn }
{retaining \prop_map_inline:cn=\protected\long macro:->\exp_args:Nc \prop_map_inline:Nn }
{retaining \prop_map_function:cc=\long macro:->\exp_args:Ncc \prop_map_function:NN }
{retaining \prop_map_function:cN=\long macro:->\exp_args:Nc \prop_map_function:NN }
{retaining \prop_map_function:Nc=\long macro:->\exp_args:NNc \prop_map_function:NN }
{retaining \prop_if_in:coTF=\long macro:->\exp_args:Nco \prop_if_in:NnTF }
{retaining \prop_if_in:ceTF=\long macro:->\exp_args:Nce \prop_if_in:NnTF }
{retaining \prop_if_in:cVTF=\long macro:->\exp_args:NcV \prop_if_in:NnTF }
{retaining \prop_if_in:cnTF=\long macro:->\exp_args:Nc \prop_if_in:NnTF }
{retaining \prop_if_in:NoTF=\long macro:->\exp_args:NNo \prop_if_in:NnTF }
{retaining \prop_if_in:NeTF=\long macro:->\exp_args:NNe \prop_if_in:NnTF }
{retaining \prop_if_in:NVTF=\long macro:->\exp_args:NNV \prop_if_in:NnTF }
{retaining \prop_if_in:coF=\long macro:->\exp_args:Nco \prop_if_in:NnF }
{retaining \prop_if_in:ceF=\long macro:->\exp_args:Nce \prop_if_in:NnF }
{retaining \prop_if_in:cVF=\long macro:->\exp_args:NcV \prop_if_in:NnF }
{retaining \prop_if_in:cnF=\long macro:->\exp_args:Nc \prop_if_in:NnF }
{retaining \prop_if_in:NoF=\long macro:->\exp_args:NNo \prop_if_in:NnF }
{retaining \prop_if_in:NeF=\long macro:->\exp_args:NNe \prop_if_in:NnF }
{retaining \prop_if_in:NVF=\long macro:->\exp_args:NNV \prop_if_in:NnF }
{retaining \prop_if_in:coT=\long macro:->\exp_args:Nco \prop_if_in:NnT }
{retaining \prop_if_in:ceT=\long macro:->\exp_args:Nce \prop_if_in:NnT }
{retaining \prop_if_in:cVT=\long macro:->\exp_args:NcV \prop_if_in:NnT }
{retaining \prop_if_in:cnT=\long macro:->\exp_args:Nc \prop_if_in:NnT }
{retaining \prop_if_in:NoT=\long macro:->\exp_args:NNo \prop_if_in:NnT }
{retaining \prop_if_in:NeT=\long macro:->\exp_args:NNe \prop_if_in:NnT }
{retaining \prop_if_in:NVT=\long macro:->\exp_args:NNV \prop_if_in:NnT }
{retaining \prop_if_in_p:co=\long macro:->\exp_args:Nco \prop_if_in_p:Nn }
{retaining \prop_if_in_p:ce=\long macro:->\exp_args:Nce \prop_if_in_p:Nn }
{retaining \prop_if_in_p:cV=\long macro:->\exp_args:NcV \prop_if_in_p:Nn }
{retaining \prop_if_in_p:cn=\long macro:->\exp_args:Nc \prop_if_in_p:Nn }
{retaining \prop_if_in_p:No=\long macro:->\exp_args:NNo \prop_if_in_p:Nn }
{retaining \prop_if_in_p:Ne=\long macro:->\exp_args:NNe \prop_if_in_p:Nn }
{retaining \prop_if_in_p:NV=\long macro:->\exp_args:NNV \prop_if_in_p:Nn }
{retaining \prop_if_in:NnTF=\long macro:#1#2->\__prop_if_flat:NTF #1{\exp_after:wN \ETC.}
{retaining \prop_if_in:NnF=\long macro:#1#2->\__prop_if_flat:NTF #1{\exp_after:wN \ETC.}
{retaining \prop_if_in:NnT=\long macro:#1#2->\__prop_if_flat:NTF #1{\exp_after:wN \ETC.}
{retaining \prop_if_in_p:Nn=\long macro:#1#2->\__prop_if_flat:NTF #1{\exp_after:wN \ETC.}
{retaining \prop_if_empty:cTF=\long macro:->\exp_args:Nc \prop_if_empty:NTF }
{retaining \prop_if_empty:cF=\long macro:->\exp_args:Nc \prop_if_empty:NF }
{retaining \prop_if_empty:cT=\long macro:->\exp_args:Nc \prop_if_empty:NT }
{retaining \prop_if_empty_p:c=\long macro:->\exp_args:Nc \prop_if_empty_p:N }
{retaining \prop_if_empty:NTF=\long macro:#1->\if_meaning:w #1\c_empty_prop \ETC.}
{retaining \prop_if_empty:NF=\long macro:#1->\if_meaning:w #1\c_empty_prop \ETC.}
{retaining \prop_if_empty:NT=\long macro:#1->\if_meaning:w #1\c_empty_prop \ETC.}
{retaining \prop_if_empty_p:N=\long macro:#1->\if_meaning:w #1\c_empty_prop \ETC.}
{retaining \prop_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \prop_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \prop_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \prop_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \prop_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \prop_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \prop_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \prop_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \prop_gput_if_new:cVn=\protected\long macro:->\exp_args:NcV \prop_gput_if_new:Nnn }
{retaining \prop_gput_if_new:cnV=\protected\long macro:->\exp_args:NcnV \prop_gput_if_new:Nnn }
{retaining \prop_gput_if_new:NVn=\protected\long macro:->\exp_args:NNV \prop_gput_if_new:Nnn }
{retaining \prop_gput_if_new:NnV=\protected\long macro:->\exp_args:NNnV \prop_gput_if_new:Nnn }
{retaining \prop_put_if_new:cVn=\protected\long macro:->\exp_args:NcV \prop_put_if_new:Nnn }
{retaining \prop_put_if_new:cnV=\protected\long macro:->\exp_args:NcnV \prop_put_if_new:Nnn }
{retaining \prop_put_if_new:NVn=\protected\long macro:->\exp_args:NNV \prop_put_if_new:Nnn }
{retaining \prop_put_if_new:NnV=\protected\long macro:->\exp_args:NNnV \prop_put_if_new:Nnn }
{retaining \prop_gput:cxx=\protected\long macro:->\exp_args:Ncxx \prop_gput:Nnn }
{retaining \prop_gput:cxV=\protected\long macro:->\exp_args:NcxV \prop_gput:Nnn }
{retaining \prop_gput:cVx=\protected\long macro:->\exp_args:NcVx \prop_gput:Nnn }
{retaining \prop_gput:cnx=\protected\long macro:->\exp_args:Ncnx \prop_gput:Nnn }
{retaining \prop_gput:coo=\protected\long macro:->\exp_args:Ncoo \prop_gput:Nnn }
{retaining \prop_gput:con=\protected\long macro:->\exp_args:Nco \prop_gput:Nnn }
{retaining \prop_gput:cno=\protected\long macro:->\exp_args:Ncno \prop_gput:Nnn }
{retaining \prop_gput:cee=\protected\long macro:->\exp_args:Ncee \prop_gput:Nnn }
{retaining \prop_gput:cev=\protected\long macro:->\exp_args:Ncev \prop_gput:Nnn }
{retaining \prop_gput:ceV=\protected\long macro:->\exp_args:NceV \prop_gput:Nnn }
{retaining \prop_gput:cen=\protected\long macro:->\exp_args:Nce \prop_gput:Nnn }
{retaining \prop_gput:cve=\protected\long macro:->\exp_args:Ncve \prop_gput:Nnn }
{retaining \prop_gput:cvv=\protected\long macro:->\exp_args:Ncvv \prop_gput:Nnn }
{retaining \prop_gput:cvV=\protected\long macro:->\exp_args:NcvV \prop_gput:Nnn }
{retaining \prop_gput:cvn=\protected\long macro:->\exp_args:Ncv \prop_gput:Nnn }
{retaining \prop_gput:cVe=\protected\long macro:->\exp_args:NcVe \prop_gput:Nnn }
{retaining \prop_gput:cVv=\protected\long macro:->\exp_args:NcVv \prop_gput:Nnn }
{retaining \prop_gput:cVV=\protected\long macro:->\exp_args:NcVV \prop_gput:Nnn }
{retaining \prop_gput:cVn=\protected\long macro:->\exp_args:NcV \prop_gput:Nnn }
{retaining \prop_gput:cne=\protected\long macro:->\exp_args:Ncne \prop_gput:Nnn }
{retaining \prop_gput:cnv=\protected\long macro:->\exp_args:Ncnv \prop_gput:Nnn }
{retaining \prop_gput:cnV=\protected\long macro:->\exp_args:NcnV \prop_gput:Nnn }
{retaining \prop_gput:cnn=\protected\long macro:->\exp_args:Nc \prop_gput:Nnn }
{retaining \prop_gput:Nxx=\protected\long macro:->\exp_args:NNxx \prop_gput:Nnn }
{retaining \prop_gput:NxV=\protected\long macro:->\exp_args:NNxV \prop_gput:Nnn }
{retaining \prop_gput:NVx=\protected\long macro:->\exp_args:NNVx \prop_gput:Nnn }
{retaining \prop_gput:Nnx=\protected\long macro:->\exp_args:NNnx \prop_gput:Nnn }
{retaining \prop_gput:Noo=\protected\long macro:->\exp_args:NNoo \prop_gput:Nnn }
{retaining \prop_gput:Non=\protected\long macro:->\exp_args:NNo \prop_gput:Nnn }
{retaining \prop_gput:Nno=\protected\long macro:->\exp_args:NNno \prop_gput:Nnn }
{retaining \prop_gput:Nee=\protected\long macro:->\exp_args:NNee \prop_gput:Nnn }
{retaining \prop_gput:Nev=\protected\long macro:->\exp_args:NNev \prop_gput:Nnn }
{retaining \prop_gput:NeV=\protected\long macro:->\exp_args:NNeV \prop_gput:Nnn }
{retaining \prop_gput:Nen=\protected\long macro:->\exp_args:NNe \prop_gput:Nnn }
{retaining \prop_gput:Nve=\protected\long macro:->\exp_args:NNve \prop_gput:Nnn }
{retaining \prop_gput:Nvv=\protected\long macro:->\exp_args:NNvv \prop_gput:Nnn }
{retaining \prop_gput:NvV=\protected\long macro:->\exp_args:NNvV \prop_gput:Nnn }
{retaining \prop_gput:Nvn=\protected\long macro:->\exp_args:NNv \prop_gput:Nnn }
{retaining \prop_gput:NVe=\protected\long macro:->\exp_args:NNVe \prop_gput:Nnn }
{retaining \prop_gput:NVv=\protected\long macro:->\exp_args:NNVv \prop_gput:Nnn }
{retaining \prop_gput:NVV=\protected\long macro:->\exp_args:NNVV \prop_gput:Nnn }
{retaining \prop_gput:NVn=\protected\long macro:->\exp_args:NNV \prop_gput:Nnn }
{retaining \prop_gput:Nne=\protected\long macro:->\exp_args:NNne \prop_gput:Nnn }
{retaining \prop_gput:Nnv=\protected\long macro:->\exp_args:NNnv \prop_gput:Nnn }
{retaining \prop_gput:NnV=\protected\long macro:->\exp_args:NNnV \prop_gput:Nnn }
{retaining \prop_put:cxx=\protected\long macro:->\exp_args:Ncxx \prop_put:Nnn }
{retaining \prop_put:cxV=\protected\long macro:->\exp_args:NcxV \prop_put:Nnn }
{retaining \prop_put:cVx=\protected\long macro:->\exp_args:NcVx \prop_put:Nnn }
{retaining \prop_put:cnx=\protected\long macro:->\exp_args:Ncnx \prop_put:Nnn }
{retaining \prop_put:coo=\protected\long macro:->\exp_args:Ncoo \prop_put:Nnn }
{retaining \prop_put:con=\protected\long macro:->\exp_args:Nco \prop_put:Nnn }
{retaining \prop_put:cno=\protected\long macro:->\exp_args:Ncno \prop_put:Nnn }
{retaining \prop_put:cee=\protected\long macro:->\exp_args:Ncee \prop_put:Nnn }
{retaining \prop_put:cev=\protected\long macro:->\exp_args:Ncev \prop_put:Nnn }
{retaining \prop_put:ceV=\protected\long macro:->\exp_args:NceV \prop_put:Nnn }
{retaining \prop_put:cen=\protected\long macro:->\exp_args:Nce \prop_put:Nnn }
{retaining \prop_put:cve=\protected\long macro:->\exp_args:Ncve \prop_put:Nnn }
{retaining \prop_put:cvv=\protected\long macro:->\exp_args:Ncvv \prop_put:Nnn }
{retaining \prop_put:cvV=\protected\long macro:->\exp_args:NcvV \prop_put:Nnn }
{retaining \prop_put:cvn=\protected\long macro:->\exp_args:Ncv \prop_put:Nnn }
{retaining \prop_put:cVe=\protected\long macro:->\exp_args:NcVe \prop_put:Nnn }
{retaining \prop_put:cVv=\protected\long macro:->\exp_args:NcVv \prop_put:Nnn }
{retaining \prop_put:cVV=\protected\long macro:->\exp_args:NcVV \prop_put:Nnn }
{retaining \prop_put:cVn=\protected\long macro:->\exp_args:NcV \prop_put:Nnn }
{retaining \prop_put:cne=\protected\long macro:->\exp_args:Ncne \prop_put:Nnn }
{retaining \prop_put:cnv=\protected\long macro:->\exp_args:Ncnv \prop_put:Nnn }
{retaining \prop_put:cnV=\protected\long macro:->\exp_args:NcnV \prop_put:Nnn }
{retaining \prop_put:cnn=\protected\long macro:->\exp_args:Nc \prop_put:Nnn }
{retaining \prop_put:Nxx=\protected\long macro:->\exp_args:NNxx \prop_put:Nnn }
{retaining \prop_put:NxV=\protected\long macro:->\exp_args:NNxV \prop_put:Nnn }
{retaining \prop_put:NVx=\protected\long macro:->\exp_args:NNVx \prop_put:Nnn }
{retaining \prop_put:Nnx=\protected\long macro:->\exp_args:NNnx \prop_put:Nnn }
{retaining \prop_put:Noo=\protected\long macro:->\exp_args:NNoo \prop_put:Nnn }
{retaining \prop_put:Non=\protected\long macro:->\exp_args:NNo \prop_put:Nnn }
{retaining \prop_put:Nno=\protected\long macro:->\exp_args:NNno \prop_put:Nnn }
{retaining \prop_put:Nee=\protected\long macro:->\exp_args:NNee \prop_put:Nnn }
{retaining \prop_put:Nev=\protected\long macro:->\exp_args:NNev \prop_put:Nnn }
{retaining \prop_put:NeV=\protected\long macro:->\exp_args:NNeV \prop_put:Nnn }
{retaining \prop_put:Nen=\protected\long macro:->\exp_args:NNe \prop_put:Nnn }
{retaining \prop_put:Nve=\protected\long macro:->\exp_args:NNve \prop_put:Nnn }
{retaining \prop_put:Nvv=\protected\long macro:->\exp_args:NNvv \prop_put:Nnn }
{retaining \prop_put:NvV=\protected\long macro:->\exp_args:NNvV \prop_put:Nnn }
{retaining \prop_put:Nvn=\protected\long macro:->\exp_args:NNv \prop_put:Nnn }
{retaining \prop_put:NVe=\protected\long macro:->\exp_args:NNVe \prop_put:Nnn }
{retaining \prop_put:NVv=\protected\long macro:->\exp_args:NNVv \prop_put:Nnn }
{retaining \prop_put:NVV=\protected\long macro:->\exp_args:NNVV \prop_put:Nnn }
{retaining \prop_put:NVn=\protected\long macro:->\exp_args:NNV \prop_put:Nnn }
{retaining \prop_put:Nne=\protected\long macro:->\exp_args:NNne \prop_put:Nnn }
{retaining \prop_put:Nnv=\protected\long macro:->\exp_args:NNnv \prop_put:Nnn }
{retaining \prop_put:NnV=\protected\long macro:->\exp_args:NNnV \prop_put:Nnn }
{retaining \prop_gpop:coNTF=\protected\long macro:->\exp_args:Nco \prop_gpop:NnNTF }
{retaining \prop_gpop:cVNTF=\protected\long macro:->\exp_args:NcV \prop_gpop:NnNTF }
{retaining \prop_gpop:cnNTF=\protected\long macro:->\exp_args:Nc \prop_gpop:NnNTF }
{retaining \prop_gpop:NoNTF=\protected\long macro:->\exp_args:NNo \prop_gpop:NnNTF }
{retaining \prop_gpop:NVNTF=\protected\long macro:->\exp_args:NNV \prop_gpop:NnNTF }
{retaining \prop_gpop:coNF=\protected\long macro:->\exp_args:Nco \prop_gpop:NnNF }
{retaining \prop_gpop:cVNF=\protected\long macro:->\exp_args:NcV \prop_gpop:NnNF }
{retaining \prop_gpop:cnNF=\protected\long macro:->\exp_args:Nc \prop_gpop:NnNF }
{retaining \prop_gpop:NoNF=\protected\long macro:->\exp_args:NNo \prop_gpop:NnNF }
{retaining \prop_gpop:NVNF=\protected\long macro:->\exp_args:NNV \prop_gpop:NnNF }
{retaining \prop_gpop:coNT=\protected\long macro:->\exp_args:Nco \prop_gpop:NnNT }
{retaining \prop_gpop:cVNT=\protected\long macro:->\exp_args:NcV \prop_gpop:NnNT }
{retaining \prop_gpop:cnNT=\protected\long macro:->\exp_args:Nc \prop_gpop:NnNT }
{retaining \prop_gpop:NoNT=\protected\long macro:->\exp_args:NNo \prop_gpop:NnNT }
{retaining \prop_gpop:NVNT=\protected\long macro:->\exp_args:NNV \prop_gpop:NnNT }
{retaining \prop_pop:coNTF=\protected\long macro:->\exp_args:Nco \prop_pop:NnNTF }
{retaining \prop_pop:cVNTF=\protected\long macro:->\exp_args:NcV \prop_pop:NnNTF }
{retaining \prop_pop:cnNTF=\protected\long macro:->\exp_args:Nc \prop_pop:NnNTF }
{retaining \prop_pop:NoNTF=\protected\long macro:->\exp_args:NNo \prop_pop:NnNTF }
{retaining \prop_pop:NVNTF=\protected\long macro:->\exp_args:NNV \prop_pop:NnNTF }
{retaining \prop_pop:coNF=\protected\long macro:->\exp_args:Nco \prop_pop:NnNF }
{retaining \prop_pop:cVNF=\protected\long macro:->\exp_args:NcV \prop_pop:NnNF }
{retaining \prop_pop:cnNF=\protected\long macro:->\exp_args:Nc \prop_pop:NnNF }
{retaining \prop_pop:NoNF=\protected\long macro:->\exp_args:NNo \prop_pop:NnNF }
{retaining \prop_pop:NVNF=\protected\long macro:->\exp_args:NNV \prop_pop:NnNF }
{retaining \prop_pop:coNT=\protected\long macro:->\exp_args:Nco \prop_pop:NnNT }
{retaining \prop_pop:cVNT=\protected\long macro:->\exp_args:NcV \prop_pop:NnNT }
{retaining \prop_pop:cnNT=\protected\long macro:->\exp_args:Nc \prop_pop:NnNT }
{retaining \prop_pop:NoNT=\protected\long macro:->\exp_args:NNo \prop_pop:NnNT }
{retaining \prop_pop:NVNT=\protected\long macro:->\exp_args:NNV \prop_pop:NnNT }
{retaining \prop_gpop:NnNTF=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_gpop:NnNF=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_gpop:NnNT=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_pop:NnNTF=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_pop:NnNF=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_pop:NnNT=\protected\long macro:#1#2#3->\__prop_pop:NnNNnTF #1{#2}\ETC.}
{retaining \prop_gpop:coN=\protected\long macro:->\exp_args:Nco \prop_gpop:NnN }
{retaining \prop_gpop:cVN=\protected\long macro:->\exp_args:NcV \prop_gpop:NnN }
{retaining \prop_gpop:cnN=\protected\long macro:->\exp_args:Nc \prop_gpop:NnN }
{retaining \prop_gpop:NoN=\protected\long macro:->\exp_args:NNo \prop_gpop:NnN }
{retaining \prop_gpop:NVN=\protected\long macro:->\exp_args:NNV \prop_gpop:NnN }
{retaining \prop_pop:coN=\protected\long macro:->\exp_args:Nco \prop_pop:NnN }
{retaining \prop_pop:cVN=\protected\long macro:->\exp_args:NcV \prop_pop:NnN }
{retaining \prop_pop:cnN=\protected\long macro:->\exp_args:Nc \prop_pop:NnN }
{retaining \prop_pop:NoN=\protected\long macro:->\exp_args:NNo \prop_pop:NnN }
{retaining \prop_pop:NVN=\protected\long macro:->\exp_args:NNV \prop_pop:NnN }
{retaining \prop_gremove:ce=\protected\long macro:->\exp_args:Nce \prop_gremove:Nn }
{retaining \prop_gremove:cV=\protected\long macro:->\exp_args:NcV \prop_gremove:Nn }
{retaining \prop_gremove:cn=\protected\long macro:->\exp_args:Nc \prop_gremove:Nn }
{retaining \prop_gremove:Ne=\protected\long macro:->\exp_args:NNe \prop_gremove:Nn }
{retaining \prop_gremove:NV=\protected\long macro:->\exp_args:NNV \prop_gremove:Nn }
{retaining \prop_remove:ce=\protected\long macro:->\exp_args:Nce \prop_remove:Nn }
{retaining \prop_remove:cV=\protected\long macro:->\exp_args:NcV \prop_remove:Nn }
{retaining \prop_remove:cn=\protected\long macro:->\exp_args:Nc \prop_remove:Nn }
{retaining \prop_remove:Ne=\protected\long macro:->\exp_args:NNe \prop_remove:Nn }
{retaining \prop_remove:NV=\protected\long macro:->\exp_args:NNV \prop_remove:Nn }
{retaining \prop_item:ce=\long macro:->\exp_args:Nce \prop_item:Nn }
{retaining \prop_item:co=\long macro:->\exp_args:Nco \prop_item:Nn }
{retaining \prop_item:cV=\long macro:->\exp_args:NcV \prop_item:Nn }
{retaining \prop_item:cn=\long macro:->\exp_args:Nc \prop_item:Nn }
{retaining \prop_item:Ne=\long macro:->\exp_args:NNe \prop_item:Nn }
{retaining \prop_item:No=\long macro:->\exp_args:NNo \prop_item:Nn }
{retaining \prop_item:NV=\long macro:->\exp_args:NNV \prop_item:Nn }
{retaining \prop_get:cncTF=\protected\long macro:->\exp_args:Ncnc \prop_get:NnNTF }
{retaining \prop_get:cncF=\protected\long macro:->\exp_args:Ncnc \prop_get:NnNF }
{retaining \prop_get:cncT=\protected\long macro:->\exp_args:Ncnc \prop_get:NnNT }
{retaining \prop_get:cxNTF=\protected\long macro:->\exp_args:Ncx \prop_get:NnNTF }
{retaining \prop_get:coNTF=\protected\long macro:->\exp_args:Nco \prop_get:NnNTF }
{retaining \prop_get:NxNTF=\protected\long macro:->\exp_args:NNx \prop_get:NnNTF }
{retaining \prop_get:NoNTF=\protected\long macro:->\exp_args:NNo \prop_get:NnNTF }
{retaining \prop_get:cxNF=\protected\long macro:->\exp_args:Ncx \prop_get:NnNF }
{retaining \prop_get:coNF=\protected\long macro:->\exp_args:Nco \prop_get:NnNF }
{retaining \prop_get:NxNF=\protected\long macro:->\exp_args:NNx \prop_get:NnNF }
{retaining \prop_get:NoNF=\protected\long macro:->\exp_args:NNo \prop_get:NnNF }
{retaining \prop_get:cxNT=\protected\long macro:->\exp_args:Ncx \prop_get:NnNT }
{retaining \prop_get:coNT=\protected\long macro:->\exp_args:Nco \prop_get:NnNT }
{retaining \prop_get:NxNT=\protected\long macro:->\exp_args:NNx \prop_get:NnNT }
{retaining \prop_get:NoNT=\protected\long macro:->\exp_args:NNo \prop_get:NnNT }
{retaining \prop_get:ceNTF=\protected\long macro:->\exp_args:Nce \prop_get:NnNTF }
{retaining \prop_get:cvNTF=\protected\long macro:->\exp_args:Ncv \prop_get:NnNTF }
{retaining \prop_get:cVNTF=\protected\long macro:->\exp_args:NcV \prop_get:NnNTF }
{retaining \prop_get:cnNTF=\protected\long macro:->\exp_args:Nc \prop_get:NnNTF }
{retaining \prop_get:NeNTF=\protected\long macro:->\exp_args:NNe \prop_get:NnNTF }
{retaining \prop_get:NvNTF=\protected\long macro:->\exp_args:NNv \prop_get:NnNTF }
{retaining \prop_get:NVNTF=\protected\long macro:->\exp_args:NNV \prop_get:NnNTF }
{retaining \prop_get:ceNF=\protected\long macro:->\exp_args:Nce \prop_get:NnNF }
{retaining \prop_get:cvNF=\protected\long macro:->\exp_args:Ncv \prop_get:NnNF }
{retaining \prop_get:cVNF=\protected\long macro:->\exp_args:NcV \prop_get:NnNF }
{retaining \prop_get:cnNF=\protected\long macro:->\exp_args:Nc \prop_get:NnNF }
{retaining \prop_get:NeNF=\protected\long macro:->\exp_args:NNe \prop_get:NnNF }
{retaining \prop_get:NvNF=\protected\long macro:->\exp_args:NNv \prop_get:NnNF }
{retaining \prop_get:NVNF=\protected\long macro:->\exp_args:NNV \prop_get:NnNF }
{retaining \prop_get:ceNT=\protected\long macro:->\exp_args:Nce \prop_get:NnNT }
{retaining \prop_get:cvNT=\protected\long macro:->\exp_args:Ncv \prop_get:NnNT }
{retaining \prop_get:cVNT=\protected\long macro:->\exp_args:NcV \prop_get:NnNT }
{retaining \prop_get:cnNT=\protected\long macro:->\exp_args:Nc \prop_get:NnNT }
{retaining \prop_get:NeNT=\protected\long macro:->\exp_args:NNe \prop_get:NnNT }
{retaining \prop_get:NvNT=\protected\long macro:->\exp_args:NNv \prop_get:NnNT }
{retaining \prop_get:NVNT=\protected\long macro:->\exp_args:NNV \prop_get:NnNT }
{retaining \prop_get:NnNTF=\protected\long macro:#1#2#3->\__prop_get:NnnTF #1{#2}{\tl_set:Nn \ETC.}
{retaining \prop_get:NnNF=\protected\long macro:#1#2#3->\__prop_get:NnnTF #1{#2}{\tl_set:Nn \ETC.}
{retaining \prop_get:NnNT=\protected\long macro:#1#2#3->\__prop_get:NnnTF #1{#2}{\tl_set:Nn \ETC.}
{retaining \prop_get:cnc=\protected\long macro:->\exp_args:Ncnc \prop_get:NnN }
{retaining \prop_get:cxN=\protected\long macro:->\exp_args:Ncx \prop_get:NnN }
{retaining \prop_get:coN=\protected\long macro:->\exp_args:Nco \prop_get:NnN }
{retaining \prop_get:NxN=\protected\long macro:->\exp_args:NNx \prop_get:NnN }
{retaining \prop_get:NoN=\protected\long macro:->\exp_args:NNo \prop_get:NnN }
{retaining \prop_get:ceN=\protected\long macro:->\exp_args:Nce \prop_get:NnN }
{retaining \prop_get:cvN=\protected\long macro:->\exp_args:Ncv \prop_get:NnN }
{retaining \prop_get:cVN=\protected\long macro:->\exp_args:NcV \prop_get:NnN }
{retaining \prop_get:cnN=\protected\long macro:->\exp_args:Nc \prop_get:NnN }
{retaining \prop_get:NeN=\protected\long macro:->\exp_args:NNe \prop_get:NnN }
{retaining \prop_get:NvN=\protected\long macro:->\exp_args:NNv \prop_get:NnN }
{retaining \prop_get:NVN=\protected\long macro:->\exp_args:NNV \prop_get:NnN }
{retaining \prop_const_linked_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_const_linked_from_keyval:Nn }
{retaining \prop_const_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_const_from_keyval:Nn }
{retaining \prop_gset_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_gset_from_keyval:Nn }
{retaining \prop_set_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_set_from_keyval:Nn }
{retaining \prop_gput_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_gput_from_keyval:Nn }
{retaining \prop_put_from_keyval:cn=\protected\long macro:->\exp_args:Nc \prop_put_from_keyval:Nn }
{retaining \prop_gconcat:ccc=\protected\long macro:->\exp_args:Nccc \prop_gconcat:NNN }
{retaining \prop_concat:ccc=\protected\long macro:->\exp_args:Nccc \prop_concat:NNN }
{retaining \prop_make_linked:c=\protected\long macro:->\exp_args:Nc \prop_make_linked:N }
{retaining \prop_make_flat:c=\protected\long macro:->\exp_args:Nc \prop_make_flat:N }
{retaining \prop_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \prop_gset_eq:NN }
{retaining \prop_gset_eq:cN=\protected\long macro:->\exp_args:Nc \prop_gset_eq:NN }
{retaining \prop_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \prop_gset_eq:NN }
{retaining \prop_set_eq:cc=\protected\long macro:->\exp_args:Ncc \prop_set_eq:NN }
{retaining \prop_set_eq:cN=\protected\long macro:->\exp_args:Nc \prop_set_eq:NN }
{retaining \prop_set_eq:Nc=\protected\long macro:->\exp_args:NNc \prop_set_eq:NN }
{retaining \prop_gclear_new_linked:c=\protected\long macro:->\exp_args:Nc \prop_gclear_new_linked:N }
{retaining \prop_clear_new_linked:c=\protected\long macro:->\exp_args:Nc \prop_clear_new_linked:N }
{retaining \prop_gclear_new:c=\protected\long macro:->\exp_args:Nc \prop_gclear_new:N }
{retaining \prop_clear_new:c=\protected\long macro:->\exp_args:Nc \prop_clear_new:N }
{retaining \prop_gclear:c=\protected\long macro:->\exp_args:Nc \prop_gclear:N }
{retaining \prop_clear:c=\protected\long macro:->\exp_args:Nc \prop_clear:N }
{retaining \prop_new_linked:c=\protected\long macro:->\exp_args:Nc \prop_new_linked:N }
{retaining \prop_new:c=\protected\long macro:->\exp_args:Nc \prop_new:N }
{retaining \__prop_if_recursion_tail_stop:o=\long macro:->\exp_args:No \__prop_if_recursion_tail_stop:n }
{retaining \__prop_quark_recursion_tail:w=\long macro:#1\q__prop_recursion_tail #2?#3?\ETC.}
{retaining \__prop_use_none_delimit_by_q_recursion_stop:w=\long macro:#1\q__prop_recursion_stop ->}
{retaining \peek_meaning_remove:NF=\protected\long macro:->\__peek_token_remove_generic:NNF \ETC.}
{retaining \peek_meaning_remove:NT=\protected\long macro:->\__peek_token_remove_generic:NNT \ETC.}
{retaining \peek_meaning_remove:NTF=\protected\long macro:->\__peek_token_remove_generic:NNTF \ETC.}
{retaining \peek_meaning:NF=\protected\long macro:->\__peek_token_generic:NNF \__peek_execute_branches_meaning: }
{retaining \peek_meaning:NT=\protected\long macro:->\__peek_token_generic:NNT \__peek_execute_branches_meaning: }
{retaining \peek_meaning:NTF=\protected\long macro:->\__peek_token_generic:NNTF \__peek_execute_branches_meaning: }
{retaining \peek_charcode_remove:NF=\protected\long macro:->\__peek_token_remove_generic:NNF \ETC.}
{retaining \peek_charcode_remove:NT=\protected\long macro:->\__peek_token_remove_generic:NNT \ETC.}
{retaining \peek_charcode_remove:NTF=\protected\long macro:->\__peek_token_remove_generic:NNTF \ETC.}
{retaining \peek_charcode:NF=\protected\long macro:->\__peek_token_generic:NNF \__peek_execute_branches_charcode: }
{retaining \peek_charcode:NT=\protected\long macro:->\__peek_token_generic:NNT \__peek_execute_branches_charcode: }
{retaining \peek_charcode:NTF=\protected\long macro:->\__peek_token_generic:NNTF \__peek_execute_branches_charcode: }
{retaining \peek_catcode_remove:NF=\protected\long macro:->\__peek_token_remove_generic:NNF \ETC.}
{retaining \peek_catcode_remove:NT=\protected\long macro:->\__peek_token_remove_generic:NNT \ETC.}
{retaining \peek_catcode_remove:NTF=\protected\long macro:->\__peek_token_remove_generic:NNTF \ETC.}
{retaining \peek_catcode:NF=\protected\long macro:->\__peek_token_generic:NNF \__peek_execute_branches_catcode: }
{retaining \peek_catcode:NT=\protected\long macro:->\__peek_token_generic:NNT \__peek_execute_branches_catcode: }
{retaining \peek_catcode:NTF=\protected\long macro:->\__peek_token_generic:NNTF \__peek_execute_branches_catcode: }
{retaining \__tl_map_3:w=\protected\long macro:#1->\cs_new_protected:cpe {peek_me\ETC.}
{retaining \__tl_map_2:w=\protected\long macro:#1->\tl_const:ce {c__str_byte_\int_eval:n \ETC.}
{retaining \token_if_primitive:NTF=\long macro:#1->\__token_if_primitive_lua:N #1\ETC.}
{retaining \token_if_primitive:NF=\long macro:#1->\__token_if_primitive_lua:N #1\ETC.}
{retaining \token_if_primitive:NT=\long macro:#1->\__token_if_primitive_lua:N #1\ETC.}
{retaining \token_if_primitive_p:N=\long macro:#1->\__token_if_primitive_lua:N #1\ETC.}
{retaining \token_if_expandable:NTF=\long macro:#1->\exp_after:wN \if_meaning:w \exp_not:N \ETC.}
{retaining \token_if_expandable:NF=\long macro:#1->\exp_after:wN \if_meaning:w \exp_not:N \ETC.}
{retaining \token_if_expandable:NT=\long macro:#1->\exp_after:wN \if_meaning:w \exp_not:N \ETC.}
{retaining \token_if_expandable_p:N=\long macro:#1->\exp_after:wN \if_meaning:w \exp_not:N \ETC.}
{retaining \token_if_cs:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\scan_stop: \ETC.}
{retaining \token_if_cs:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\scan_stop: \ETC.}
{retaining \token_if_cs:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\scan_stop: \ETC.}
{retaining \token_if_cs_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\scan_stop: \ETC.}
{retaining \token_if_macro:NTF=\long macro:#1->\exp_after:wN \__token_if_macro_p:w \ETC.}
{retaining \token_if_macro:NF=\long macro:#1->\exp_after:wN \__token_if_macro_p:w \ETC.}
{retaining \token_if_macro:NT=\long macro:#1->\exp_after:wN \__token_if_macro_p:w \ETC.}
{retaining \token_if_macro_p:N=\long macro:#1->\exp_after:wN \__token_if_macro_p:w \ETC.}
{retaining \token_if_eq_charcode:NNTF=\long macro:#1#2->\if_charcode:w \exp_not:N #1\ETC.}
{retaining \token_if_eq_charcode:NNF=\long macro:#1#2->\if_charcode:w \exp_not:N #1\ETC.}
{retaining \token_if_eq_charcode:NNT=\long macro:#1#2->\if_charcode:w \exp_not:N #1\ETC.}
{retaining \token_if_eq_charcode_p:NN=\long macro:#1#2->\if_charcode:w \exp_not:N #1\ETC.}
{retaining \token_if_eq_catcode:NNTF=\long macro:#1#2->\if_catcode:w \exp_not:N #1\exp_not:N \ETC.}
{retaining \token_if_eq_catcode:NNF=\long macro:#1#2->\if_catcode:w \exp_not:N #1\exp_not:N \ETC.}
{retaining \token_if_eq_catcode:NNT=\long macro:#1#2->\if_catcode:w \exp_not:N #1\exp_not:N \ETC.}
{retaining \token_if_eq_catcode_p:NN=\long macro:#1#2->\if_catcode:w \exp_not:N #1\exp_not:N \ETC.}
{retaining \token_if_eq_meaning:NNTF=\long macro:#1#2->\if_meaning:w #1#2\__prg_TF_true:w \ETC.}
{retaining \token_if_eq_meaning:NNF=\long macro:#1#2->\if_meaning:w #1#2\__prg_F_true:w \ETC.}
{retaining \token_if_eq_meaning:NNT=\long macro:#1#2->\if_meaning:w #1#2\__prg_T_true:w \ETC.}
{retaining \token_if_eq_meaning_p:NN=\long macro:#1#2->\if_meaning:w #1#2\__prg_p_true:w \ETC.}
{retaining \token_if_active:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_active_tl \ETC.}
{retaining \token_if_active:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_active_tl \ETC.}
{retaining \token_if_active:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_active_tl \ETC.}
{retaining \token_if_active_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_active_tl \ETC.}
{retaining \token_if_other:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_other_token \ETC.}
{retaining \token_if_other:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_other_token \ETC.}
{retaining \token_if_other:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_other_token \ETC.}
{retaining \token_if_other_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_other_token \ETC.}
{retaining \token_if_letter:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_letter_token \ETC.}
{retaining \token_if_letter:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_letter_token \ETC.}
{retaining \token_if_letter:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_letter_token \ETC.}
{retaining \token_if_letter_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_catcode_letter_token \ETC.}
{retaining \token_if_space:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_space_token \ETC.}
{retaining \token_if_space:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_space_token \ETC.}
{retaining \token_if_space:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_space_token \ETC.}
{retaining \token_if_space_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_space_token \ETC.}
{retaining \token_if_math_subscript:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_subscript_token \ETC.}
{retaining \token_if_math_subscript:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_subscript_token \ETC.}
{retaining \token_if_math_subscript:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_subscript_token \ETC.}
{retaining \token_if_math_subscript_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_subscript_token \ETC.}
{retaining \token_if_math_superscript:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_superscript_token \ETC.}
{retaining \token_if_math_superscript:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_superscript_token \ETC.}
{retaining \token_if_math_superscript:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_superscript_token \ETC.}
{retaining \token_if_math_superscript_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_superscript_token \ETC.}
{retaining \token_if_alignment:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_alignment_token \ETC.}
{retaining \token_if_alignment:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_alignment_token \ETC.}
{retaining \token_if_alignment:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_alignment_token \ETC.}
{retaining \token_if_alignment_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_alignment_token \ETC.}
{retaining \token_if_math_toggle:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_toggle_token \ETC.}
{retaining \token_if_math_toggle:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_toggle_token \ETC.}
{retaining \token_if_math_toggle:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_toggle_token \ETC.}
{retaining \token_if_math_toggle_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_math_toggle_token \ETC.}
{retaining \token_if_group_end:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_end_token \ETC.}
{retaining \token_if_group_end:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_end_token \ETC.}
{retaining \token_if_group_end:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_end_token \ETC.}
{retaining \token_if_group_end_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_end_token \ETC.}
{retaining \token_if_group_begin:NTF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_begin_token \ETC.}
{retaining \token_if_group_begin:NF=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_begin_token \ETC.}
{retaining \token_if_group_begin:NT=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_begin_token \ETC.}
{retaining \token_if_group_begin_p:N=\long macro:#1->\if_catcode:w \exp_not:N #1\c_group_begin_token \ETC.}
{retaining \char_gset_active_eq:nc=\protected\long macro:->\exp_args:Nnc \char_gset_active_eq:nN }
{retaining \char_set_active_eq:nc=\protected\long macro:->\exp_args:Nnc \char_set_active_eq:nN }
{retaining \char_gset_active_eq:Nc=\protected\long macro:->\exp_args:NNc \char_gset_active_eq:NN }
{retaining \char_set_active_eq:Nc=\protected\long macro:->\exp_args:NNc \char_set_active_eq:NN }
{restoring \l_char_active_seq=macro:->\s__seq }
{restoring \l_char_special_seq=macro:->\s__seq }
{restoring \l__seq_internal_a_tl=macro:->}
{retaining \__char_quark_if_no_value:NTF=\long macro:#1->\if_meaning:w \q__char_no_value \ETC.}
{retaining \clist_log:c=\protected\long macro:->\exp_args:Nc \clist_log:N }
{retaining \clist_show:c=\protected\long macro:->\exp_args:Nc \clist_show:N }
{retaining \clist_rand_item:c=\long macro:->\exp_args:Nc \clist_rand_item:N }
{retaining \clist_item:en=\long macro:->\exp_args:Ne \clist_item:nn }
{retaining \clist_item:cn=\long macro:->\exp_args:Nc \clist_item:Nn }
{retaining \__clist_item:ffnN=\long macro:->\exp_args:Nff \__clist_item:nnnN }
{retaining \__clist_item:ffoN=\long macro:->\exp_args:Nffo \__clist_item:nnnN }
{retaining \clist_use:cn=\long macro:->\exp_args:Nc \clist_use:Nn }
{retaining \clist_use:cnnn=\long macro:->\exp_args:Nc \clist_use:Nnnn }
{retaining \clist_count:e=\long macro:->\exp_args:Ne \clist_count:n }
{restoring \__clist_tmp:w=\protected\long macro:->}
{retaining \clist_count:c=\long macro:->\exp_args:Nc \clist_count:N }
{retaining \clist_map_tokens:cn=\long macro:->\exp_args:Nc \clist_map_tokens:Nn }
{retaining \clist_map_variable:cNn=\protected\long macro:->\exp_args:Nc \clist_map_variable:NNn }
{retaining \clist_map_inline:cn=\protected\long macro:->\exp_args:Nc \clist_map_inline:Nn }
{retaining \clist_map_function:eN=\long macro:->\exp_args:Ne \clist_map_function:nN }
{retaining \clist_map_function:cN=\long macro:->\exp_args:Nc \clist_map_function:NN }
{retaining \clist_if_in:noTF=\protected\long macro:->\exp_args:Nno \clist_if_in:nnTF }
{retaining \clist_if_in:nVTF=\protected\long macro:->\exp_args:NnV \clist_if_in:nnTF }
{retaining \clist_if_in:noF=\protected\long macro:->\exp_args:Nno \clist_if_in:nnF }
{retaining \clist_if_in:nVF=\protected\long macro:->\exp_args:NnV \clist_if_in:nnF }
{retaining \clist_if_in:noT=\protected\long macro:->\exp_args:Nno \clist_if_in:nnT }
{retaining \clist_if_in:nVT=\protected\long macro:->\exp_args:NnV \clist_if_in:nnT }
{retaining \clist_if_in:coTF=\protected\long macro:->\exp_args:Nco \clist_if_in:NnTF }
{retaining \clist_if_in:cVTF=\protected\long macro:->\exp_args:NcV \clist_if_in:NnTF }
{retaining \clist_if_in:cnTF=\protected\long macro:->\exp_args:Nc \clist_if_in:NnTF }
{retaining \clist_if_in:NoTF=\protected\long macro:->\exp_args:NNo \clist_if_in:NnTF }
{retaining \clist_if_in:NVTF=\protected\long macro:->\exp_args:NNV \clist_if_in:NnTF }
{retaining \clist_if_in:coF=\protected\long macro:->\exp_args:Nco \clist_if_in:NnF }
{retaining \clist_if_in:cVF=\protected\long macro:->\exp_args:NcV \clist_if_in:NnF }
{retaining \clist_if_in:cnF=\protected\long macro:->\exp_args:Nc \clist_if_in:NnF }
{retaining \clist_if_in:NoF=\protected\long macro:->\exp_args:NNo \clist_if_in:NnF }
{retaining \clist_if_in:NVF=\protected\long macro:->\exp_args:NNV \clist_if_in:NnF }
{retaining \clist_if_in:coT=\protected\long macro:->\exp_args:Nco \clist_if_in:NnT }
{retaining \clist_if_in:cVT=\protected\long macro:->\exp_args:NcV \clist_if_in:NnT }
{retaining \clist_if_in:cnT=\protected\long macro:->\exp_args:Nc \clist_if_in:NnT }
{retaining \clist_if_in:NoT=\protected\long macro:->\exp_args:NNo \clist_if_in:NnT }
{retaining \clist_if_in:NVT=\protected\long macro:->\exp_args:NNV \clist_if_in:NnT }
{retaining \clist_if_in:nnTF=\protected\long macro:#1#2->\clist_set:Nn \l__clist_internal_clist \ETC.}
{retaining \clist_if_in:nnF=\protected\long macro:#1#2->\clist_set:Nn \l__clist_internal_clist \ETC.}
{retaining \clist_if_in:nnT=\protected\long macro:#1#2->\clist_set:Nn \l__clist_internal_clist \ETC.}
{retaining \clist_if_in:NnTF=\protected\long macro:#1#2->\exp_args:No \__clist_if_in_return:nnN \ETC.}
{retaining \clist_if_in:NnF=\protected\long macro:#1#2->\exp_args:No \__clist_if_in_return:nnN \ETC.}
{retaining \clist_if_in:NnT=\protected\long macro:#1#2->\exp_args:No \__clist_if_in_return:nnN \ETC.}
{retaining \clist_if_empty:nTF=\long macro:#1->\__clist_if_empty_n:w ?#1,\s__clist_mark \ETC.}
{retaining \clist_if_empty:nF=\long macro:#1->\__clist_if_empty_n:w ?#1,\s__clist_mark \ETC.}
{retaining \clist_if_empty:nT=\long macro:#1->\__clist_if_empty_n:w ?#1,\s__clist_mark \ETC.}
{retaining \clist_if_empty_p:n=\long macro:#1->\__clist_if_empty_n:w ?#1,\s__clist_mark \ETC.}
{retaining \clist_if_empty:cTF=\long macro:->\exp_args:Nc \tl_if_empty:NTF }
{retaining \clist_if_empty:cF=\long macro:->\exp_args:Nc \tl_if_empty:NF }
{retaining \clist_if_empty:cT=\long macro:->\exp_args:Nc \tl_if_empty:NT }
{retaining \clist_if_empty_p:c=\long macro:->\exp_args:Nc \tl_if_empty_p:N }
{retaining \clist_if_empty:NTF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \ETC.}
{retaining \clist_if_empty:NF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \ETC.}
{retaining \clist_if_empty:NT=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_T_true:w \ETC.}
{retaining \clist_if_empty_p:N=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \ETC.}
{retaining \clist_greverse:c=\protected\long macro:->\exp_args:Nc \clist_greverse:N }
{retaining \clist_reverse:c=\protected\long macro:->\exp_args:Nc \clist_reverse:N }
{retaining \clist_gremove_all:cV=\protected\long macro:->\exp_args:NcV \clist_gremove_all:Nn }
{retaining \clist_gremove_all:NV=\protected\long macro:->\exp_args:NNV \clist_gremove_all:Nn }
{retaining \clist_gremove_all:cn=\protected\long macro:->\exp_args:Nc \clist_gremove_all:Nn }
{retaining \clist_remove_all:cV=\protected\long macro:->\exp_args:NcV \clist_remove_all:Nn }
{retaining \clist_remove_all:NV=\protected\long macro:->\exp_args:NNV \clist_remove_all:Nn }
{retaining \clist_remove_all:cn=\protected\long macro:->\exp_args:Nc \clist_remove_all:Nn }
{retaining \clist_gremove_duplicates:c=\protected\long macro:->\exp_args:Nc \clist_gremove_duplicates:N }
{retaining \clist_remove_duplicates:c=\protected\long macro:->\exp_args:Nc \clist_remove_duplicates:N }
{retaining \clist_gpush:cx=\protected\long macro:->\exp_args:Ncx \clist_gpush:Nn }
{retaining \clist_gpush:co=\protected\long macro:->\exp_args:Nco \clist_gpush:Nn }
{retaining \clist_gpush:cV=\protected\long macro:->\exp_args:NcV \clist_gpush:Nn }
{retaining \clist_gpush:cn=\protected\long macro:->\exp_args:Nc \clist_gpush:Nn }
{retaining \clist_gpush:Nx=\protected\long macro:->\exp_args:NNx \clist_gpush:Nn }
{retaining \clist_gpush:No=\protected\long macro:->\exp_args:NNo \clist_gpush:Nn }
{retaining \clist_gpush:NV=\protected\long macro:->\exp_args:NNV \clist_gpush:Nn }
{retaining \clist_push:cx=\protected\long macro:->\exp_args:Ncx \clist_push:Nn }
{retaining \clist_push:co=\protected\long macro:->\exp_args:Nco \clist_push:Nn }
{retaining \clist_push:cV=\protected\long macro:->\exp_args:NcV \clist_push:Nn }
{retaining \clist_push:cn=\protected\long macro:->\exp_args:Nc \clist_push:Nn }
{retaining \clist_push:Nx=\protected\long macro:->\exp_args:NNx \clist_push:Nn }
{retaining \clist_push:No=\protected\long macro:->\exp_args:NNo \clist_push:Nn }
{retaining \clist_push:NV=\protected\long macro:->\exp_args:NNV \clist_push:Nn }
{retaining \clist_gpop:cNTF=\protected\long macro:->\exp_args:Nc \clist_gpop:NNTF }
{retaining \clist_gpop:cNF=\protected\long macro:->\exp_args:Nc \clist_gpop:NNF }
{retaining \clist_gpop:cNT=\protected\long macro:->\exp_args:Nc \clist_gpop:NNT }
{retaining \clist_pop:cNTF=\protected\long macro:->\exp_args:Nc \clist_pop:NNTF }
{retaining \clist_pop:cNF=\protected\long macro:->\exp_args:Nc \clist_pop:NNF }
{retaining \clist_pop:cNT=\protected\long macro:->\exp_args:Nc \clist_pop:NNT }
{retaining \clist_gpop:NNTF=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_gset:Nx \ETC.}
{retaining \clist_gpop:NNF=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_gset:Nx \ETC.}
{retaining \clist_gpop:NNT=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_gset:Nx \ETC.}
{retaining \clist_pop:NNTF=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_set:Nx \ETC.}
{retaining \clist_pop:NNF=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_set:Nx \ETC.}
{retaining \clist_pop:NNT=\protected\long macro:#1#2->\__clist_pop_TF:NNN \__kernel_tl_set:Nx \ETC.}
{retaining \clist_get:cNTF=\protected\long macro:->\exp_args:Nc \clist_get:NNTF }
{retaining \clist_get:cNF=\protected\long macro:->\exp_args:Nc \clist_get:NNF }
{retaining \clist_get:cNT=\protected\long macro:->\exp_args:Nc \clist_get:NNT }
{retaining \clist_get:NNTF=\protected\long macro:#1#2->\if_meaning:w #1\c_empty_clist \ETC.}
{retaining \clist_get:NNF=\protected\long macro:#1#2->\if_meaning:w #1\c_empty_clist \ETC.}
{retaining \clist_get:NNT=\protected\long macro:#1#2->\if_meaning:w #1\c_empty_clist \ETC.}
{retaining \clist_gpop:cN=\protected\long macro:->\exp_args:Nc \clist_gpop:NN }
{retaining \clist_pop:cN=\protected\long macro:->\exp_args:Nc \clist_pop:NN }
{retaining \clist_get:cN=\protected\long macro:->\exp_args:Nc \clist_get:NN }
{retaining \clist_gput_right:cx=\protected\long macro:->\exp_args:Ncx \clist_gput_right:Nn }
{retaining \clist_gput_right:co=\protected\long macro:->\exp_args:Nco \clist_gput_right:Nn }
{retaining \clist_gput_right:Nx=\protected\long macro:->\exp_args:NNx \clist_gput_right:Nn }
{retaining \clist_gput_right:No=\protected\long macro:->\exp_args:NNo \clist_gput_right:Nn }
{retaining \clist_gput_right:ce=\protected\long macro:->\exp_args:Nce \clist_gput_right:Nn }
{retaining \clist_gput_right:cv=\protected\long macro:->\exp_args:Ncv \clist_gput_right:Nn }
{retaining \clist_gput_right:cV=\protected\long macro:->\exp_args:NcV \clist_gput_right:Nn }
{retaining \clist_gput_right:cn=\protected\long macro:->\exp_args:Nc \clist_gput_right:Nn }
{retaining \clist_gput_right:Ne=\protected\long macro:->\exp_args:NNe \clist_gput_right:Nn }
{retaining \clist_gput_right:Nv=\protected\long macro:->\exp_args:NNv \clist_gput_right:Nn }
{retaining \clist_gput_right:NV=\protected\long macro:->\exp_args:NNV \clist_gput_right:Nn }
{retaining \clist_put_right:cx=\protected\long macro:->\exp_args:Ncx \clist_put_right:Nn }
{retaining \clist_put_right:co=\protected\long macro:->\exp_args:Nco \clist_put_right:Nn }
{retaining \clist_put_right:Nx=\protected\long macro:->\exp_args:NNx \clist_put_right:Nn }
{retaining \clist_put_right:No=\protected\long macro:->\exp_args:NNo \clist_put_right:Nn }
{retaining \clist_put_right:ce=\protected\long macro:->\exp_args:Nce \clist_put_right:Nn }
{retaining \clist_put_right:cv=\protected\long macro:->\exp_args:Ncv \clist_put_right:Nn }
{retaining \clist_put_right:cV=\protected\long macro:->\exp_args:NcV \clist_put_right:Nn }
{retaining \clist_put_right:cn=\protected\long macro:->\exp_args:Nc \clist_put_right:Nn }
{retaining \clist_put_right:Ne=\protected\long macro:->\exp_args:NNe \clist_put_right:Nn }
{retaining \clist_put_right:Nv=\protected\long macro:->\exp_args:NNv \clist_put_right:Nn }
{retaining \clist_put_right:NV=\protected\long macro:->\exp_args:NNV \clist_put_right:Nn }
{retaining \clist_gput_left:cx=\protected\long macro:->\exp_args:Ncx \clist_gput_left:Nn }
{retaining \clist_gput_left:co=\protected\long macro:->\exp_args:Nco \clist_gput_left:Nn }
{retaining \clist_gput_left:Nx=\protected\long macro:->\exp_args:NNx \clist_gput_left:Nn }
{retaining \clist_gput_left:No=\protected\long macro:->\exp_args:NNo \clist_gput_left:Nn }
{retaining \clist_gput_left:ce=\protected\long macro:->\exp_args:Nce \clist_gput_left:Nn }
{retaining \clist_gput_left:cv=\protected\long macro:->\exp_args:Ncv \clist_gput_left:Nn }
{retaining \clist_gput_left:cV=\protected\long macro:->\exp_args:NcV \clist_gput_left:Nn }
{retaining \clist_gput_left:cn=\protected\long macro:->\exp_args:Nc \clist_gput_left:Nn }
{retaining \clist_gput_left:Ne=\protected\long macro:->\exp_args:NNe \clist_gput_left:Nn }
{retaining \clist_gput_left:Nv=\protected\long macro:->\exp_args:NNv \clist_gput_left:Nn }
{retaining \clist_gput_left:NV=\protected\long macro:->\exp_args:NNV \clist_gput_left:Nn }
{retaining \clist_put_left:cx=\protected\long macro:->\exp_args:Ncx \clist_put_left:Nn }
{retaining \clist_put_left:co=\protected\long macro:->\exp_args:Nco \clist_put_left:Nn }
{retaining \clist_put_left:Nx=\protected\long macro:->\exp_args:NNx \clist_put_left:Nn }
{retaining \clist_put_left:No=\protected\long macro:->\exp_args:NNo \clist_put_left:Nn }
{retaining \clist_put_left:ce=\protected\long macro:->\exp_args:Nce \clist_put_left:Nn }
{retaining \clist_put_left:cv=\protected\long macro:->\exp_args:Ncv \clist_put_left:Nn }
{retaining \clist_put_left:cV=\protected\long macro:->\exp_args:NcV \clist_put_left:Nn }
{retaining \clist_put_left:cn=\protected\long macro:->\exp_args:Nc \clist_put_left:Nn }
{retaining \clist_put_left:Ne=\protected\long macro:->\exp_args:NNe \clist_put_left:Nn }
{retaining \clist_put_left:Nv=\protected\long macro:->\exp_args:NNv \clist_put_left:Nn }
{retaining \clist_put_left:NV=\protected\long macro:->\exp_args:NNV \clist_put_left:Nn }
{retaining \clist_gset:cx=\protected\long macro:->\exp_args:Ncx \clist_gset:Nn }
{retaining \clist_gset:co=\protected\long macro:->\exp_args:Nco \clist_gset:Nn }
{retaining \clist_gset:Nx=\protected\long macro:->\exp_args:NNx \clist_gset:Nn }
{retaining \clist_gset:No=\protected\long macro:->\exp_args:NNo \clist_gset:Nn }
{retaining \clist_gset:ce=\protected\long macro:->\exp_args:Nce \clist_gset:Nn }
{retaining \clist_gset:cV=\protected\long macro:->\exp_args:NcV \clist_gset:Nn }
{retaining \clist_gset:cn=\protected\long macro:->\exp_args:Nc \clist_gset:Nn }
{retaining \clist_gset:Ne=\protected\long macro:->\exp_args:NNe \clist_gset:Nn }
{retaining \clist_gset:NV=\protected\long macro:->\exp_args:NNV \clist_gset:Nn }
{retaining \clist_set:cx=\protected\long macro:->\exp_args:Ncx \clist_set:Nn }
{retaining \clist_set:co=\protected\long macro:->\exp_args:Nco \clist_set:Nn }
{retaining \clist_set:Nx=\protected\long macro:->\exp_args:NNx \clist_set:Nn }
{retaining \clist_set:No=\protected\long macro:->\exp_args:NNo \clist_set:Nn }
{retaining \clist_set:ce=\protected\long macro:->\exp_args:Nce \clist_set:Nn }
{retaining \clist_set:cV=\protected\long macro:->\exp_args:NcV \clist_set:Nn }
{retaining \clist_set:cn=\protected\long macro:->\exp_args:Nc \clist_set:Nn }
{retaining \clist_set:Ne=\protected\long macro:->\exp_args:NNe \clist_set:Nn }
{retaining \clist_set:NV=\protected\long macro:->\exp_args:NNV \clist_set:Nn }
{retaining \clist_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \clist_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \clist_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \clist_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \clist_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \clist_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \clist_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \clist_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \clist_gconcat:ccc=\protected\long macro:->\exp_args:Nccc \clist_gconcat:NNN }
{retaining \clist_concat:ccc=\protected\long macro:->\exp_args:Nccc \clist_concat:NNN }
{retaining \clist_gset_from_seq:cc=\protected\long macro:->\exp_args:Ncc \clist_gset_from_seq:NN }
{retaining \clist_gset_from_seq:cN=\protected\long macro:->\exp_args:Nc \clist_gset_from_seq:NN }
{retaining \clist_gset_from_seq:Nc=\protected\long macro:->\exp_args:NNc \clist_gset_from_seq:NN }
{retaining \clist_set_from_seq:cc=\protected\long macro:->\exp_args:Ncc \clist_set_from_seq:NN }
{retaining \clist_set_from_seq:cN=\protected\long macro:->\exp_args:Nc \clist_set_from_seq:NN }
{retaining \clist_set_from_seq:Nc=\protected\long macro:->\exp_args:NNc \clist_set_from_seq:NN }
{retaining \clist_const:cx=\protected\long macro:->\exp_args:Ncx \clist_const:Nn }
{retaining \clist_const:Nx=\protected\long macro:->\exp_args:NNx \clist_const:Nn }
{retaining \clist_const:ce=\protected\long macro:->\exp_args:Nce \clist_const:Nn }
{retaining \clist_const:cn=\protected\long macro:->\exp_args:Nc \clist_const:Nn }
{retaining \clist_const:Ne=\protected\long macro:->\exp_args:NNe \clist_const:Nn }
{retaining \__clist_if_wrap:nTF=\long macro:#1->\tl_if_empty:oTF {\__clist_if_wrap:w \ETC.}
{retaining \sys_if_timer_exist_p:=\char"1}
{retaining \sys_if_timer_exist:TF=\long macro:#1#2->#1}
{retaining \sys_if_timer_exist:F=\long macro:#1->}
{retaining \sys_if_timer_exist:T=\long macro:#1->#1}
{retaining \sys_shell_shipout:x=\protected\long macro:->\exp_args:Nx \sys_shell_shipout:n }
{retaining \sys_shell_shipout:e=\protected\long macro:->\exp_args:Ne \sys_shell_shipout:n }
{retaining \sys_shell_now:x=\protected\long macro:->\exp_args:Nx \sys_shell_now:n }
{retaining \sys_shell_now:e=\protected\long macro:->\exp_args:Ne \sys_shell_now:n }
{retaining \sys_get_shell:nnNTF=\protected\long macro:#1#2#3->\sys_if_shell:TF {\exp_args:No \ETC.}
{retaining \sys_get_shell:nnNF=\protected\long macro:#1#2#3->\sys_if_shell:TF {\exp_args:No \ETC.}
{retaining \sys_get_shell:nnNT=\protected\long macro:#1#2#3->\sys_if_shell:TF {\exp_args:No \ETC.}
{retaining \sys_if_engine_xetex_p:=\char"0}
{retaining \sys_if_engine_xetex:TF=\long macro:#1#2->#2}
{retaining \sys_if_engine_xetex:F=\long macro:#1->#1}
{retaining \sys_if_engine_xetex:T=\long macro:#1->}
{retaining \sys_if_engine_uptex_p:=\char"0}
{retaining \sys_if_engine_uptex:TF=\long macro:#1#2->#2}
{retaining \sys_if_engine_uptex:F=\long macro:#1->#1}
{retaining \sys_if_engine_uptex:T=\long macro:#1->}
{retaining \sys_if_engine_ptex_p:=\char"0}
{retaining \sys_if_engine_ptex:TF=\long macro:#1#2->#2}
{retaining \sys_if_engine_ptex:F=\long macro:#1->#1}
{retaining \sys_if_engine_ptex:T=\long macro:#1->}
{retaining \sys_if_engine_pdftex_p:=\char"0}
{retaining \sys_if_engine_pdftex:TF=\long macro:#1#2->#2}
{retaining \sys_if_engine_pdftex:F=\long macro:#1->#1}
{retaining \sys_if_engine_pdftex:T=\long macro:#1->}
{retaining \sys_if_engine_luatex_p:=\char"1}
{retaining \sys_if_engine_luatex:TF=\long macro:#1#2->#1}
{retaining \sys_if_engine_luatex:F=\long macro:#1->}
{retaining \sys_if_engine_luatex:T=\long macro:#1->#1}
{retaining \__tl_map_1:w=\protected\long macro:#1->\use:e {\__kernel_patch_deprecation:nnNNpn \ETC.}
{retaining \mode_if_math:TF=\long macro:->\if_mode_math: \__prg_TF_true:w \ETC.}
{retaining \mode_if_math:F=\long macro:->\if_mode_math: \__prg_F_true:w \fi: \ETC.}
{retaining \mode_if_math:T=\long macro:->\if_mode_math: \__prg_T_true:w \fi: \ETC.}
{retaining \mode_if_math_p:=\long macro:->\if_mode_math: \__prg_p_true:w \fi: \ETC.}
{retaining \mode_if_inner:TF=\long macro:->\if_mode_inner: \__prg_TF_true:w \ETC.}
{retaining \mode_if_inner:F=\long macro:->\if_mode_inner: \__prg_F_true:w \ETC.}
{retaining \mode_if_inner:T=\long macro:->\if_mode_inner: \__prg_T_true:w \ETC.}
{retaining \mode_if_inner_p:=\long macro:->\if_mode_inner: \__prg_p_true:w \ETC.}
{retaining \mode_if_horizontal:TF=\long macro:->\if_mode_horizontal: \__prg_TF_true:w \ETC.}
{retaining \mode_if_horizontal:F=\long macro:->\if_mode_horizontal: \__prg_F_true:w \ETC.}
{retaining \mode_if_horizontal:T=\long macro:->\if_mode_horizontal: \__prg_T_true:w \ETC.}
{retaining \mode_if_horizontal_p:=\long macro:->\if_mode_horizontal: \__prg_p_true:w \ETC.}
{retaining \mode_if_vertical:TF=\long macro:->\if_mode_vertical: \__prg_TF_true:w \ETC.}
{retaining \mode_if_vertical:F=\long macro:->\if_mode_vertical: \__prg_F_true:w \ETC.}
{retaining \mode_if_vertical:T=\long macro:->\if_mode_vertical: \__prg_T_true:w \ETC.}
{retaining \mode_if_vertical_p:=\long macro:->\if_mode_vertical: \__prg_p_true:w \ETC.}
{retaining \__prg_replicate_first_9:n=\long macro:#1->\exp_end: #1#1#1#1#1#1#1#1#1}
{retaining \__prg_replicate_first_8:n=\long macro:#1->\exp_end: #1#1#1#1#1#1#1#1}
{retaining \__prg_replicate_first_7:n=\long macro:#1->\exp_end: #1#1#1#1#1#1#1}
{retaining \__prg_replicate_first_6:n=\long macro:#1->\exp_end: #1#1#1#1#1#1}
{retaining \__prg_replicate_first_5:n=\long macro:#1->\exp_end: #1#1#1#1#1}
{retaining \__prg_replicate_first_4:n=\long macro:#1->\exp_end: #1#1#1#1}
{retaining \__prg_replicate_first_3:n=\long macro:#1->\exp_end: #1#1#1}
{retaining \__prg_replicate_first_2:n=\long macro:#1->\exp_end: #1#1}
{retaining \__prg_replicate_first_1:n=\long macro:#1->\exp_end: #1}
{retaining \__prg_replicate_first_0:n=\long macro:#1->\exp_end: }
{retaining \__prg_replicate_first_-:n=\long macro:#1->\exp_end: \msg_expandable_error:nn \ETC.}
{retaining \__prg_replicate_9:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_8:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_7:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_6:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_5:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_4:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_3:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_2:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_1:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \__prg_replicate_0:n=\long macro:#1->\cs_end: {#1#1#1#1#1#1#1#1#1#1\ETC.}
{retaining \bool_do_until:cn=\long macro:->\exp_args:Nc \bool_do_until:Nn }
{retaining \bool_do_while:cn=\long macro:->\exp_args:Nc \bool_do_while:Nn }
{retaining \bool_until_do:cn=\long macro:->\exp_args:Nc \bool_until_do:Nn }
{retaining \bool_while_do:cn=\long macro:->\exp_args:Nc \bool_while_do:Nn }
{retaining \bool_xor:nnTF=\long macro:#1#2->\bool_if:nT {#1}\reverse_if:N \ETC.}
{retaining \bool_xor:nnF=\long macro:#1#2->\bool_if:nT {#1}\reverse_if:N \ETC.}
{retaining \bool_xor:nnT=\long macro:#1#2->\bool_if:nT {#1}\reverse_if:N \ETC.}
{retaining \bool_xor_p:nn=\long macro:#1#2->\bool_if:nT {#1}\reverse_if:N \ETC.}
{retaining \bool_lazy_or:nnTF=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_or:nnF=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_or:nnT=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_or_p:nn=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_any:nTF=\long macro:#1->\if_predicate:w \bool_lazy_any_p:n \ETC.}
{retaining \bool_lazy_any:nF=\long macro:#1->\if_predicate:w \bool_lazy_any_p:n \ETC.}
{retaining \bool_lazy_any:nT=\long macro:#1->\if_predicate:w \bool_lazy_any_p:n \ETC.}
{retaining \bool_lazy_and:nnTF=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_and:nnF=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_and:nnT=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_and_p:nn=\long macro:#1#2->\if_predicate:w \bool_if:nTF \ETC.}
{retaining \bool_lazy_all:nTF=\long macro:#1->\if_predicate:w \bool_lazy_all_p:n \ETC.}
{retaining \bool_lazy_all:nF=\long macro:#1->\if_predicate:w \bool_lazy_all_p:n \ETC.}
{retaining \bool_lazy_all:nT=\long macro:#1->\if_predicate:w \bool_lazy_all_p:n \ETC.}
{retaining \__bool_|_2:=\long macro:|->\__bool_get_next:NN \use_iii:nnnn }
{retaining \__bool_|_1:=\long macro:|->\__bool_get_next:NN \use_iii:nnnn }
{retaining \__bool_|_0:=\long macro:|->\__bool_get_next:NN \use_i:nnnn }
{retaining \__bool_&_2:=\long macro:&->\__bool_get_next:NN \use_iii:nnnn }
{retaining \__bool_&_1:=\long macro:&->\__bool_get_next:NN \use_i:nnnn }
{retaining \__bool_&_0:=\long macro:&->\__bool_get_next:NN \use_iv:nnnn }
{retaining \__bool_)_2:=\long macro:->\c_true_bool }
{retaining \__bool_)_1:=\long macro:->\c_true_bool }
{retaining \__bool_)_0:=\long macro:->\c_false_bool }
{retaining \__bool_p:Nw=\long macro:#1->\exp_after:wN \__bool_choose:NNN \ETC.}
{retaining \__bool_(:Nw=\long macro:#1#2->\exp_after:wN \__bool_choose:NNN \ETC.}
{retaining \__bool_!:Nw=\long macro:#1#2->\exp_after:wN \__bool_get_next:NN \ETC.}
{retaining \bool_if:nTF=\long macro:#1->\if_predicate:w \bool_if_p:n {\ETC.}
{retaining \bool_if:nF=\long macro:#1->\if_predicate:w \bool_if_p:n {\ETC.}
{retaining \bool_if:nT=\long macro:#1->\if_predicate:w \bool_if_p:n {\ETC.}
{retaining \bool_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bool_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bool_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bool_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \bool_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bool_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bool_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bool_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \bool_log:c=\protected\long macro:->\exp_args:Nc \bool_log:N }
{retaining \bool_show:c=\protected\long macro:->\exp_args:Nc \bool_show:N }
{retaining \bool_to_str:c=\long macro:->\exp_args:Nc \bool_to_str:N }
{retaining \bool_if:cTF=\long macro:->\exp_args:Nc \bool_if:NTF }
{retaining \bool_if:cF=\long macro:->\exp_args:Nc \bool_if:NF }
{retaining \bool_if:cT=\long macro:->\exp_args:Nc \bool_if:NT }
{retaining \bool_if_p:c=\long macro:->\exp_args:Nc \bool_if_p:N }
{retaining \bool_if:NTF=\long macro:#1->\if_bool:N #1\__prg_TF_true:w \ETC.}
{retaining \bool_if:NF=\long macro:#1->\if_bool:N #1\__prg_F_true:w \fi: \ETC.}
{retaining \bool_if:NT=\long macro:#1->\if_bool:N #1\__prg_T_true:w \fi: \ETC.}
{retaining \bool_if_p:N=\long macro:#1->\if_bool:N #1\__prg_p_true:w \fi: \ETC.}
{retaining \__bool_quark_recursion_tail:w=\long macro:#1\q__bool_recursion_tail #2?#3?\ETC.}
{retaining \bool_gset_inverse:c=\protected\long macro:->\exp_args:Nc \bool_gset_inverse:N }
{retaining \bool_set_inverse:c=\protected\long macro:->\exp_args:Nc \bool_set_inverse:N }
{retaining \bool_gset:cn=\protected\long macro:->\exp_args:Nc \bool_gset:Nn }
{retaining \bool_set:cn=\protected\long macro:->\exp_args:Nc \bool_set:Nn }
{retaining \bool_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \bool_gset_eq:NN }
{retaining \bool_gset_eq:cN=\protected\long macro:->\exp_args:Nc \bool_gset_eq:NN }
{retaining \bool_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \bool_gset_eq:NN }
{retaining \bool_set_eq:cc=\protected\long macro:->\exp_args:Ncc \bool_set_eq:NN }
{retaining \bool_set_eq:cN=\protected\long macro:->\exp_args:Nc \bool_set_eq:NN }
{retaining \bool_set_eq:Nc=\protected\long macro:->\exp_args:NNc \bool_set_eq:NN }
{retaining \bool_gset_false:c=\protected\long macro:->\exp_args:Nc \bool_gset_false:N }
{retaining \bool_gset_true:c=\protected\long macro:->\exp_args:Nc \bool_gset_true:N }
{retaining \bool_set_false:c=\protected\long macro:->\exp_args:Nc \bool_set_false:N }
{retaining \bool_set_true:c=\protected\long macro:->\exp_args:Nc \bool_set_true:N }
{retaining \bool_const:cn=\protected\long macro:->\exp_args:Nc \bool_const:Nn }
{retaining \bool_new:c=\protected\long macro:->\exp_args:Nc \bool_new:N }
{retaining \flag_ensure_raised:c=\long macro:->\exp_args:Nc \flag_ensure_raised:N }
{retaining \flag_raise:c=\long macro:->\exp_args:Nc \flag_raise:N }
{retaining \flag_height:c=\long macro:->\exp_args:Nc \flag_height:N }
{retaining \flag_if_raised:cTF=\long macro:->\exp_args:Nc \flag_if_raised:NTF }
{retaining \flag_if_raised:cF=\long macro:->\exp_args:Nc \flag_if_raised:NF }
{retaining \flag_if_raised:cT=\long macro:->\exp_args:Nc \flag_if_raised:NT }
{retaining \flag_if_raised_p:c=\long macro:->\exp_args:Nc \flag_if_raised_p:N }
{retaining \flag_if_raised:NTF=\long macro:#1->\if_cs_exist:w #10\cs_end: \__prg_TF_true:w \ETC.}
{retaining \flag_if_raised:NF=\long macro:#1->\if_cs_exist:w #10\cs_end: \__prg_F_true:w \ETC.}
{retaining \flag_if_raised:NT=\long macro:#1->\if_cs_exist:w #10\cs_end: \__prg_T_true:w \ETC.}
{retaining \flag_if_raised_p:N=\long macro:#1->\if_cs_exist:w #10\cs_end: \__prg_p_true:w \ETC.}
{retaining \flag_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \flag_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \flag_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \flag_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \flag_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \flag_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \flag_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \flag_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \flag_log:c=\protected\long macro:->\exp_args:Nc \flag_log:N }
{retaining \flag_show:c=\protected\long macro:->\exp_args:Nc \flag_show:N }
{retaining \flag_clear_new:c=\protected\long macro:->\exp_args:Nc \flag_clear_new:N }
{retaining \flag_clear:c=\protected\long macro:->\exp_args:Nc \flag_clear:N }
{retaining \flag_new:c=\protected\long macro:->\exp_args:Nc \flag_new:N }
{retaining \int_log:c=\protected\long macro:->\exp_args:Nc \int_log:N }
{retaining \int_show:c=\protected\long macro:->\exp_args:Nc \int_show:N }
{retaining \c__int_from_roman_M_int=\char"3E8}
{retaining \c__int_from_roman_D_int=\char"1F4}
{retaining \c__int_from_roman_C_int=\char"64}
{retaining \c__int_from_roman_L_int=\char"32}
{retaining \c__int_from_roman_X_int=\char"A}
{retaining \c__int_from_roman_V_int=\char"5}
{retaining \c__int_from_roman_I_int=\char"1}
{retaining \c__int_from_roman_m_int=\char"3E8}
{retaining \c__int_from_roman_d_int=\char"1F4}
{retaining \c__int_from_roman_c_int=\char"64}
{retaining \c__int_from_roman_l_int=\char"32}
{retaining \c__int_from_roman_x_int=\char"A}
{retaining \c__int_from_roman_v_int=\char"5}
{retaining \c__int_from_roman_i_int=\char"1}
{retaining \__int_to_symbols:ennn=\long macro:->\exp_args:Ne \__int_to_symbols:nnnn }
{retaining \int_to_arabic:v=\long macro:->\exp_args:Nv \int_to_arabic:n }
{retaining \int_if_even:nTF=\long macro:#1->\reverse_if:N \if_int_odd:w \__int_eval:w \ETC.}
{retaining \int_if_even:nF=\long macro:#1->\reverse_if:N \if_int_odd:w \__int_eval:w \ETC.}
{retaining \int_if_even:nT=\long macro:#1->\reverse_if:N \if_int_odd:w \__int_eval:w \ETC.}
{retaining \int_if_even_p:n=\long macro:#1->\reverse_if:N \if_int_odd:w \__int_eval:w \ETC.}
{retaining \int_if_odd:nTF=\long macro:#1->\if_int_odd:w \__int_eval:w #1\ETC.}
{retaining \int_if_odd:nF=\long macro:#1->\if_int_odd:w \__int_eval:w #1\ETC.}
{retaining \int_if_odd:nT=\long macro:#1->\if_int_odd:w \__int_eval:w #1\ETC.}
{retaining \int_if_odd_p:n=\long macro:#1->\if_int_odd:w \__int_eval:w #1\ETC.}
{retaining \int_if_zero:nTF=\long macro:#1->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_if_zero:nF=\long macro:#1->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_if_zero:nT=\long macro:#1->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_if_zero_p:n=\long macro:#1->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_compare:nNnTF=\long macro:#1#2#3->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_compare:nNnF=\long macro:#1#2#3->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_compare:nNnT=\long macro:#1#2#3->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \int_compare_p:nNn=\long macro:#1#2#3->\if_int_compare:w \__int_eval:w \ETC.}
{retaining \__int_compare_>=:NNw=\long macro:#1#2#3>=->\__int_compare:nnN {\if_int_compare:w \ETC.}
{retaining \__int_compare_<=:NNw=\long macro:#1#2#3<=->\__int_compare:nnN {\if_int_compare:w \ETC.}
{retaining \__int_compare_!=:NNw=\long macro:#1#2#3!=->\__int_compare:nnN {\if_int_compare:w \ETC.}
{retaining \__int_compare_==:NNw=\long macro:#1#2#3==->\__int_compare:nnN {\reverse_if:N \ETC.}
{retaining \__int_compare_>:NNw=\long macro:#1#2#3>->\__int_compare:nnN {\reverse_if:N \ETC.}
{retaining \__int_compare_<:NNw=\long macro:#1#2#3<->\__int_compare:nnN {\reverse_if:N \ETC.}
{retaining \__int_compare_=:NNw=\long macro:#1#2#3=->\__int_compare:nnN {\reverse_if:N \ETC.}
{retaining \__int_compare_end_=:NNw=\long macro:#1#2#3e#4\s__int_stop ->{#3}\exp_stop_f: \ETC.}
{retaining \int_compare:nTF=\long macro:#1->\exp_after:wN \__int_compare:w \ETC.}
{retaining \int_compare:nF=\long macro:#1->\exp_after:wN \__int_compare:w \ETC.}
{retaining \int_compare:nT=\long macro:#1->\exp_after:wN \__int_compare:w \ETC.}
{retaining \int_compare_p:n=\long macro:#1->\exp_after:wN \__int_compare:w \ETC.}
{retaining \int_gset:cn=\protected\long macro:->\exp_args:Nc \int_gset:Nn }
{retaining \int_set:cn=\protected\long macro:->\exp_args:Nc \int_set:Nn }
{retaining \int_gdecr:c=\protected\long macro:->\exp_args:Nc \int_gdecr:N }
{retaining \int_gincr:c=\protected\long macro:->\exp_args:Nc \int_gincr:N }
{retaining \int_decr:c=\protected\long macro:->\exp_args:Nc \int_decr:N }
{retaining \int_incr:c=\protected\long macro:->\exp_args:Nc \int_incr:N }
{retaining \int_gsub:cn=\protected\long macro:->\exp_args:Nc \int_gsub:Nn }
{retaining \int_sub:cn=\protected\long macro:->\exp_args:Nc \int_sub:Nn }
{retaining \int_gadd:cn=\protected\long macro:->\exp_args:Nc \int_gadd:Nn }
{retaining \int_add:cn=\protected\long macro:->\exp_args:Nc \int_add:Nn }
{retaining \int_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \int_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \int_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \int_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \int_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \int_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \int_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \int_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \int_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \int_gset_eq:NN }
{retaining \int_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \int_gset_eq:NN }
{retaining \int_gset_eq:cN=\protected\long macro:->\exp_args:Nc \int_gset_eq:NN }
{retaining \int_set_eq:cc=\protected\long macro:->\exp_args:Ncc \int_set_eq:NN }
{retaining \int_set_eq:Nc=\protected\long macro:->\exp_args:NNc \int_set_eq:NN }
{retaining \int_set_eq:cN=\protected\long macro:->\exp_args:Nc \int_set_eq:NN }
{retaining \int_gzero_new:c=\protected\long macro:->\exp_args:Nc \int_gzero_new:N }
{retaining \int_zero_new:c=\protected\long macro:->\exp_args:Nc \int_zero_new:N }
{retaining \int_gzero:c=\protected\long macro:->\exp_args:Nc \int_gzero:N }
{retaining \int_zero:c=\protected\long macro:->\exp_args:Nc \int_zero:N }
{retaining \__int_const:eN=\protected\long macro:->\exp_args:Ne \__int_const:nN }
{retaining \int_const:cn=\protected\long macro:->\exp_args:Nc \int_const:Nn }
{retaining \int_new:c=\protected\long macro:->\exp_args:Nc \int_new:N }
{retaining \__int_use_none_delimit_by_q_recursion_stop:w=\long macro:#1\q__int_recursion_stop ->}
{retaining \__int_quark_recursion_tail:w=\long macro:#1\q__int_recursion_tail #2?#3?!\ETC.}
{retaining \__int_use_i_delimit_by_q_recursion_stop:nw=\long macro:#1#2\q__int_recursion_stop ->#1}
{retaining \seq_log:c=\protected\long macro:->\exp_args:Nc \seq_log:N }
{retaining \seq_show:c=\protected\long macro:->\exp_args:Nc \seq_show:N }
{retaining \seq_gpop:cNTF=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNTF }
{retaining \seq_gpop:cNF=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNF }
{retaining \seq_gpop:cNT=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNT }
{retaining \seq_gpop:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_gpop:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_gpop:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop:cNTF=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNTF }
{retaining \seq_pop:cNF=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNF }
{retaining \seq_pop:cNT=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNT }
{retaining \seq_pop:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_get:cNTF=\protected\long macro:->\exp_args:Nc \seq_get_left:NNTF }
{retaining \seq_get:cNF=\protected\long macro:->\exp_args:Nc \seq_get_left:NNF }
{retaining \seq_get:cNT=\protected\long macro:->\exp_args:Nc \seq_get_left:NNT }
{retaining \seq_get:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_gpush:cx=\protected\long macro:->\exp_args:Ncx \seq_gpush:Nn }
{retaining \seq_gpush:co=\protected\long macro:->\exp_args:Nco \seq_gpush:Nn }
{retaining \seq_gpush:Nx=\protected\long macro:->\exp_args:NNx \seq_gpush:Nn }
{retaining \seq_gpush:No=\protected\long macro:->\exp_args:NNo \seq_gpush:Nn }
{retaining \seq_gpush:ce=\protected\long macro:->\exp_args:Nce \seq_gpush:Nn }
{retaining \seq_gpush:cv=\protected\long macro:->\exp_args:Ncv \seq_gpush:Nn }
{retaining \seq_gpush:cV=\protected\long macro:->\exp_args:NcV \seq_gpush:Nn }
{retaining \seq_gpush:cn=\protected\long macro:->\exp_args:Nc \seq_gpush:Nn }
{retaining \seq_gpush:Ne=\protected\long macro:->\exp_args:NNe \seq_gpush:Nn }
{retaining \seq_gpush:Nv=\protected\long macro:->\exp_args:NNv \seq_gpush:Nn }
{retaining \seq_gpush:NV=\protected\long macro:->\exp_args:NNV \seq_gpush:Nn }
{retaining \seq_push:cx=\protected\long macro:->\exp_args:Ncx \seq_push:Nn }
{retaining \seq_push:co=\protected\long macro:->\exp_args:Nco \seq_push:Nn }
{retaining \seq_push:Nx=\protected\long macro:->\exp_args:NNx \seq_push:Nn }
{retaining \seq_push:No=\protected\long macro:->\exp_args:NNo \seq_push:Nn }
{retaining \seq_push:ce=\protected\long macro:->\exp_args:Nce \seq_push:Nn }
{retaining \seq_push:cv=\protected\long macro:->\exp_args:Ncv \seq_push:Nn }
{retaining \seq_push:cV=\protected\long macro:->\exp_args:NcV \seq_push:Nn }
{retaining \seq_push:cn=\protected\long macro:->\exp_args:Nc \seq_push:Nn }
{retaining \seq_push:Ne=\protected\long macro:->\exp_args:NNe \seq_push:Nn }
{retaining \seq_push:Nv=\protected\long macro:->\exp_args:NNv \seq_push:Nn }
{retaining \seq_push:NV=\protected\long macro:->\exp_args:NNV \seq_push:Nn }
{retaining \seq_use:cn=\long macro:->\exp_args:Nc \seq_use:Nn }
{retaining \seq_use:cnnn=\long macro:->\exp_args:Nc \seq_use:Nnnn }
{retaining \seq_count:c=\long macro:->\exp_args:Nc \seq_count:N }
{retaining \seq_map_pairwise_function:ccN=\long macro:->\exp_args:Ncc \seq_map_pairwise_function:NNN }
{retaining \seq_map_pairwise_function:cNN=\long macro:->\exp_args:Nc \seq_map_pairwise_function:NNN }
{retaining \seq_map_pairwise_function:NcN=\long macro:->\exp_args:NNc \seq_map_pairwise_function:NNN }
{retaining \seq_map_variable:ccn=\protected\long macro:->\exp_args:Ncc \seq_map_variable:NNn }
{retaining \seq_map_variable:cNn=\protected\long macro:->\exp_args:Nc \seq_map_variable:NNn }
{retaining \seq_map_variable:Ncn=\protected\long macro:->\exp_args:NNc \seq_map_variable:NNn }
{retaining \seq_map_tokens:cn=\long macro:->\exp_args:Nc \seq_map_tokens:Nn }
{retaining \seq_map_inline:cn=\protected\long macro:->\exp_args:Nc \seq_map_inline:Nn }
{retaining \seq_map_function:cN=\long macro:->\exp_args:Nc \seq_map_function:NN }
{retaining \seq_rand_item:c=\long macro:->\exp_args:Nc \seq_rand_item:N }
{retaining \seq_item:ce=\long macro:->\exp_args:Nce \seq_item:Nn }
{retaining \seq_item:cV=\long macro:->\exp_args:NcV \seq_item:Nn }
{retaining \seq_item:cn=\long macro:->\exp_args:Nc \seq_item:Nn }
{retaining \seq_item:Ne=\long macro:->\exp_args:NNe \seq_item:Nn }
{retaining \seq_item:NV=\long macro:->\exp_args:NNV \seq_item:Nn }
{retaining \seq_gpop_right:cNTF=\protected\long macro:->\exp_args:Nc \seq_gpop_right:NNTF }
{retaining \seq_gpop_right:cNF=\protected\long macro:->\exp_args:Nc \seq_gpop_right:NNF }
{retaining \seq_gpop_right:cNT=\protected\long macro:->\exp_args:Nc \seq_gpop_right:NNT }
{retaining \seq_pop_right:cNTF=\protected\long macro:->\exp_args:Nc \seq_pop_right:NNTF }
{retaining \seq_pop_right:cNF=\protected\long macro:->\exp_args:Nc \seq_pop_right:NNF }
{retaining \seq_pop_right:cNT=\protected\long macro:->\exp_args:Nc \seq_pop_right:NNT }
{retaining \seq_gpop_left:cNTF=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNTF }
{retaining \seq_gpop_left:cNF=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNF }
{retaining \seq_gpop_left:cNT=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NNT }
{retaining \seq_pop_left:cNTF=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNTF }
{retaining \seq_pop_left:cNF=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNF }
{retaining \seq_pop_left:cNT=\protected\long macro:->\exp_args:Nc \seq_pop_left:NNT }
{retaining \seq_gpop_right:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_gpop_right:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_gpop_right:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_pop_right:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_pop_right:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_pop_right:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_right:NNN \ETC.}
{retaining \seq_gpop_left:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_gpop_left:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_gpop_left:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop_left:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop_left:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_pop_left:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \ETC.}
{retaining \seq_get_right:cNTF=\protected\long macro:->\exp_args:Nc \seq_get_right:NNTF }
{retaining \seq_get_right:cNF=\protected\long macro:->\exp_args:Nc \seq_get_right:NNF }
{retaining \seq_get_right:cNT=\protected\long macro:->\exp_args:Nc \seq_get_right:NNT }
{retaining \seq_get_left:cNTF=\protected\long macro:->\exp_args:Nc \seq_get_left:NNTF }
{retaining \seq_get_left:cNF=\protected\long macro:->\exp_args:Nc \seq_get_left:NNF }
{retaining \seq_get_left:cNT=\protected\long macro:->\exp_args:Nc \seq_get_left:NNT }
{retaining \seq_get_right:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get_right:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get_right:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get_left:NNTF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get_left:NNF=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_get_left:NNT=\protected\long macro:#1#2->\__seq_pop_TF:NNNN \prg_do_nothing: \ETC.}
{retaining \seq_gpop_right:cN=\protected\long macro:->\exp_args:Nc \seq_gpop_right:NN }
{retaining \seq_pop_right:cN=\protected\long macro:->\exp_args:Nc \seq_pop_right:NN }
{retaining \seq_get_right:cN=\protected\long macro:->\exp_args:Nc \seq_get_right:NN }
{retaining \seq_gpop_left:cN=\protected\long macro:->\exp_args:Nc \seq_gpop_left:NN }
{retaining \seq_pop_left:cN=\protected\long macro:->\exp_args:Nc \seq_pop_left:NN }
{retaining \seq_get_left:cN=\protected\long macro:->\exp_args:Nc \seq_get_left:NN }
{retaining \seq_if_in:cxTF=\protected\long macro:->\exp_args:Ncx \seq_if_in:NnTF }
{retaining \seq_if_in:coTF=\protected\long macro:->\exp_args:Nco \seq_if_in:NnTF }
{retaining \seq_if_in:ceTF=\protected\long macro:->\exp_args:Nce \seq_if_in:NnTF }
{retaining \seq_if_in:cvTF=\protected\long macro:->\exp_args:Ncv \seq_if_in:NnTF }
{retaining \seq_if_in:cVTF=\protected\long macro:->\exp_args:NcV \seq_if_in:NnTF }
{retaining \seq_if_in:cnTF=\protected\long macro:->\exp_args:Nc \seq_if_in:NnTF }
{retaining \seq_if_in:NxTF=\protected\long macro:->\exp_args:NNx \seq_if_in:NnTF }
{retaining \seq_if_in:NoTF=\protected\long macro:->\exp_args:NNo \seq_if_in:NnTF }
{retaining \seq_if_in:NeTF=\protected\long macro:->\exp_args:NNe \seq_if_in:NnTF }
{retaining \seq_if_in:NvTF=\protected\long macro:->\exp_args:NNv \seq_if_in:NnTF }
{retaining \seq_if_in:NVTF=\protected\long macro:->\exp_args:NNV \seq_if_in:NnTF }
{retaining \seq_if_in:cxF=\protected\long macro:->\exp_args:Ncx \seq_if_in:NnF }
{retaining \seq_if_in:coF=\protected\long macro:->\exp_args:Nco \seq_if_in:NnF }
{retaining \seq_if_in:ceF=\protected\long macro:->\exp_args:Nce \seq_if_in:NnF }
{retaining \seq_if_in:cvF=\protected\long macro:->\exp_args:Ncv \seq_if_in:NnF }
{retaining \seq_if_in:cVF=\protected\long macro:->\exp_args:NcV \seq_if_in:NnF }
{retaining \seq_if_in:cnF=\protected\long macro:->\exp_args:Nc \seq_if_in:NnF }
{retaining \seq_if_in:NxF=\protected\long macro:->\exp_args:NNx \seq_if_in:NnF }
{retaining \seq_if_in:NoF=\protected\long macro:->\exp_args:NNo \seq_if_in:NnF }
{retaining \seq_if_in:NeF=\protected\long macro:->\exp_args:NNe \seq_if_in:NnF }
{retaining \seq_if_in:NvF=\protected\long macro:->\exp_args:NNv \seq_if_in:NnF }
{retaining \seq_if_in:NVF=\protected\long macro:->\exp_args:NNV \seq_if_in:NnF }
{retaining \seq_if_in:cxT=\protected\long macro:->\exp_args:Ncx \seq_if_in:NnT }
{retaining \seq_if_in:coT=\protected\long macro:->\exp_args:Nco \seq_if_in:NnT }
{retaining \seq_if_in:ceT=\protected\long macro:->\exp_args:Nce \seq_if_in:NnT }
{retaining \seq_if_in:cvT=\protected\long macro:->\exp_args:Ncv \seq_if_in:NnT }
{retaining \seq_if_in:cVT=\protected\long macro:->\exp_args:NcV \seq_if_in:NnT }
{retaining \seq_if_in:cnT=\protected\long macro:->\exp_args:Nc \seq_if_in:NnT }
{retaining \seq_if_in:NxT=\protected\long macro:->\exp_args:NNx \seq_if_in:NnT }
{retaining \seq_if_in:NoT=\protected\long macro:->\exp_args:NNo \seq_if_in:NnT }
{retaining \seq_if_in:NeT=\protected\long macro:->\exp_args:NNe \seq_if_in:NnT }
{retaining \seq_if_in:NvT=\protected\long macro:->\exp_args:NNv \seq_if_in:NnT }
{retaining \seq_if_in:NVT=\protected\long macro:->\exp_args:NNV \seq_if_in:NnT }
{retaining \seq_if_in:NnTF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__seq_internal_a_tl \ETC.}
{retaining \seq_if_in:NnF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__seq_internal_a_tl \ETC.}
{retaining \seq_if_in:NnT=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__seq_internal_a_tl \ETC.}
{retaining \seq_gshuffle:c=\protected\long macro:->\exp_args:Nc \seq_gshuffle:N }
{retaining \seq_shuffle:c=\protected\long macro:->\exp_args:Nc \seq_shuffle:N }
{retaining \seq_if_empty:cTF=\long macro:->\exp_args:Nc \seq_if_empty:NTF }
{retaining \seq_if_empty:cF=\long macro:->\exp_args:Nc \seq_if_empty:NF }
{retaining \seq_if_empty:cT=\long macro:->\exp_args:Nc \seq_if_empty:NT }
{retaining \seq_if_empty_p:c=\long macro:->\exp_args:Nc \seq_if_empty_p:N }
{retaining \seq_if_empty:NTF=\long macro:#1->\if_meaning:w #1\c_empty_seq \__prg_TF_true:w \ETC.}
{retaining \seq_if_empty:NF=\long macro:#1->\if_meaning:w #1\c_empty_seq \__prg_F_true:w \ETC.}
{retaining \seq_if_empty:NT=\long macro:#1->\if_meaning:w #1\c_empty_seq \__prg_T_true:w \ETC.}
{retaining \seq_if_empty_p:N=\long macro:#1->\if_meaning:w #1\c_empty_seq \__prg_p_true:w \ETC.}
{retaining \seq_greverse:c=\protected\long macro:->\exp_args:Nc \seq_greverse:N }
{retaining \seq_reverse:c=\protected\long macro:->\exp_args:Nc \seq_reverse:N }
{retaining \seq_gset_item:cnnF=\protected\long macro:->\exp_args:Nc \seq_gset_item:NnnF }
{retaining \seq_gset_item:cnnT=\protected\long macro:->\exp_args:Nc \seq_gset_item:NnnT }
{retaining \seq_gset_item:cnnTF=\protected\long macro:->\exp_args:Nc \seq_gset_item:NnnTF }
{retaining \seq_set_item:cnnF=\protected\long macro:->\exp_args:Nc \seq_set_item:NnnF }
{retaining \seq_set_item:cnnT=\protected\long macro:->\exp_args:Nc \seq_set_item:NnnT }
{retaining \seq_set_item:cnnTF=\protected\long macro:->\exp_args:Nc \seq_set_item:NnnTF }
{retaining \seq_gset_item:NnnF=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_gset_item:NnnT=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_gset_item:NnnTF=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_set_item:NnnF=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_set_item:NnnT=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_set_item:NnnTF=\protected\long macro:#1#2#3->\__seq_set_item:NnnNN #1{#2\ETC.}
{retaining \seq_gset_item:cnn=\protected\long macro:->\exp_args:Nc \seq_gset_item:Nnn }
{retaining \seq_set_item:cnn=\protected\long macro:->\exp_args:Nc \seq_set_item:Nnn }
{retaining \seq_gremove_all:cx=\protected\long macro:->\exp_args:Ncx \seq_gremove_all:Nn }
{retaining \seq_gremove_all:Nx=\protected\long macro:->\exp_args:NNx \seq_gremove_all:Nn }
{retaining \seq_gremove_all:ce=\protected\long macro:->\exp_args:Nce \seq_gremove_all:Nn }
{retaining \seq_gremove_all:cV=\protected\long macro:->\exp_args:NcV \seq_gremove_all:Nn }
{retaining \seq_gremove_all:cn=\protected\long macro:->\exp_args:Nc \seq_gremove_all:Nn }
{retaining \seq_gremove_all:Ne=\protected\long macro:->\exp_args:NNe \seq_gremove_all:Nn }
{retaining \seq_gremove_all:NV=\protected\long macro:->\exp_args:NNV \seq_gremove_all:Nn }
{retaining \seq_remove_all:cx=\protected\long macro:->\exp_args:Ncx \seq_remove_all:Nn }
{retaining \seq_remove_all:Nx=\protected\long macro:->\exp_args:NNx \seq_remove_all:Nn }
{retaining \seq_remove_all:ce=\protected\long macro:->\exp_args:Nce \seq_remove_all:Nn }
{retaining \seq_remove_all:cV=\protected\long macro:->\exp_args:NcV \seq_remove_all:Nn }
{retaining \seq_remove_all:cn=\protected\long macro:->\exp_args:Nc \seq_remove_all:Nn }
{retaining \seq_remove_all:Ne=\protected\long macro:->\exp_args:NNe \seq_remove_all:Nn }
{retaining \seq_remove_all:NV=\protected\long macro:->\exp_args:NNV \seq_remove_all:Nn }
{retaining \seq_gremove_duplicates:c=\protected\long macro:->\exp_args:Nc \seq_gremove_duplicates:N }
{retaining \seq_remove_duplicates:c=\protected\long macro:->\exp_args:Nc \seq_remove_duplicates:N }
{retaining \seq_gput_right:cx=\protected\long macro:->\exp_args:Ncx \seq_gput_right:Nn }
{retaining \seq_gput_right:co=\protected\long macro:->\exp_args:Nco \seq_gput_right:Nn }
{retaining \seq_gput_right:ce=\protected\long macro:->\exp_args:Nce \seq_gput_right:Nn }
{retaining \seq_gput_right:cv=\protected\long macro:->\exp_args:Ncv \seq_gput_right:Nn }
{retaining \seq_gput_right:cV=\protected\long macro:->\exp_args:NcV \seq_gput_right:Nn }
{retaining \seq_gput_right:cn=\protected\long macro:->\exp_args:Nc \seq_gput_right:Nn }
{retaining \seq_gput_right:Nx=\protected\long macro:->\exp_args:NNx \seq_gput_right:Nn }
{retaining \seq_gput_right:No=\protected\long macro:->\exp_args:NNo \seq_gput_right:Nn }
{retaining \seq_gput_right:Ne=\protected\long macro:->\exp_args:NNe \seq_gput_right:Nn }
{retaining \seq_gput_right:Nv=\protected\long macro:->\exp_args:NNv \seq_gput_right:Nn }
{retaining \seq_gput_right:NV=\protected\long macro:->\exp_args:NNV \seq_gput_right:Nn }
{retaining \seq_put_right:cx=\protected\long macro:->\exp_args:Ncx \seq_put_right:Nn }
{retaining \seq_put_right:co=\protected\long macro:->\exp_args:Nco \seq_put_right:Nn }
{retaining \seq_put_right:ce=\protected\long macro:->\exp_args:Nce \seq_put_right:Nn }
{retaining \seq_put_right:cv=\protected\long macro:->\exp_args:Ncv \seq_put_right:Nn }
{retaining \seq_put_right:cV=\protected\long macro:->\exp_args:NcV \seq_put_right:Nn }
{retaining \seq_put_right:cn=\protected\long macro:->\exp_args:Nc \seq_put_right:Nn }
{retaining \seq_put_right:Nx=\protected\long macro:->\exp_args:NNx \seq_put_right:Nn }
{retaining \seq_put_right:No=\protected\long macro:->\exp_args:NNo \seq_put_right:Nn }
{retaining \seq_put_right:Ne=\protected\long macro:->\exp_args:NNe \seq_put_right:Nn }
{retaining \seq_put_right:Nv=\protected\long macro:->\exp_args:NNv \seq_put_right:Nn }
{retaining \seq_put_right:NV=\protected\long macro:->\exp_args:NNV \seq_put_right:Nn }
{retaining \seq_gput_left:cx=\protected\long macro:->\exp_args:Ncx \seq_gput_left:Nn }
{retaining \seq_gput_left:co=\protected\long macro:->\exp_args:Nco \seq_gput_left:Nn }
{retaining \seq_gput_left:ce=\protected\long macro:->\exp_args:Nce \seq_gput_left:Nn }
{retaining \seq_gput_left:cv=\protected\long macro:->\exp_args:Ncv \seq_gput_left:Nn }
{retaining \seq_gput_left:cV=\protected\long macro:->\exp_args:NcV \seq_gput_left:Nn }
{retaining \seq_gput_left:cn=\protected\long macro:->\exp_args:Nc \seq_gput_left:Nn }
{retaining \seq_gput_left:Nx=\protected\long macro:->\exp_args:NNx \seq_gput_left:Nn }
{retaining \seq_gput_left:No=\protected\long macro:->\exp_args:NNo \seq_gput_left:Nn }
{retaining \seq_gput_left:Ne=\protected\long macro:->\exp_args:NNe \seq_gput_left:Nn }
{retaining \seq_gput_left:Nv=\protected\long macro:->\exp_args:NNv \seq_gput_left:Nn }
{retaining \seq_gput_left:NV=\protected\long macro:->\exp_args:NNV \seq_gput_left:Nn }
{retaining \seq_put_left:cx=\protected\long macro:->\exp_args:Ncx \seq_put_left:Nn }
{retaining \seq_put_left:co=\protected\long macro:->\exp_args:Nco \seq_put_left:Nn }
{retaining \seq_put_left:ce=\protected\long macro:->\exp_args:Nce \seq_put_left:Nn }
{retaining \seq_put_left:cv=\protected\long macro:->\exp_args:Ncv \seq_put_left:Nn }
{retaining \seq_put_left:cV=\protected\long macro:->\exp_args:NcV \seq_put_left:Nn }
{retaining \seq_put_left:cn=\protected\long macro:->\exp_args:Nc \seq_put_left:Nn }
{retaining \seq_put_left:Nx=\protected\long macro:->\exp_args:NNx \seq_put_left:Nn }
{retaining \seq_put_left:No=\protected\long macro:->\exp_args:NNo \seq_put_left:Nn }
{retaining \seq_put_left:Ne=\protected\long macro:->\exp_args:NNe \seq_put_left:Nn }
{retaining \seq_put_left:Nv=\protected\long macro:->\exp_args:NNv \seq_put_left:Nn }
{retaining \seq_put_left:NV=\protected\long macro:->\exp_args:NNV \seq_put_left:Nn }
{retaining \seq_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \seq_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \seq_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \seq_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \seq_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \seq_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \seq_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \seq_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \seq_gconcat:ccc=\protected\long macro:->\exp_args:Nccc \seq_gconcat:NNN }
{retaining \seq_concat:ccc=\protected\long macro:->\exp_args:Nccc \seq_concat:NNN }
{retaining \seq_gset_split_keep_spaces:NnV=\protected\long macro:->\exp_args:NNnV \seq_gset_split_keep_spaces:Nnn }
{retaining \seq_set_split_keep_spaces:NnV=\protected\long macro:->\exp_args:NNnV \seq_set_split_keep_spaces:Nnn }
{retaining \seq_gset_split:Nxx=\protected\long macro:->\exp_args:NNxx \seq_gset_split:Nnn }
{retaining \seq_gset_split:Nnx=\protected\long macro:->\exp_args:NNnx \seq_gset_split:Nnn }
{retaining \seq_gset_split:Nee=\protected\long macro:->\exp_args:NNee \seq_gset_split:Nnn }
{retaining \seq_gset_split:Nne=\protected\long macro:->\exp_args:NNne \seq_gset_split:Nnn }
{retaining \seq_gset_split:NVV=\protected\long macro:->\exp_args:NNVV \seq_gset_split:Nnn }
{retaining \seq_gset_split:NnV=\protected\long macro:->\exp_args:NNnV \seq_gset_split:Nnn }
{retaining \seq_gset_split:NVn=\protected\long macro:->\exp_args:NNV \seq_gset_split:Nnn }
{retaining \seq_set_split:Nxx=\protected\long macro:->\exp_args:NNxx \seq_set_split:Nnn }
{retaining \seq_set_split:Nnx=\protected\long macro:->\exp_args:NNnx \seq_set_split:Nnn }
{retaining \seq_set_split:Nee=\protected\long macro:->\exp_args:NNee \seq_set_split:Nnn }
{retaining \seq_set_split:Nne=\protected\long macro:->\exp_args:NNne \seq_set_split:Nnn }
{retaining \seq_set_split:NVV=\protected\long macro:->\exp_args:NNVV \seq_set_split:Nnn }
{retaining \seq_set_split:NnV=\protected\long macro:->\exp_args:NNnV \seq_set_split:Nnn }
{retaining \seq_set_split:NVn=\protected\long macro:->\exp_args:NNV \seq_set_split:Nnn }
{retaining \seq_const_from_clist:cn=\protected\long macro:->\exp_args:Nc \seq_const_from_clist:Nn }
{retaining \seq_gset_from_clist:cn=\protected\long macro:->\exp_args:Nc \seq_gset_from_clist:Nn }
{retaining \seq_gset_from_clist:cc=\protected\long macro:->\exp_args:Ncc \seq_gset_from_clist:NN }
{retaining \seq_gset_from_clist:cN=\protected\long macro:->\exp_args:Nc \seq_gset_from_clist:NN }
{retaining \seq_gset_from_clist:Nc=\protected\long macro:->\exp_args:NNc \seq_gset_from_clist:NN }
{retaining \seq_set_from_clist:cn=\protected\long macro:->\exp_args:Nc \seq_set_from_clist:Nn }
{retaining \seq_set_from_clist:cc=\protected\long macro:->\exp_args:Ncc \seq_set_from_clist:NN }
{retaining \seq_set_from_clist:cN=\protected\long macro:->\exp_args:Nc \seq_set_from_clist:NN }
{retaining \seq_set_from_clist:Nc=\protected\long macro:->\exp_args:NNc \seq_set_from_clist:NN }
{retaining \seq_gclear_new:c=\protected\long macro:->\exp_args:Nc \seq_gclear_new:N }
{retaining \seq_clear_new:c=\protected\long macro:->\exp_args:Nc \seq_clear_new:N }
{retaining \seq_gclear:c=\protected\long macro:->\exp_args:Nc \seq_gclear:N }
{retaining \seq_clear:c=\protected\long macro:->\exp_args:Nc \seq_clear:N }
{retaining \seq_new:c=\protected\long macro:->\exp_args:Nc \seq_new:N }
{retaining \str_log:c=\protected\long macro:->\exp_args:Nc \str_log:N }
{retaining \str_show:c=\protected\long macro:->\exp_args:Nc \str_show:N }
{retaining \__str_change_case_char:fnn=\long macro:->\exp_args:Nf \__str_change_case_char:nnn }
{retaining \__str_change_case_output:fw=\long macro:->\exp_args:Nf \__str_change_case_output:nw }
{retaining \str_uppercase:f=\long macro:->\exp_args:Nf \str_uppercase:n }
{retaining \str_lowercase:f=\long macro:->\exp_args:Nf \str_lowercase:n }
{retaining \str_casefold:V=\long macro:->\exp_args:NV \str_casefold:n }
{retaining \str_tail:c=\long macro:->\exp_args:Nc \str_tail:N }
{retaining \str_head:c=\long macro:->\exp_args:Nc \str_head:N }
{retaining \str_count:c=\long macro:->\exp_args:Nc \str_count:N }
{retaining \str_count_spaces:c=\long macro:->\exp_args:Nc \str_count_spaces:N }
{retaining \str_range:cnn=\long macro:->\exp_args:Nc \str_range:Nnn }
{retaining \str_item:cn=\long macro:->\exp_args:Nc \str_item:Nn }
{retaining \str_map_tokens:cn=\long macro:->\exp_args:Nc \str_map_tokens:Nn }
{retaining \str_map_variable:cNn=\protected\long macro:->\exp_args:Nc \str_map_variable:NNn }
{retaining \str_map_inline:cn=\protected\long macro:->\exp_args:Nc \str_map_inline:Nn }
{retaining \str_map_function:cN=\long macro:->\exp_args:Nc \str_map_function:NN }
{retaining \str_case_e:enTF=\long macro:->\exp_args:Ne \str_case_e:nnTF }
{retaining \str_case_e:enF=\long macro:->\exp_args:Ne \str_case_e:nnF }
{retaining \str_case_e:enT=\long macro:->\exp_args:Ne \str_case_e:nnT }
{retaining \str_case_e:en=\long macro:->\exp_args:Ne \str_case_e:nn }
{retaining \str_case:nvTF=\long macro:->\exp_args:Nnv \str_case:nnTF }
{retaining \str_case:nVTF=\long macro:->\exp_args:NnV \str_case:nnTF }
{retaining \str_case:enTF=\long macro:->\exp_args:Ne \str_case:nnTF }
{retaining \str_case:onTF=\long macro:->\exp_args:No \str_case:nnTF }
{retaining \str_case:VnTF=\long macro:->\exp_args:NV \str_case:nnTF }
{retaining \str_case:nvF=\long macro:->\exp_args:Nnv \str_case:nnF }
{retaining \str_case:nVF=\long macro:->\exp_args:NnV \str_case:nnF }
{retaining \str_case:enF=\long macro:->\exp_args:Ne \str_case:nnF }
{retaining \str_case:onF=\long macro:->\exp_args:No \str_case:nnF }
{retaining \str_case:VnF=\long macro:->\exp_args:NV \str_case:nnF }
{retaining \str_case:nvT=\long macro:->\exp_args:Nnv \str_case:nnT }
{retaining \str_case:nVT=\long macro:->\exp_args:NnV \str_case:nnT }
{retaining \str_case:enT=\long macro:->\exp_args:Ne \str_case:nnT }
{retaining \str_case:onT=\long macro:->\exp_args:No \str_case:nnT }
{retaining \str_case:VnT=\long macro:->\exp_args:NV \str_case:nnT }
{retaining \str_case:nv=\long macro:->\exp_args:Nnv \str_case:nn }
{retaining \str_case:nV=\long macro:->\exp_args:NnV \str_case:nn }
{retaining \str_case:en=\long macro:->\exp_args:Ne \str_case:nn }
{retaining \str_case:on=\long macro:->\exp_args:No \str_case:nn }
{retaining \str_case:Vn=\long macro:->\exp_args:NV \str_case:nn }
{retaining \str_if_in:nnTF=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:n \ETC.}
{retaining \str_if_in:nnF=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:n \ETC.}
{retaining \str_if_in:nnT=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:n \ETC.}
{retaining \str_if_in:cnTF=\protected\long macro:->\exp_args:Nc \str_if_in:NnTF }
{retaining \str_if_in:cnF=\protected\long macro:->\exp_args:Nc \str_if_in:NnF }
{retaining \str_if_in:cnT=\protected\long macro:->\exp_args:Nc \str_if_in:NnT }
{retaining \str_if_in:NnTF=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:N \ETC.}
{retaining \str_if_in:NnF=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:N \ETC.}
{retaining \str_if_in:NnT=\protected\long macro:#1#2->\use:e {\tl_if_in:nnTF {\tl_to_str:N \ETC.}
{retaining \str_if_eq_p:cc=\long macro:->\exp_args:Ncc \str_if_eq_p:NN }
{retaining \str_if_eq_p:Nc=\long macro:->\exp_args:NNc \str_if_eq_p:NN }
{retaining \str_if_eq_p:cN=\long macro:->\exp_args:Nc \str_if_eq_p:NN }
{retaining \str_if_eq:ccTF=\long macro:->\exp_args:Ncc \str_if_eq:NNTF }
{retaining \str_if_eq:NcTF=\long macro:->\exp_args:NNc \str_if_eq:NNTF }
{retaining \str_if_eq:cNTF=\long macro:->\exp_args:Nc \str_if_eq:NNTF }
{retaining \str_if_eq:ccF=\long macro:->\exp_args:Ncc \str_if_eq:NNF }
{retaining \str_if_eq:NcF=\long macro:->\exp_args:NNc \str_if_eq:NNF }
{retaining \str_if_eq:cNF=\long macro:->\exp_args:Nc \str_if_eq:NNF }
{retaining \str_if_eq:ccT=\long macro:->\exp_args:Ncc \str_if_eq:NNT }
{retaining \str_if_eq:NcT=\long macro:->\exp_args:NNc \str_if_eq:NNT }
{retaining \str_if_eq:cNT=\long macro:->\exp_args:Nc \str_if_eq:NNT }
{retaining \str_if_eq:NNF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\tl_to_str:N \ETC.}
{retaining \str_if_eq:NNT=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\tl_to_str:N \ETC.}
{retaining \str_if_eq:NNTF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\tl_to_str:N \ETC.}
{retaining \str_if_eq_p:NN=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\tl_to_str:N \ETC.}
{retaining \str_if_eq:eeTF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {#1}{\ETC.}
{retaining \str_if_eq:eeF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {#1}{\ETC.}
{retaining \str_if_eq:eeT=\long macro:#1#2->\if:w 0\__str_if_eq:nn {#1}{\ETC.}
{retaining \str_if_eq_p:ee=\long macro:#1#2->\if:w 0\__str_if_eq:nn {#1}{\ETC.}
{retaining \str_if_eq:nvTF=\long macro:->\exp_args:Nnv \str_if_eq:nnTF }
{retaining \str_if_eq:VVTF=\long macro:->\exp_args:NVV \str_if_eq:nnTF }
{retaining \str_if_eq:noTF=\long macro:->\exp_args:Nno \str_if_eq:nnTF }
{retaining \str_if_eq:nVTF=\long macro:->\exp_args:NnV \str_if_eq:nnTF }
{retaining \str_if_eq:onTF=\long macro:->\exp_args:No \str_if_eq:nnTF }
{retaining \str_if_eq:vnTF=\long macro:->\exp_args:Nv \str_if_eq:nnTF }
{retaining \str_if_eq:VnTF=\long macro:->\exp_args:NV \str_if_eq:nnTF }
{retaining \str_if_eq:nvF=\long macro:->\exp_args:Nnv \str_if_eq:nnF }
{retaining \str_if_eq:VVF=\long macro:->\exp_args:NVV \str_if_eq:nnF }
{retaining \str_if_eq:noF=\long macro:->\exp_args:Nno \str_if_eq:nnF }
{retaining \str_if_eq:nVF=\long macro:->\exp_args:NnV \str_if_eq:nnF }
{retaining \str_if_eq:onF=\long macro:->\exp_args:No \str_if_eq:nnF }
{retaining \str_if_eq:vnF=\long macro:->\exp_args:Nv \str_if_eq:nnF }
{retaining \str_if_eq:VnF=\long macro:->\exp_args:NV \str_if_eq:nnF }
{retaining \str_if_eq:nvT=\long macro:->\exp_args:Nnv \str_if_eq:nnT }
{retaining \str_if_eq:VVT=\long macro:->\exp_args:NVV \str_if_eq:nnT }
{retaining \str_if_eq:noT=\long macro:->\exp_args:Nno \str_if_eq:nnT }
{retaining \str_if_eq:nVT=\long macro:->\exp_args:NnV \str_if_eq:nnT }
{retaining \str_if_eq:onT=\long macro:->\exp_args:No \str_if_eq:nnT }
{retaining \str_if_eq:vnT=\long macro:->\exp_args:Nv \str_if_eq:nnT }
{retaining \str_if_eq:VnT=\long macro:->\exp_args:NV \str_if_eq:nnT }
{retaining \str_if_eq_p:nv=\long macro:->\exp_args:Nnv \str_if_eq_p:nn }
{retaining \str_if_eq_p:VV=\long macro:->\exp_args:NVV \str_if_eq_p:nn }
{retaining \str_if_eq_p:no=\long macro:->\exp_args:Nno \str_if_eq_p:nn }
{retaining \str_if_eq_p:nV=\long macro:->\exp_args:NnV \str_if_eq_p:nn }
{retaining \str_if_eq_p:on=\long macro:->\exp_args:No \str_if_eq_p:nn }
{retaining \str_if_eq_p:vn=\long macro:->\exp_args:Nv \str_if_eq_p:nn }
{retaining \str_if_eq_p:Vn=\long macro:->\exp_args:NV \str_if_eq_p:nn }
{retaining \str_if_eq:nnTF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\exp_not:n \ETC.}
{retaining \str_if_eq:nnF=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\exp_not:n \ETC.}
{retaining \str_if_eq:nnT=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\exp_not:n \ETC.}
{retaining \str_if_eq_p:nn=\long macro:#1#2->\if:w 0\__str_if_eq:nn {\exp_not:n \ETC.}
{retaining \str_compare:eNeTF=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare:eNeF=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare:eNeT=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare_p:eNe=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare:nNnTF=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare:nNnF=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare:nNnT=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_compare_p:nNn=\long macro:#1#2#3->\if_int_compare:w \__str_if_eq:nn \ETC.}
{retaining \str_if_empty:nTF=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \str_if_empty:nF=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \str_if_empty:nT=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \str_if_empty_p:n=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \str_if_empty:cTF=\long macro:->\exp_args:Nc \tl_if_empty:NTF }
{retaining \str_if_empty:cF=\long macro:->\exp_args:Nc \tl_if_empty:NF }
{retaining \str_if_empty:cT=\long macro:->\exp_args:Nc \tl_if_empty:NT }
{retaining \str_if_empty_p:c=\long macro:->\exp_args:Nc \tl_if_empty_p:N }
{retaining \str_if_empty:NTF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \ETC.}
{retaining \str_if_empty:NF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \ETC.}
{retaining \str_if_empty:NT=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_T_true:w \ETC.}
{retaining \str_if_empty_p:N=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \ETC.}
{retaining \str_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \str_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \str_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \str_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \str_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \str_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \str_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \str_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \str_gremove_all:cn=\protected\long macro:->\exp_args:Nc \str_gremove_all:Nn }
{retaining \str_remove_all:cn=\protected\long macro:->\exp_args:Nc \str_remove_all:Nn }
{retaining \str_gremove_once:cn=\protected\long macro:->\exp_args:Nc \str_gremove_once:Nn }
{retaining \str_remove_once:cn=\protected\long macro:->\exp_args:Nc \str_remove_once:Nn }
{retaining \str_greplace_all:cnn=\protected\long macro:->\exp_args:Nc \str_greplace_all:Nnn }
{retaining \str_replace_all:cnn=\protected\long macro:->\exp_args:Nc \str_replace_all:Nnn }
{retaining \str_greplace_once:cnn=\protected\long macro:->\exp_args:Nc \str_greplace_once:Nnn }
{retaining \str_replace_once:cnn=\protected\long macro:->\exp_args:Nc \str_replace_once:Nnn }
{retaining \str_gput_right:cx=\protected\long macro:->\exp_args:Ncx \str_gput_right:Nn }
{retaining \str_gput_right:ce=\protected\long macro:->\exp_args:Nce \str_gput_right:Nn }
{retaining \str_gput_right:cV=\protected\long macro:->\exp_args:NcV \str_gput_right:Nn }
{retaining \str_gput_right:cn=\protected\long macro:->\exp_args:Nc \str_gput_right:Nn }
{retaining \str_gput_right:Nx=\protected\long macro:->\exp_args:NNx \str_gput_right:Nn }
{retaining \str_gput_right:Ne=\protected\long macro:->\exp_args:NNe \str_gput_right:Nn }
{retaining \str_gput_right:NV=\protected\long macro:->\exp_args:NNV \str_gput_right:Nn }
{retaining \str_put_right:cx=\protected\long macro:->\exp_args:Ncx \str_put_right:Nn }
{retaining \str_put_right:ce=\protected\long macro:->\exp_args:Nce \str_put_right:Nn }
{retaining \str_put_right:cV=\protected\long macro:->\exp_args:NcV \str_put_right:Nn }
{retaining \str_put_right:cn=\protected\long macro:->\exp_args:Nc \str_put_right:Nn }
{retaining \str_put_right:Nx=\protected\long macro:->\exp_args:NNx \str_put_right:Nn }
{retaining \str_put_right:Ne=\protected\long macro:->\exp_args:NNe \str_put_right:Nn }
{retaining \str_put_right:NV=\protected\long macro:->\exp_args:NNV \str_put_right:Nn }
{retaining \str_gput_left:cx=\protected\long macro:->\exp_args:Ncx \str_gput_left:Nn }
{retaining \str_gput_left:ce=\protected\long macro:->\exp_args:Nce \str_gput_left:Nn }
{retaining \str_gput_left:cV=\protected\long macro:->\exp_args:NcV \str_gput_left:Nn }
{retaining \str_gput_left:cn=\protected\long macro:->\exp_args:Nc \str_gput_left:Nn }
{retaining \str_gput_left:Nx=\protected\long macro:->\exp_args:NNx \str_gput_left:Nn }
{retaining \str_gput_left:Ne=\protected\long macro:->\exp_args:NNe \str_gput_left:Nn }
{retaining \str_gput_left:NV=\protected\long macro:->\exp_args:NNV \str_gput_left:Nn }
{retaining \str_put_left:cx=\protected\long macro:->\exp_args:Ncx \str_put_left:Nn }
{retaining \str_put_left:ce=\protected\long macro:->\exp_args:Nce \str_put_left:Nn }
{retaining \str_put_left:cV=\protected\long macro:->\exp_args:NcV \str_put_left:Nn }
{retaining \str_put_left:cn=\protected\long macro:->\exp_args:Nc \str_put_left:Nn }
{retaining \str_put_left:Nx=\protected\long macro:->\exp_args:NNx \str_put_left:Nn }
{retaining \str_put_left:Ne=\protected\long macro:->\exp_args:NNe \str_put_left:Nn }
{retaining \str_put_left:NV=\protected\long macro:->\exp_args:NNV \str_put_left:Nn }
{retaining \str_const:cx=\protected\long macro:->\exp_args:Ncx \str_const:Nn }
{retaining \str_const:ce=\protected\long macro:->\exp_args:Nce \str_const:Nn }
{retaining \str_const:cV=\protected\long macro:->\exp_args:NcV \str_const:Nn }
{retaining \str_const:cn=\protected\long macro:->\exp_args:Nc \str_const:Nn }
{retaining \str_const:Nx=\protected\long macro:->\exp_args:NNx \str_const:Nn }
{retaining \str_const:Ne=\protected\long macro:->\exp_args:NNe \str_const:Nn }
{retaining \str_const:NV=\protected\long macro:->\exp_args:NNV \str_const:Nn }
{retaining \str_gset:cx=\protected\long macro:->\exp_args:Ncx \str_gset:Nn }
{retaining \str_gset:ce=\protected\long macro:->\exp_args:Nce \str_gset:Nn }
{retaining \str_gset:cV=\protected\long macro:->\exp_args:NcV \str_gset:Nn }
{retaining \str_gset:cn=\protected\long macro:->\exp_args:Nc \str_gset:Nn }
{retaining \str_gset:Nx=\protected\long macro:->\exp_args:NNx \str_gset:Nn }
{retaining \str_gset:Ne=\protected\long macro:->\exp_args:NNe \str_gset:Nn }
{retaining \str_gset:NV=\protected\long macro:->\exp_args:NNV \str_gset:Nn }
{retaining \str_set:cx=\protected\long macro:->\exp_args:Ncx \str_set:Nn }
{retaining \str_set:ce=\protected\long macro:->\exp_args:Nce \str_set:Nn }
{retaining \str_set:cV=\protected\long macro:->\exp_args:NcV \str_set:Nn }
{retaining \str_set:cn=\protected\long macro:->\exp_args:Nc \str_set:Nn }
{retaining \str_set:Nx=\protected\long macro:->\exp_args:NNx \str_set:Nn }
{retaining \str_set:Ne=\protected\long macro:->\exp_args:NNe \str_set:Nn }
{retaining \str_set:NV=\protected\long macro:->\exp_args:NNV \str_set:Nn }
{retaining \str_gconcat:ccc=\protected\long macro:->\exp_args:Nccc \str_gconcat:NNN }
{retaining \str_concat:ccc=\protected\long macro:->\exp_args:Nccc \str_concat:NNN }
{retaining \str_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \str_gset_eq:NN }
{retaining \str_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \str_gset_eq:NN }
{retaining \str_gset_eq:cN=\protected\long macro:->\exp_args:Nc \str_gset_eq:NN }
{retaining \str_set_eq:cc=\protected\long macro:->\exp_args:Ncc \str_set_eq:NN }
{retaining \str_set_eq:Nc=\protected\long macro:->\exp_args:NNc \str_set_eq:NN }
{retaining \str_set_eq:cN=\protected\long macro:->\exp_args:Nc \str_set_eq:NN }
{retaining \__str_quark_recursion_tail:w=\long macro:#1\q__str_recursion_tail #2?#3?!\ETC.}
{retaining \__str_use_i_delimit_by_q_recursion_stop:nw=\long macro:#1#2\q__str_recursion_stop ->#1}
{restoring \__tl_tmp:w=undefined}
{retaining \tl_build_gput_left:Nx=\protected\long macro:->\exp_args:NNx \tl_build_gput_left:Nn }
{retaining \tl_build_gput_left:Ne=\protected\long macro:->\exp_args:NNe \tl_build_gput_left:Nn }
{retaining \tl_build_put_left:Nx=\protected\long macro:->\exp_args:NNx \tl_build_put_left:Nn }
{retaining \tl_build_put_left:Ne=\protected\long macro:->\exp_args:NNe \tl_build_put_left:Nn }
{retaining \tl_build_gput_right:Nx=\protected\long macro:->\exp_args:NNx \tl_build_gput_right:Nn }
{retaining \tl_build_gput_right:Ne=\protected\long macro:->\exp_args:NNe \tl_build_gput_right:Nn }
{retaining \tl_build_put_right:Nx=\protected\long macro:->\exp_args:NNx \tl_build_put_right:Nn }
{retaining \tl_build_put_right:Ne=\protected\long macro:->\exp_args:NNe \tl_build_put_right:Nn }
{retaining \tl_log:x=\protected\long macro:->\exp_args:Nx \tl_log:n }
{retaining \tl_log:e=\protected\long macro:->\exp_args:Ne \tl_log:n }
{retaining \tl_show:x=\protected\long macro:->\exp_args:Nx \tl_show:n }
{retaining \tl_show:e=\protected\long macro:->\exp_args:Ne \tl_show:n }
{retaining \tl_log:c=\protected\long macro:->\exp_args:Nc \tl_log:N }
{retaining \tl_show:c=\protected\long macro:->\exp_args:Nc \tl_show:N }
{retaining \__tl_range_collect:ff=\long macro:->\exp_args:Nff \__tl_range_collect:nn }
{retaining \tl_range:cnn=\long macro:->\exp_args:Nc \tl_range:Nnn }
{retaining \tl_rand_item:c=\long macro:->\exp_args:Nc \tl_rand_item:N }
{retaining \tl_item:cn=\long macro:->\exp_args:Nc \tl_item:Nn }
{retaining \tl_greverse:c=\protected\long macro:->\exp_args:Nc \tl_greverse:N }
{retaining \tl_reverse:c=\protected\long macro:->\exp_args:Nc \tl_reverse:N }
{retaining \tl_reverse:e=\long macro:->\exp_args:Ne \tl_reverse:n }
{retaining \tl_reverse:f=\long macro:->\exp_args:Nf \tl_reverse:n }
{retaining \tl_reverse:V=\long macro:->\exp_args:NV \tl_reverse:n }
{retaining \tl_reverse:o=\long macro:->\exp_args:No \tl_reverse:n }
{retaining \tl_if_head_is_space:nTF=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_space:w \ETC.}
{retaining \tl_if_head_is_space:nF=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_space:w \ETC.}
{retaining \tl_if_head_is_space:nT=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_space:w \ETC.}
{retaining \tl_if_head_is_space_p:n=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_space:w \ETC.}
{retaining \tl_if_head_is_group:nTF=\long macro:#1->\if:w \exp_after:wN \use_none:n \ETC.}
{retaining \tl_if_head_is_group:nF=\long macro:#1->\if:w \exp_after:wN \use_none:n \ETC.}
{retaining \tl_if_head_is_group:nT=\long macro:#1->\if:w \exp_after:wN \use_none:n \ETC.}
{retaining \tl_if_head_is_group_p:n=\long macro:#1->\if:w \exp_after:wN \use_none:n \ETC.}
{retaining \tl_if_head_is_N_type:nTF=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_auxi:w \ETC.}
{retaining \tl_if_head_is_N_type:nF=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_auxi:w \ETC.}
{retaining \tl_if_head_is_N_type:nT=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_auxi:w \ETC.}
{retaining \tl_if_head_is_N_type_p:n=\long macro:#1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_auxi:w \ETC.}
{retaining \tl_if_head_eq_meaning:eNF=\long macro:->\exp_args:Ne \tl_if_head_eq_meaning:nNF }
{retaining \tl_if_head_eq_meaning:VNF=\long macro:->\exp_args:NV \tl_if_head_eq_meaning:nNF }
{retaining \tl_if_head_eq_meaning:eNT=\long macro:->\exp_args:Ne \tl_if_head_eq_meaning:nNT }
{retaining \tl_if_head_eq_meaning:VNT=\long macro:->\exp_args:NV \tl_if_head_eq_meaning:nNT }
{retaining \tl_if_head_eq_meaning:eNTF=\long macro:->\exp_args:Ne \tl_if_head_eq_meaning:nNTF }
{retaining \tl_if_head_eq_meaning:VNTF=\long macro:->\exp_args:NV \tl_if_head_eq_meaning:nNTF }
{retaining \tl_if_head_eq_meaning_p:eN=\long macro:->\exp_args:Ne \tl_if_head_eq_meaning_p:nN }
{retaining \tl_if_head_eq_meaning_p:VN=\long macro:->\exp_args:NV \tl_if_head_eq_meaning_p:nN }
{retaining \tl_if_head_eq_meaning:nNTF=\long macro:#1#2->\tl_if_head_is_N_type:nTF {#1\ETC.}
{retaining \tl_if_head_eq_meaning:nNF=\long macro:#1#2->\tl_if_head_is_N_type:nTF {#1\ETC.}
{retaining \tl_if_head_eq_meaning:nNT=\long macro:#1#2->\tl_if_head_is_N_type:nTF {#1\ETC.}
{retaining \tl_if_head_eq_meaning_p:nN=\long macro:#1#2->\tl_if_head_is_N_type:nTF {#1\ETC.}
{retaining \tl_if_head_eq_catcode:oNF=\long macro:->\exp_args:No \tl_if_head_eq_catcode:nNF }
{retaining \tl_if_head_eq_catcode:eNF=\long macro:->\exp_args:Ne \tl_if_head_eq_catcode:nNF }
{retaining \tl_if_head_eq_catcode:VNF=\long macro:->\exp_args:NV \tl_if_head_eq_catcode:nNF }
{retaining \tl_if_head_eq_catcode:oNT=\long macro:->\exp_args:No \tl_if_head_eq_catcode:nNT }
{retaining \tl_if_head_eq_catcode:eNT=\long macro:->\exp_args:Ne \tl_if_head_eq_catcode:nNT }
{retaining \tl_if_head_eq_catcode:VNT=\long macro:->\exp_args:NV \tl_if_head_eq_catcode:nNT }
{retaining \tl_if_head_eq_catcode:oNTF=\long macro:->\exp_args:No \tl_if_head_eq_catcode:nNTF }
{retaining \tl_if_head_eq_catcode:eNTF=\long macro:->\exp_args:Ne \tl_if_head_eq_catcode:nNTF }
{retaining \tl_if_head_eq_catcode:VNTF=\long macro:->\exp_args:NV \tl_if_head_eq_catcode:nNTF }
{retaining \tl_if_head_eq_catcode_p:oN=\long macro:->\exp_args:No \tl_if_head_eq_catcode_p:nN }
{retaining \tl_if_head_eq_catcode_p:eN=\long macro:->\exp_args:Ne \tl_if_head_eq_catcode_p:nN }
{retaining \tl_if_head_eq_catcode_p:VN=\long macro:->\exp_args:NV \tl_if_head_eq_catcode_p:nN }
{retaining \tl_if_head_eq_catcode:nNTF=\long macro:#1#2->\if_catcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_catcode:nNF=\long macro:#1#2->\if_catcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_catcode:nNT=\long macro:#1#2->\if_catcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_catcode_p:nN=\long macro:#1#2->\if_catcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_charcode:fNF=\long macro:->\exp_args:Nf \tl_if_head_eq_charcode:nNF }
{retaining \tl_if_head_eq_charcode:eNF=\long macro:->\exp_args:Ne \tl_if_head_eq_charcode:nNF }
{retaining \tl_if_head_eq_charcode:VNF=\long macro:->\exp_args:NV \tl_if_head_eq_charcode:nNF }
{retaining \tl_if_head_eq_charcode:fNT=\long macro:->\exp_args:Nf \tl_if_head_eq_charcode:nNT }
{retaining \tl_if_head_eq_charcode:eNT=\long macro:->\exp_args:Ne \tl_if_head_eq_charcode:nNT }
{retaining \tl_if_head_eq_charcode:VNT=\long macro:->\exp_args:NV \tl_if_head_eq_charcode:nNT }
{retaining \tl_if_head_eq_charcode:fNTF=\long macro:->\exp_args:Nf \tl_if_head_eq_charcode:nNTF }
{retaining \tl_if_head_eq_charcode:eNTF=\long macro:->\exp_args:Ne \tl_if_head_eq_charcode:nNTF }
{retaining \tl_if_head_eq_charcode:VNTF=\long macro:->\exp_args:NV \tl_if_head_eq_charcode:nNTF }
{retaining \tl_if_head_eq_charcode_p:fN=\long macro:->\exp_args:Nf \tl_if_head_eq_charcode_p:nN }
{retaining \tl_if_head_eq_charcode_p:eN=\long macro:->\exp_args:Ne \tl_if_head_eq_charcode_p:nN }
{retaining \tl_if_head_eq_charcode_p:VN=\long macro:->\exp_args:NV \tl_if_head_eq_charcode_p:nN }
{retaining \tl_if_head_eq_charcode:nNTF=\long macro:#1#2->\if_charcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_charcode:nNF=\long macro:#1#2->\if_charcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_charcode:nNT=\long macro:#1#2->\if_charcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_if_head_eq_charcode_p:nN=\long macro:#1#2->\if_charcode:w \tl_if_head_is_N_type:nTF \ETC.}
{retaining \tl_tail:f=\long macro:->\exp_args:Nf \tl_tail:n }
{retaining \tl_tail:v=\long macro:->\exp_args:Nv \tl_tail:n }
{retaining \tl_tail:V=\long macro:->\exp_args:NV \tl_tail:n }
{retaining \tl_head:f=\long macro:->\exp_args:Nf \tl_head:n }
{retaining \tl_head:v=\long macro:->\exp_args:Nv \tl_head:n }
{retaining \tl_head:V=\long macro:->\exp_args:NV \tl_head:n }
{retaining \tl_gtrim_spaces:c=\protected\long macro:->\exp_args:Nc \tl_gtrim_spaces:N }
{retaining \tl_trim_spaces:c=\protected\long macro:->\exp_args:Nc \tl_trim_spaces:N }
{retaining \tl_trim_spaces_apply:oN=\long macro:->\exp_args:No \tl_trim_spaces_apply:nN }
{retaining \tl_trim_spaces:o=\long macro:->\exp_args:No \tl_trim_spaces:n }
{retaining \tl_trim_spaces:e=\long macro:->\exp_args:Ne \tl_trim_spaces:n }
{retaining \tl_trim_spaces:v=\long macro:->\exp_args:Nv \tl_trim_spaces:n }
{retaining \tl_trim_spaces:V=\long macro:->\exp_args:NV \tl_trim_spaces:n }
{retaining \tl_count:c=\long macro:->\exp_args:Nc \tl_count:N }
{retaining \tl_count:o=\long macro:->\exp_args:No \tl_count:n }
{retaining \tl_count:e=\long macro:->\exp_args:Ne \tl_count:n }
{retaining \tl_count:v=\long macro:->\exp_args:Nv \tl_count:n }
{retaining \tl_count:V=\long macro:->\exp_args:NV \tl_count:n }
{retaining \tl_use:c=\long macro:->\exp_args:Nc \tl_use:N }
{retaining \tl_to_str:c=\long macro:->\exp_args:Nc \tl_to_str:N }
{retaining \tl_to_str:e=\long macro:->\exp_args:Ne \tl_to_str:n }
{retaining \tl_to_str:v=\long macro:->\exp_args:Nv \tl_to_str:n }
{retaining \tl_to_str:V=\long macro:->\exp_args:NV \tl_to_str:n }
{retaining \tl_to_str:o=\long macro:->\exp_args:No \tl_to_str:n }
{retaining \tl_map_variable:cNn=\protected\long macro:->\exp_args:Nc \tl_map_variable:NNn }
{retaining \tl_map_tokens:cn=\long macro:->\exp_args:Nc \tl_map_tokens:Nn }
{retaining \tl_map_inline:cn=\protected\long macro:->\exp_args:Nc \tl_map_inline:Nn }
{retaining \tl_map_function:cN=\long macro:->\exp_args:Nc \tl_map_function:NN }
{retaining \tl_if_single_token:nTF=\long macro:#1->\tl_if_head_is_N_type:nTF {#1}\ETC.}
{retaining \tl_if_single_token:nF=\long macro:#1->\tl_if_head_is_N_type:nTF {#1}\ETC.}
{retaining \tl_if_single_token:nT=\long macro:#1->\tl_if_head_is_N_type:nTF {#1}\ETC.}
{retaining \tl_if_single_token_p:n=\long macro:#1->\tl_if_head_is_N_type:nTF {#1}\ETC.}
{retaining \tl_if_single:nTF=\long macro:#1->\if:w \scan_stop: \exp_after:wN \ETC.}
{retaining \tl_if_single:nF=\long macro:#1->\if:w \scan_stop: \exp_after:wN \ETC.}
{retaining \tl_if_single:nT=\long macro:#1->\if:w \scan_stop: \exp_after:wN \ETC.}
{retaining \tl_if_single_p:n=\long macro:#1->\if:w \scan_stop: \exp_after:wN \ETC.}
{retaining \tl_if_single:cTF=\long macro:->\exp_args:Nc \tl_if_single:NTF }
{retaining \tl_if_single:cF=\long macro:->\exp_args:Nc \tl_if_single:NF }
{retaining \tl_if_single:cT=\long macro:->\exp_args:Nc \tl_if_single:NT }
{retaining \tl_if_single_p:c=\long macro:->\exp_args:Nc \tl_if_single_p:N }
{retaining \tl_if_novalue:nTF=\long macro:#1->\__tl_if_empty_if:o {\__tl_if_novalue:w \ETC.}
{retaining \tl_if_novalue:nF=\long macro:#1->\__tl_if_empty_if:o {\__tl_if_novalue:w \ETC.}
{retaining \tl_if_novalue:nT=\long macro:#1->\__tl_if_empty_if:o {\__tl_if_novalue:w \ETC.}
{retaining \tl_if_novalue_p:n=\long macro:#1->\__tl_if_empty_if:o {\__tl_if_novalue:w \ETC.}
{retaining \__tl_tmp:w=undefined}
{retaining \tl_if_in:noTF=\protected\long macro:->\exp_args:Nno \tl_if_in:nnTF }
{retaining \tl_if_in:nVTF=\protected\long macro:->\exp_args:NnV \tl_if_in:nnTF }
{retaining \tl_if_in:ooTF=\protected\long macro:->\exp_args:Noo \tl_if_in:nnTF }
{retaining \tl_if_in:onTF=\protected\long macro:->\exp_args:No \tl_if_in:nnTF }
{retaining \tl_if_in:VVTF=\protected\long macro:->\exp_args:NVV \tl_if_in:nnTF }
{retaining \tl_if_in:VnTF=\protected\long macro:->\exp_args:NV \tl_if_in:nnTF }
{retaining \tl_if_in:noF=\protected\long macro:->\exp_args:Nno \tl_if_in:nnF }
{retaining \tl_if_in:nVF=\protected\long macro:->\exp_args:NnV \tl_if_in:nnF }
{retaining \tl_if_in:ooF=\protected\long macro:->\exp_args:Noo \tl_if_in:nnF }
{retaining \tl_if_in:onF=\protected\long macro:->\exp_args:No \tl_if_in:nnF }
{retaining \tl_if_in:VVF=\protected\long macro:->\exp_args:NVV \tl_if_in:nnF }
{retaining \tl_if_in:VnF=\protected\long macro:->\exp_args:NV \tl_if_in:nnF }
{retaining \tl_if_in:noT=\protected\long macro:->\exp_args:Nno \tl_if_in:nnT }
{retaining \tl_if_in:nVT=\protected\long macro:->\exp_args:NnV \tl_if_in:nnT }
{retaining \tl_if_in:ooT=\protected\long macro:->\exp_args:Noo \tl_if_in:nnT }
{retaining \tl_if_in:onT=\protected\long macro:->\exp_args:No \tl_if_in:nnT }
{retaining \tl_if_in:VVT=\protected\long macro:->\exp_args:NVV \tl_if_in:nnT }
{retaining \tl_if_in:VnT=\protected\long macro:->\exp_args:NV \tl_if_in:nnT }
{retaining \tl_if_in:nnTF=\protected\long macro:#1#2->\scan_stop: \if_false: {\fi: \ETC.}
{retaining \tl_if_in:nnF=\protected\long macro:#1#2->\scan_stop: \if_false: {\fi: \ETC.}
{retaining \tl_if_in:nnT=\protected\long macro:#1#2->\scan_stop: \if_false: {\fi: \ETC.}
{retaining \tl_if_in:coTF=\protected\long macro:->\exp_args:Nco \tl_if_in:NnTF }
{retaining \tl_if_in:cVTF=\protected\long macro:->\exp_args:NcV \tl_if_in:NnTF }
{retaining \tl_if_in:cnTF=\protected\long macro:->\exp_args:Nc \tl_if_in:NnTF }
{retaining \tl_if_in:NoTF=\protected\long macro:->\exp_args:NNo \tl_if_in:NnTF }
{retaining \tl_if_in:NVTF=\protected\long macro:->\exp_args:NNV \tl_if_in:NnTF }
{retaining \tl_if_in:coF=\protected\long macro:->\exp_args:Nco \tl_if_in:NnF }
{retaining \tl_if_in:cVF=\protected\long macro:->\exp_args:NcV \tl_if_in:NnF }
{retaining \tl_if_in:cnF=\protected\long macro:->\exp_args:Nc \tl_if_in:NnF }
{retaining \tl_if_in:NoF=\protected\long macro:->\exp_args:NNo \tl_if_in:NnF }
{retaining \tl_if_in:NVF=\protected\long macro:->\exp_args:NNV \tl_if_in:NnF }
{retaining \tl_if_in:coT=\protected\long macro:->\exp_args:Nco \tl_if_in:NnT }
{retaining \tl_if_in:cVT=\protected\long macro:->\exp_args:NcV \tl_if_in:NnT }
{retaining \tl_if_in:cnT=\protected\long macro:->\exp_args:Nc \tl_if_in:NnT }
{retaining \tl_if_in:NoT=\protected\long macro:->\exp_args:NNo \tl_if_in:NnT }
{retaining \tl_if_in:NVT=\protected\long macro:->\exp_args:NNV \tl_if_in:NnT }
{retaining \tl_if_eq:xxF=\protected\long macro:->\exp_args:Nxx \tl_if_eq:nnF }
{retaining \tl_if_eq:xnF=\protected\long macro:->\exp_args:Nx \tl_if_eq:nnF }
{retaining \tl_if_eq:eeF=\protected\long macro:->\exp_args:Nee \tl_if_eq:nnF }
{retaining \tl_if_eq:enF=\protected\long macro:->\exp_args:Ne \tl_if_eq:nnF }
{retaining \tl_if_eq:VnF=\protected\long macro:->\exp_args:NV \tl_if_eq:nnF }
{retaining \tl_if_eq:nxF=\protected\long macro:->\exp_args:Nnx \tl_if_eq:nnF }
{retaining \tl_if_eq:neF=\protected\long macro:->\exp_args:Nne \tl_if_eq:nnF }
{retaining \tl_if_eq:nVF=\protected\long macro:->\exp_args:NnV \tl_if_eq:nnF }
{retaining \tl_if_eq:xxT=\protected\long macro:->\exp_args:Nxx \tl_if_eq:nnT }
{retaining \tl_if_eq:xnT=\protected\long macro:->\exp_args:Nx \tl_if_eq:nnT }
{retaining \tl_if_eq:eeT=\protected\long macro:->\exp_args:Nee \tl_if_eq:nnT }
{retaining \tl_if_eq:enT=\protected\long macro:->\exp_args:Ne \tl_if_eq:nnT }
{retaining \tl_if_eq:VnT=\protected\long macro:->\exp_args:NV \tl_if_eq:nnT }
{retaining \tl_if_eq:nxT=\protected\long macro:->\exp_args:Nnx \tl_if_eq:nnT }
{retaining \tl_if_eq:neT=\protected\long macro:->\exp_args:Nne \tl_if_eq:nnT }
{retaining \tl_if_eq:nVT=\protected\long macro:->\exp_args:NnV \tl_if_eq:nnT }
{retaining \tl_if_eq:xxTF=\protected\long macro:->\exp_args:Nxx \tl_if_eq:nnTF }
{retaining \tl_if_eq:xnTF=\protected\long macro:->\exp_args:Nx \tl_if_eq:nnTF }
{retaining \tl_if_eq:eeTF=\protected\long macro:->\exp_args:Nee \tl_if_eq:nnTF }
{retaining \tl_if_eq:enTF=\protected\long macro:->\exp_args:Ne \tl_if_eq:nnTF }
{retaining \tl_if_eq:VnTF=\protected\long macro:->\exp_args:NV \tl_if_eq:nnTF }
{retaining \tl_if_eq:nxTF=\protected\long macro:->\exp_args:Nnx \tl_if_eq:nnTF }
{retaining \tl_if_eq:neTF=\protected\long macro:->\exp_args:Nne \tl_if_eq:nnTF }
{retaining \tl_if_eq:nVTF=\protected\long macro:->\exp_args:NnV \tl_if_eq:nnTF }
{retaining \tl_if_eq:nnTF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_a_tl \ETC.}
{retaining \tl_if_eq:nnF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_a_tl \ETC.}
{retaining \tl_if_eq:nnT=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_a_tl \ETC.}
{retaining \tl_if_eq:cnF=\protected\long macro:->\exp_args:Nc \tl_if_eq:NnF }
{retaining \tl_if_eq:cnT=\protected\long macro:->\exp_args:Nc \tl_if_eq:NnT }
{retaining \tl_if_eq:cnTF=\protected\long macro:->\exp_args:Nc \tl_if_eq:NnTF }
{retaining \tl_if_eq:NnTF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_b_tl \ETC.}
{retaining \tl_if_eq:NnF=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_b_tl \ETC.}
{retaining \tl_if_eq:NnT=\protected\long macro:#1#2->\group_begin: \tl_set:Nn \l__tl_internal_b_tl \ETC.}
{retaining \tl_if_eq:ccF=\long macro:->\exp_args:Ncc \tl_if_eq:NNF }
{retaining \tl_if_eq:cNF=\long macro:->\exp_args:Nc \tl_if_eq:NNF }
{retaining \tl_if_eq:NcF=\long macro:->\exp_args:NNc \tl_if_eq:NNF }
{retaining \tl_if_eq:ccT=\long macro:->\exp_args:Ncc \tl_if_eq:NNT }
{retaining \tl_if_eq:cNT=\long macro:->\exp_args:Nc \tl_if_eq:NNT }
{retaining \tl_if_eq:NcT=\long macro:->\exp_args:NNc \tl_if_eq:NNT }
{retaining \tl_if_eq:ccTF=\long macro:->\exp_args:Ncc \tl_if_eq:NNTF }
{retaining \tl_if_eq:cNTF=\long macro:->\exp_args:Nc \tl_if_eq:NNTF }
{retaining \tl_if_eq:NcTF=\long macro:->\exp_args:NNc \tl_if_eq:NNTF }
{retaining \tl_if_eq_p:cc=\long macro:->\exp_args:Ncc \tl_if_eq_p:NN }
{retaining \tl_if_eq_p:cN=\long macro:->\exp_args:Nc \tl_if_eq_p:NN }
{retaining \tl_if_eq_p:Nc=\long macro:->\exp_args:NNc \tl_if_eq_p:NN }
{retaining \tl_if_eq:NNTF=\long macro:#1#2->\if_meaning:w #1#2\__prg_TF_true:w \ETC.}
{retaining \tl_if_eq:NNF=\long macro:#1#2->\if_meaning:w #1#2\__prg_F_true:w \ETC.}
{retaining \tl_if_eq:NNT=\long macro:#1#2->\if_meaning:w #1#2\__prg_T_true:w \ETC.}
{retaining \tl_if_eq_p:NN=\long macro:#1#2->\if_meaning:w #1#2\__prg_p_true:w \ETC.}
{retaining \tl_if_blank:oTF=\long macro:->\exp_args:No \tl_if_blank:nTF }
{retaining \tl_if_blank:VTF=\long macro:->\exp_args:NV \tl_if_blank:nTF }
{retaining \tl_if_blank:eTF=\long macro:->\exp_args:Ne \tl_if_blank:nTF }
{retaining \tl_if_blank:oF=\long macro:->\exp_args:No \tl_if_blank:nF }
{retaining \tl_if_blank:VF=\long macro:->\exp_args:NV \tl_if_blank:nF }
{retaining \tl_if_blank:eF=\long macro:->\exp_args:Ne \tl_if_blank:nF }
{retaining \tl_if_blank:oT=\long macro:->\exp_args:No \tl_if_blank:nT }
{retaining \tl_if_blank:VT=\long macro:->\exp_args:NV \tl_if_blank:nT }
{retaining \tl_if_blank:eT=\long macro:->\exp_args:Ne \tl_if_blank:nT }
{retaining \tl_if_blank_p:o=\long macro:->\exp_args:No \tl_if_blank_p:n }
{retaining \tl_if_blank_p:V=\long macro:->\exp_args:NV \tl_if_blank_p:n }
{retaining \tl_if_blank_p:e=\long macro:->\exp_args:Ne \tl_if_blank_p:n }
{retaining \tl_if_blank:nTF=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_blank:nF=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_blank:nT=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_blank_p:n=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_empty:oF=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_empty:oT=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_empty:oTF=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_empty_p:o=\long macro:#1->\if:w \scan_stop: \__kernel_tl_to_str:w \ETC.}
{retaining \tl_if_empty:eF=\long macro:->\exp_args:Ne \tl_if_empty:nF }
{retaining \tl_if_empty:VF=\long macro:->\exp_args:NV \tl_if_empty:nF }
{retaining \tl_if_empty:eT=\long macro:->\exp_args:Ne \tl_if_empty:nT }
{retaining \tl_if_empty:VT=\long macro:->\exp_args:NV \tl_if_empty:nT }
{retaining \tl_if_empty:eTF=\long macro:->\exp_args:Ne \tl_if_empty:nTF }
{retaining \tl_if_empty:VTF=\long macro:->\exp_args:NV \tl_if_empty:nTF }
{retaining \tl_if_empty_p:e=\long macro:->\exp_args:Ne \tl_if_empty_p:n }
{retaining \tl_if_empty_p:V=\long macro:->\exp_args:NV \tl_if_empty_p:n }
{retaining \tl_if_empty:nF=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \tl_if_empty:nT=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \tl_if_empty:nTF=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \tl_if_empty_p:n=\long macro:#1->\if:w \scan_stop: \tl_to_str:n \ETC.}
{retaining \tl_if_empty:cTF=\long macro:->\exp_args:Nc \tl_if_empty:NTF }
{retaining \tl_if_empty:cF=\long macro:->\exp_args:Nc \tl_if_empty:NF }
{retaining \tl_if_empty:cT=\long macro:->\exp_args:Nc \tl_if_empty:NT }
{retaining \tl_if_empty_p:c=\long macro:->\exp_args:Nc \tl_if_empty_p:N }
{retaining \tl_if_empty:NTF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \ETC.}
{retaining \tl_if_empty:NF=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \ETC.}
{retaining \tl_if_empty:NT=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_T_true:w \ETC.}
{retaining \tl_if_empty_p:N=\long macro:#1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \ETC.}
{retaining \tl_gremove_all:cx=\protected\long macro:->\exp_args:Ncx \tl_gremove_all:Nn }
{retaining \tl_gremove_all:Nx=\protected\long macro:->\exp_args:NNx \tl_gremove_all:Nn }
{retaining \tl_gremove_all:ce=\protected\long macro:->\exp_args:Nce \tl_gremove_all:Nn }
{retaining \tl_gremove_all:cV=\protected\long macro:->\exp_args:NcV \tl_gremove_all:Nn }
{retaining \tl_gremove_all:cn=\protected\long macro:->\exp_args:Nc \tl_gremove_all:Nn }
{retaining \tl_gremove_all:Ne=\protected\long macro:->\exp_args:NNe \tl_gremove_all:Nn }
{retaining \tl_gremove_all:NV=\protected\long macro:->\exp_args:NNV \tl_gremove_all:Nn }
{retaining \tl_remove_all:cx=\protected\long macro:->\exp_args:Ncx \tl_remove_all:Nn }
{retaining \tl_remove_all:Nx=\protected\long macro:->\exp_args:NNx \tl_remove_all:Nn }
{retaining \tl_remove_all:ce=\protected\long macro:->\exp_args:Nce \tl_remove_all:Nn }
{retaining \tl_remove_all:cV=\protected\long macro:->\exp_args:NcV \tl_remove_all:Nn }
{retaining \tl_remove_all:cn=\protected\long macro:->\exp_args:Nc \tl_remove_all:Nn }
{retaining \tl_remove_all:Ne=\protected\long macro:->\exp_args:NNe \tl_remove_all:Nn }
{retaining \tl_remove_all:NV=\protected\long macro:->\exp_args:NNV \tl_remove_all:Nn }
{retaining \tl_gremove_once:ce=\protected\long macro:->\exp_args:Nce \tl_gremove_once:Nn }
{retaining \tl_gremove_once:cV=\protected\long macro:->\exp_args:NcV \tl_gremove_once:Nn }
{retaining \tl_gremove_once:cn=\protected\long macro:->\exp_args:Nc \tl_gremove_once:Nn }
{retaining \tl_gremove_once:Ne=\protected\long macro:->\exp_args:NNe \tl_gremove_once:Nn }
{retaining \tl_gremove_once:NV=\protected\long macro:->\exp_args:NNV \tl_gremove_once:Nn }
{retaining \tl_remove_once:ce=\protected\long macro:->\exp_args:Nce \tl_remove_once:Nn }
{retaining \tl_remove_once:cV=\protected\long macro:->\exp_args:NcV \tl_remove_once:Nn }
{retaining \tl_remove_once:cn=\protected\long macro:->\exp_args:Nc \tl_remove_once:Nn }
{retaining \tl_remove_once:Ne=\protected\long macro:->\exp_args:NNe \tl_remove_once:Nn }
{retaining \tl_remove_once:NV=\protected\long macro:->\exp_args:NNV \tl_remove_once:Nn }
{retaining \tl_greplace_all:cxx=\protected\long macro:->\exp_args:Ncxx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cnx=\protected\long macro:->\exp_args:Ncnx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cxn=\protected\long macro:->\exp_args:Ncx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nxx=\protected\long macro:->\exp_args:NNxx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nnx=\protected\long macro:->\exp_args:NNnx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nxn=\protected\long macro:->\exp_args:NNx \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cee=\protected\long macro:->\exp_args:Ncee \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cen=\protected\long macro:->\exp_args:Nce \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cVn=\protected\long macro:->\exp_args:NcV \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cne=\protected\long macro:->\exp_args:Ncne \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cnV=\protected\long macro:->\exp_args:NcnV \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:cnn=\protected\long macro:->\exp_args:Nc \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nee=\protected\long macro:->\exp_args:NNee \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nen=\protected\long macro:->\exp_args:NNe \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:NVn=\protected\long macro:->\exp_args:NNV \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:Nne=\protected\long macro:->\exp_args:NNne \tl_greplace_all:Nnn }
{retaining \tl_greplace_all:NnV=\protected\long macro:->\exp_args:NNnV \tl_greplace_all:Nnn }
{retaining \tl_replace_all:cxx=\protected\long macro:->\exp_args:Ncxx \tl_replace_all:Nnn }
{retaining \tl_replace_all:cnx=\protected\long macro:->\exp_args:Ncnx \tl_replace_all:Nnn }
{retaining \tl_replace_all:cxn=\protected\long macro:->\exp_args:Ncx \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nxx=\protected\long macro:->\exp_args:NNxx \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nnx=\protected\long macro:->\exp_args:NNnx \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nxn=\protected\long macro:->\exp_args:NNx \tl_replace_all:Nnn }
{retaining \tl_replace_all:cee=\protected\long macro:->\exp_args:Ncee \tl_replace_all:Nnn }
{retaining \tl_replace_all:cen=\protected\long macro:->\exp_args:Nce \tl_replace_all:Nnn }
{retaining \tl_replace_all:cVn=\protected\long macro:->\exp_args:NcV \tl_replace_all:Nnn }
{retaining \tl_replace_all:cne=\protected\long macro:->\exp_args:Ncne \tl_replace_all:Nnn }
{retaining \tl_replace_all:cnV=\protected\long macro:->\exp_args:NcnV \tl_replace_all:Nnn }
{retaining \tl_replace_all:cnn=\protected\long macro:->\exp_args:Nc \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nee=\protected\long macro:->\exp_args:NNee \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nen=\protected\long macro:->\exp_args:NNe \tl_replace_all:Nnn }
{retaining \tl_replace_all:NVn=\protected\long macro:->\exp_args:NNV \tl_replace_all:Nnn }
{retaining \tl_replace_all:Nne=\protected\long macro:->\exp_args:NNne \tl_replace_all:Nnn }
{retaining \tl_replace_all:NnV=\protected\long macro:->\exp_args:NNnV \tl_replace_all:Nnn }
{retaining \tl_greplace_once:cxx=\protected\long macro:->\exp_args:Ncxx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cnx=\protected\long macro:->\exp_args:Ncnx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cxn=\protected\long macro:->\exp_args:Ncx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nxx=\protected\long macro:->\exp_args:NNxx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nnx=\protected\long macro:->\exp_args:NNnx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nxn=\protected\long macro:->\exp_args:NNx \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cee=\protected\long macro:->\exp_args:Ncee \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cen=\protected\long macro:->\exp_args:Nce \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cVn=\protected\long macro:->\exp_args:NcV \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cne=\protected\long macro:->\exp_args:Ncne \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cnV=\protected\long macro:->\exp_args:NcnV \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:cnn=\protected\long macro:->\exp_args:Nc \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nee=\protected\long macro:->\exp_args:NNee \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nen=\protected\long macro:->\exp_args:NNe \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:NVn=\protected\long macro:->\exp_args:NNV \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:Nne=\protected\long macro:->\exp_args:NNne \tl_greplace_once:Nnn }
{retaining \tl_greplace_once:NnV=\protected\long macro:->\exp_args:NNnV \tl_greplace_once:Nnn }
{retaining \tl_replace_once:cxx=\protected\long macro:->\exp_args:Ncxx \tl_replace_once:Nnn }
{retaining \tl_replace_once:cnx=\protected\long macro:->\exp_args:Ncnx \tl_replace_once:Nnn }
{retaining \tl_replace_once:cxn=\protected\long macro:->\exp_args:Ncx \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nxx=\protected\long macro:->\exp_args:NNxx \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nnx=\protected\long macro:->\exp_args:NNnx \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nxn=\protected\long macro:->\exp_args:NNx \tl_replace_once:Nnn }
{retaining \tl_replace_once:cee=\protected\long macro:->\exp_args:Ncee \tl_replace_once:Nnn }
{retaining \tl_replace_once:cen=\protected\long macro:->\exp_args:Nce \tl_replace_once:Nnn }
{retaining \tl_replace_once:cVn=\protected\long macro:->\exp_args:NcV \tl_replace_once:Nnn }
{retaining \tl_replace_once:cne=\protected\long macro:->\exp_args:Ncne \tl_replace_once:Nnn }
{retaining \tl_replace_once:cnV=\protected\long macro:->\exp_args:NcnV \tl_replace_once:Nnn }
{retaining \tl_replace_once:cnn=\protected\long macro:->\exp_args:Nc \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nee=\protected\long macro:->\exp_args:NNee \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nen=\protected\long macro:->\exp_args:NNe \tl_replace_once:Nnn }
{retaining \tl_replace_once:NVn=\protected\long macro:->\exp_args:NNV \tl_replace_once:Nnn }
{retaining \tl_replace_once:Nne=\protected\long macro:->\exp_args:NNne \tl_replace_once:Nnn }
{retaining \tl_replace_once:NnV=\protected\long macro:->\exp_args:NNnV \tl_replace_once:Nnn }
{retaining \tl_gset_rescan:cnx=\protected\long macro:->\exp_args:Ncnx \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:cno=\protected\long macro:->\exp_args:Ncno \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:Nnx=\protected\long macro:->\exp_args:NNnx \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:Nno=\protected\long macro:->\exp_args:NNno \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:cne=\protected\long macro:->\exp_args:Ncne \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:cnV=\protected\long macro:->\exp_args:NcnV \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:cnn=\protected\long macro:->\exp_args:Nc \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:Nne=\protected\long macro:->\exp_args:NNne \tl_gset_rescan:Nnn }
{retaining \tl_gset_rescan:NnV=\protected\long macro:->\exp_args:NNnV \tl_gset_rescan:Nnn }
{retaining \tl_set_rescan:cnx=\protected\long macro:->\exp_args:Ncnx \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:cno=\protected\long macro:->\exp_args:Ncno \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:Nnx=\protected\long macro:->\exp_args:NNnx \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:Nno=\protected\long macro:->\exp_args:NNno \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:cne=\protected\long macro:->\exp_args:Ncne \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:cnV=\protected\long macro:->\exp_args:NcnV \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:cnn=\protected\long macro:->\exp_args:Nc \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:Nne=\protected\long macro:->\exp_args:NNne \tl_set_rescan:Nnn }
{retaining \tl_set_rescan:NnV=\protected\long macro:->\exp_args:NNnV \tl_set_rescan:Nnn }
{retaining \tl_rescan:nV=\protected\long macro:->\exp_args:NnV \tl_rescan:nn }
{retaining \__tl_quark_if_nil:nTF=\long macro:#1->\__quark_if_empty_if:o {\__tl_if_quark_nil:w \ETC.}
{retaining \__tl_if_quark_nil:w=\long macro:#1\q__tl_nil #2?#3?!->#1#2}
{retaining \__tl_quark_recursion_tail:w=\long macro:#1\q__tl_recursion_tail #2?#3?!->#1\ETC.}
{retaining \__tl_use_i_delimit_by_q_recursion_stop:nw=\long macro:#1#2\q__tl_recursion_stop ->#1}
{retaining \tl_gput_right:cx=\protected\long macro:->\exp_args:Ncx \tl_gput_right:Nn }
{retaining \tl_gput_right:Nx=\protected\long macro:->\exp_args:NNx \tl_gput_right:Nn }
{retaining \tl_gput_right:co=\protected\long macro:->\exp_args:Nc \tl_gput_right:No }
{retaining \tl_gput_right:ce=\protected\long macro:->\exp_args:Nc \tl_gput_right:Ne }
{retaining \tl_gput_right:cv=\protected\long macro:->\exp_args:Nc \tl_gput_right:Nv }
{retaining \tl_gput_right:cV=\protected\long macro:->\exp_args:Nc \tl_gput_right:NV }
{retaining \tl_gput_right:cn=\protected\long macro:->\exp_args:Nc \tl_gput_right:Nn }
{retaining \tl_put_right:cx=\protected\long macro:->\exp_args:Ncx \tl_put_right:Nn }
{retaining \tl_put_right:Nx=\protected\long macro:->\exp_args:NNx \tl_put_right:Nn }
{retaining \tl_put_right:co=\protected\long macro:->\exp_args:Nc \tl_put_right:No }
{retaining \tl_put_right:ce=\protected\long macro:->\exp_args:Nc \tl_put_right:Ne }
{retaining \tl_put_right:cv=\protected\long macro:->\exp_args:Nc \tl_put_right:Nv }
{retaining \tl_put_right:cV=\protected\long macro:->\exp_args:Nc \tl_put_right:NV }
{retaining \tl_put_right:cn=\protected\long macro:->\exp_args:Nc \tl_put_right:Nn }
{retaining \tl_gput_left:cx=\protected\long macro:->\exp_args:Ncx \tl_gput_left:Nn }
{retaining \tl_gput_left:Nx=\protected\long macro:->\exp_args:NNx \tl_gput_left:Nn }
{retaining \tl_gput_left:co=\protected\long macro:->\exp_args:Nc \tl_gput_left:No }
{retaining \tl_gput_left:ce=\protected\long macro:->\exp_args:Nc \tl_gput_left:Ne }
{retaining \tl_gput_left:cv=\protected\long macro:->\exp_args:Nc \tl_gput_left:Nv }
{retaining \tl_gput_left:cV=\protected\long macro:->\exp_args:Nc \tl_gput_left:NV }
{retaining \tl_gput_left:cn=\protected\long macro:->\exp_args:Nc \tl_gput_left:Nn }
{retaining \tl_put_left:cx=\protected\long macro:->\exp_args:Ncx \tl_put_left:Nn }
{retaining \tl_put_left:Nx=\protected\long macro:->\exp_args:NNx \tl_put_left:Nn }
{retaining \tl_put_left:co=\protected\long macro:->\exp_args:Nc \tl_put_left:No }
{retaining \tl_put_left:ce=\protected\long macro:->\exp_args:Nc \tl_put_left:Ne }
{retaining \tl_put_left:cv=\protected\long macro:->\exp_args:Nc \tl_put_left:Nv }
{retaining \tl_put_left:cV=\protected\long macro:->\exp_args:Nc \tl_put_left:NV }
{retaining \tl_put_left:cn=\protected\long macro:->\exp_args:Nc \tl_put_left:Nn }
{retaining \tl_gset:cx=\protected\long macro:->\exp_args:Ncx \tl_gset:Nn }
{retaining \tl_gset:Nx=\protected\long macro:->\exp_args:NNx \tl_gset:Nn }
{retaining \tl_gset:co=\protected\long macro:->\exp_args:Nc \tl_gset:No }
{retaining \tl_gset:cf=\protected\long macro:->\exp_args:Ncf \tl_gset:Nn }
{retaining \tl_gset:ce=\protected\long macro:->\exp_args:Nce \tl_gset:Nn }
{retaining \tl_gset:cv=\protected\long macro:->\exp_args:Ncv \tl_gset:Nn }
{retaining \tl_gset:cV=\protected\long macro:->\exp_args:NcV \tl_gset:Nn }
{retaining \tl_gset:cn=\protected\long macro:->\exp_args:Nc \tl_gset:Nn }
{retaining \tl_gset:Nf=\protected\long macro:->\exp_args:NNf \tl_gset:Nn }
{retaining \tl_gset:Ne=\protected\long macro:->\exp_args:NNe \tl_gset:Nn }
{retaining \tl_gset:Nv=\protected\long macro:->\exp_args:NNv \tl_gset:Nn }
{retaining \tl_gset:NV=\protected\long macro:->\exp_args:NNV \tl_gset:Nn }
{retaining \tl_set:cx=\protected\long macro:->\exp_args:Ncx \tl_set:Nn }
{retaining \tl_set:Nx=\protected\long macro:->\exp_args:NNx \tl_set:Nn }
{retaining \tl_set:co=\protected\long macro:->\exp_args:Nc \tl_set:No }
{retaining \tl_set:cf=\protected\long macro:->\exp_args:Ncf \tl_set:Nn }
{retaining \tl_set:ce=\protected\long macro:->\exp_args:Nce \tl_set:Nn }
{retaining \tl_set:cv=\protected\long macro:->\exp_args:Ncv \tl_set:Nn }
{retaining \tl_set:cV=\protected\long macro:->\exp_args:NcV \tl_set:Nn }
{retaining \tl_set:cn=\protected\long macro:->\exp_args:Nc \tl_set:Nn }
{retaining \tl_set:Nf=\protected\long macro:->\exp_args:NNf \tl_set:Nn }
{retaining \tl_set:Ne=\protected\long macro:->\exp_args:NNe \tl_set:Nn }
{retaining \tl_set:Nv=\protected\long macro:->\exp_args:NNv \tl_set:Nn }
{retaining \tl_set:NV=\protected\long macro:->\exp_args:NNV \tl_set:Nn }
{retaining \tl_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \tl_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \tl_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \tl_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \tl_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \tl_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \tl_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \tl_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \tl_gconcat:ccc=\protected\long macro:->\exp_args:Nccc \tl_gconcat:NNN }
{retaining \tl_concat:ccc=\protected\long macro:->\exp_args:Nccc \tl_concat:NNN }
{retaining \tl_gset_eq:cc=\protected\long macro:->\exp_args:Ncc \tl_gset_eq:NN }
{retaining \tl_gset_eq:Nc=\protected\long macro:->\exp_args:NNc \tl_gset_eq:NN }
{retaining \tl_gset_eq:cN=\protected\long macro:->\exp_args:Nc \tl_gset_eq:NN }
{retaining \tl_set_eq:cc=\protected\long macro:->\exp_args:Ncc \tl_set_eq:NN }
{retaining \tl_set_eq:Nc=\protected\long macro:->\exp_args:NNc \tl_set_eq:NN }
{retaining \tl_set_eq:cN=\protected\long macro:->\exp_args:Nc \tl_set_eq:NN }
{retaining \tl_gclear_new:c=\protected\long macro:->\exp_args:Nc \tl_gclear_new:N }
{retaining \tl_clear_new:c=\protected\long macro:->\exp_args:Nc \tl_clear_new:N }
{retaining \tl_gclear:c=\protected\long macro:->\exp_args:Nc \tl_gclear:N }
{retaining \tl_clear:c=\protected\long macro:->\exp_args:Nc \tl_clear:N }
{retaining \tl_const:cx=\protected\long macro:->\exp_args:Ncx \tl_const:Nn }
{retaining \tl_const:Nx=\protected\long macro:->\exp_args:NNx \tl_const:Nn }
{retaining \tl_const:ce=\protected\long macro:->\exp_args:Nce \tl_const:Nn }
{retaining \tl_const:cn=\protected\long macro:->\exp_args:Nc \tl_const:Nn }
{retaining \tl_const:Ne=\protected\long macro:->\exp_args:NNe \tl_const:Nn }
{retaining \tl_new:c=\protected\long macro:->\exp_args:Nc \tl_new:N }
{restoring \__quark_tmp:w=undefined}
{retaining \__quark_new_conditional:Neen=\protected\long macro:->\exp_args:NNee \__quark_new_conditional:Nnnn }
{retaining \__quark_new_test:Nccn=\protected\long macro:->\exp_args:NNcc \__quark_new_test:NNNn }
{retaining \__quark_new_test_aux:Ne=\protected\long macro:->\exp_args:NNe \__quark_new_test_aux:Nn }
{retaining \quark_if_nil:oF=\long macro:->\exp_args:No \quark_if_nil:nF }
{retaining \quark_if_nil:VF=\long macro:->\exp_args:NV \quark_if_nil:nF }
{retaining \quark_if_nil:oT=\long macro:->\exp_args:No \quark_if_nil:nT }
{retaining \quark_if_nil:VT=\long macro:->\exp_args:NV \quark_if_nil:nT }
{retaining \quark_if_nil:oTF=\long macro:->\exp_args:No \quark_if_nil:nTF }
{retaining \quark_if_nil:VTF=\long macro:->\exp_args:NV \quark_if_nil:nTF }
{retaining \quark_if_nil_p:o=\long macro:->\exp_args:No \quark_if_nil_p:n }
{retaining \quark_if_nil_p:V=\long macro:->\exp_args:NV \quark_if_nil_p:n }
{retaining \quark_if_no_value:nTF=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_no_value:w \ETC.}
{retaining \quark_if_no_value:nF=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_no_value:w \ETC.}
{retaining \quark_if_no_value:nT=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_no_value:w \ETC.}
{retaining \quark_if_no_value_p:n=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_no_value:w \ETC.}
{retaining \quark_if_nil:nTF=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_nil:w \ETC.}
{retaining \quark_if_nil:nF=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_nil:w \ETC.}
{retaining \quark_if_nil:nT=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_nil:w \ETC.}
{retaining \quark_if_nil_p:n=\long macro:#1->\__quark_if_empty_if:o {\__quark_if_nil:w \ETC.}
{retaining \quark_if_no_value:cTF=\long macro:->\exp_args:Nc \quark_if_no_value:NTF }
{retaining \quark_if_no_value:cF=\long macro:->\exp_args:Nc \quark_if_no_value:NF }
{retaining \quark_if_no_value:cT=\long macro:->\exp_args:Nc \quark_if_no_value:NT }
{retaining \quark_if_no_value_p:c=\long macro:->\exp_args:Nc \quark_if_no_value_p:N }
{retaining \quark_if_no_value:NTF=\long macro:#1->\if_meaning:w \q_no_value #1\__prg_TF_true:w \ETC.}
{retaining \quark_if_no_value:NF=\long macro:#1->\if_meaning:w \q_no_value #1\__prg_F_true:w \ETC.}
{retaining \quark_if_no_value:NT=\long macro:#1->\if_meaning:w \q_no_value #1\__prg_T_true:w \ETC.}
{retaining \quark_if_no_value_p:N=\long macro:#1->\if_meaning:w \q_no_value #1\__prg_p_true:w \ETC.}
{retaining \quark_if_nil:NTF=\long macro:#1->\if_meaning:w \q_nil #1\__prg_TF_true:w \ETC.}
{retaining \quark_if_nil:NF=\long macro:#1->\if_meaning:w \q_nil #1\__prg_F_true:w \ETC.}
{retaining \quark_if_nil:NT=\long macro:#1->\if_meaning:w \q_nil #1\__prg_T_true:w \ETC.}
{retaining \quark_if_nil_p:N=\long macro:#1->\if_meaning:w \q_nil #1\__prg_p_true:w \ETC.}
{retaining \quark_if_recursion_tail_stop_do:on=\long macro:->\exp_args:No \quark_if_recursion_tail_stop_do:nn }
{retaining \quark_if_recursion_tail_stop:o=\long macro:->\exp_args:No \quark_if_recursion_tail_stop:n }
{retaining \cs_replacement_spec:c=\long macro:->\exp_args:Nc \cs_replacement_spec:N }
{retaining \cs_generate_from_arg_count:NNno=\protected\long macro:->\exp_args:NNNno \cs_generate_from_arg_count:NNnn }
{retaining \cs_if_eq:NNTF=\long macro:#1#2->\if_meaning:w #1#2\__prg_TF_true:w \ETC.}
{retaining \cs_if_eq:NNF=\long macro:#1#2->\if_meaning:w #1#2\__prg_F_true:w \ETC.}
{retaining \cs_if_eq:NNT=\long macro:#1#2->\if_meaning:w #1#2\__prg_T_true:w \ETC.}
{retaining \cs_if_eq_p:NN=\long macro:#1#2->\if_meaning:w #1#2\__prg_p_true:w \ETC.}
{retaining \cs_new_protected_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_new_protected_nopar:Nx }
{retaining \cs_new_protected_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_new_protected_nopar:Ne }
{retaining \cs_new_protected_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_new_protected_nopar:Nn }
{retaining \cs_new_protected:cx=\protected\long macro:->\exp_args:Nc \cs_new_protected:Nx }
{retaining \cs_new_protected:ce=\protected\long macro:->\exp_args:Nc \cs_new_protected:Ne }
{retaining \cs_new_protected:cn=\protected\long macro:->\exp_args:Nc \cs_new_protected:Nn }
{retaining \cs_new_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_new_nopar:Nx }
{retaining \cs_new_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_new_nopar:Ne }
{retaining \cs_new_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_new_nopar:Nn }
{retaining \cs_new:cx=\protected\long macro:->\exp_args:Nc \cs_new:Nx }
{retaining \cs_new:ce=\protected\long macro:->\exp_args:Nc \cs_new:Ne }
{retaining \cs_new:cn=\protected\long macro:->\exp_args:Nc \cs_new:Nn }
{retaining \cs_gset_protected_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_gset_protected_nopar:Nx }
{retaining \cs_gset_protected_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_gset_protected_nopar:Ne }
{retaining \cs_gset_protected_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_gset_protected_nopar:Nn }
{retaining \cs_gset_protected:cx=\protected\long macro:->\exp_args:Nc \cs_gset_protected:Nx }
{retaining \cs_gset_protected:ce=\protected\long macro:->\exp_args:Nc \cs_gset_protected:Ne }
{retaining \cs_gset_protected:cn=\protected\long macro:->\exp_args:Nc \cs_gset_protected:Nn }
{retaining \cs_gset_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_gset_nopar:Nx }
{retaining \cs_gset_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_gset_nopar:Ne }
{retaining \cs_gset_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_gset_nopar:Nn }
{retaining \cs_gset:cx=\protected\long macro:->\exp_args:Nc \cs_gset:Nx }
{retaining \cs_gset:ce=\protected\long macro:->\exp_args:Nc \cs_gset:Ne }
{retaining \cs_gset:cn=\protected\long macro:->\exp_args:Nc \cs_gset:Nn }
{retaining \cs_set_protected_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_set_protected_nopar:Nx }
{retaining \cs_set_protected_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_set_protected_nopar:Ne }
{retaining \cs_set_protected_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_set_protected_nopar:Nn }
{retaining \cs_set_protected:cx=\protected\long macro:->\exp_args:Nc \cs_set_protected:Nx }
{retaining \cs_set_protected:ce=\protected\long macro:->\exp_args:Nc \cs_set_protected:Ne }
{retaining \cs_set_protected:cn=\protected\long macro:->\exp_args:Nc \cs_set_protected:Nn }
{retaining \cs_set_nopar:cx=\protected\long macro:->\exp_args:Nc \cs_set_nopar:Nx }
{retaining \cs_set_nopar:ce=\protected\long macro:->\exp_args:Nc \cs_set_nopar:Ne }
{retaining \cs_set_nopar:cn=\protected\long macro:->\exp_args:Nc \cs_set_nopar:Nn }
{retaining \cs_set:cx=\protected\long macro:->\exp_args:Nc \cs_set:Nx }
{retaining \cs_set:ce=\protected\long macro:->\exp_args:Nc \cs_set:Ne }
{retaining \cs_set:cn=\protected\long macro:->\exp_args:Nc \cs_set:Nn }
{retaining \cs_new_protected_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_protected_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_protected_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_protected:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_protected:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_protected:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_new:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_protected:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_gset:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_protected:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_nopar:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_nopar:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set_nopar:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set:Nx=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set:Ne=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{retaining \cs_set:Nn=\protected\long macro:->\__cs_generate_from_signature:NNn \ETC.}
{restoring \__cs_tmp:w=\protected\long macro:#1->\cs_gset:Npn \cs_split_function:N \ETC.}
{retaining \cs_if_free:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_free_c_aux:w \ETC.}
{retaining \cs_if_free:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_free_c_aux:w \ETC.}
{retaining \cs_if_free:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_free_c_aux:w \ETC.}
{retaining \cs_if_free_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_free_c_aux:w \ETC.}
{retaining \cs_if_free:NTF=\long macro:#1->\if_cs_exist:N #1\else: \use_none:nnnn \ETC.}
{retaining \cs_if_free:NF=\long macro:#1->\if_cs_exist:N #1\else: \use_none:nnnn \ETC.}
{retaining \cs_if_free:NT=\long macro:#1->\if_cs_exist:N #1\else: \use_none:nnnn \ETC.}
{retaining \cs_if_free_p:N=\long macro:#1->\if_cs_exist:N #1\else: \use_none:nnnn \ETC.}
{retaining \cs_if_exist:cTF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cs_if_exist:cF=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cs_if_exist:cT=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cs_if_exist_p:c=\long macro:#1->\if_cs_exist:w #1\cs_end: \__cs_if_exist_c_aux: \ETC.}
{retaining \cs_if_exist:NTF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cs_if_exist:NF=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cs_if_exist:NT=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \cs_if_exist_p:N=\long macro:#1->\if_meaning:w #1\scan_stop: \use_i:nnnn \ETC.}
{retaining \tex_let:D=\let}
{retaining \tex_global:D=\global}
{restoring \ExplSyntaxOn=undefined}
{restoring \endlinechar=13}
{restoring \ExplSyntaxOff=undefined}
{retaining \l__kernel_expl_bool=\char"1}
{retaining \scan_stop:=\relax}
{retaining \exp_after:wN=\expandafter}
{retaining \use:n=\long macro:#1->#1}
{retaining \use_none:n=\long macro:#1->}
{restoring \__lua_load_module_p:n=undefined}
{retaining \prg_return_false:=\long macro:->\exp_after:wN \use_ii:nn \exp:w }
{retaining \prg_return_true:=\long macro:->\exp_after:wN \use_i:nn \exp:w }
{restoring \now@and@everyjob=undefined}
{restoring \newluachunkname=undefined}
{restoring \newluabytecode=undefined}
{restoring \newwhatsit=undefined}
{restoring \newprotectedluacmd=undefined}
{restoring \newluacmd=undefined}
{restoring \newluafunction=undefined}
{restoring \newcatcodetable=undefined}
{restoring \unsetattribute=undefined}
{restoring \setattribute=undefined}
{restoring \newattribute=undefined}
{restoring \count21=59}
{restoring \e@alloc=undefined}
{restoring \e@alloc@chardef=undefined}
{restoring \e@alloc@top=undefined}
{restoring \newbox=macro:->\alloc@ 4\box \chardef \insc@unt }
{restoring \newskip=macro:->\alloc@ 2\skip \skipdef \insc@unt }
{restoring \newdimen=macro:->\alloc@ 1\dimen \dimendef \insc@unt }
{restoring \newcount=macro:->\alloc@ 0\count \countdef \insc@unt }
{restoring \count276=32768}
{restoring \count275=32768}
{restoring \count274=32768}
{restoring \count273=32768}
{restoring \count272=32768}
{restoring \count271=32768}
{restoring \count270=32768}
{restoring \et@xmaxfam=undefined}
{restoring \et@xmaxregs=macro:->32768}
{restoring \newfam=\outer macro:->\alloc@ 8\fam \chardef \sixt@@n }
{restoring \@firstofone=undefined}
{restoring \@gobble=undefined}
{restoring \etatcatcode=undefined}
{restoring \ver@expl3-code.tex=undefined}
{restoring \AtBeginDocument=undefined}
{restoring \l@expl@tidy@tl=undefined}
{restoring \ver@expl3-generic.tex=undefined}
{restoring \ExplLoaderFileDate=undefined}
{restoring \ExplFileDate=undefined}
