% \iffalse
%% File xnfss.dtx
%% (C) Copyright 2001, 2004 Frank Mittelbach, LaTeX3 Project
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3a of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% This file is part of the ``xlang bundle'' (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%%
%% The released version of this bundle is available from CTAN.
%%
%% -----------------------------------------------------------------------
%%
%% The development version of the bundle can be found at
%%
%%    http://www.latex-project.org/cgi-bin/cvsweb.cgi/
%%
%% for those people who are interested.
%%
%%%%%%%%%%%
%% NOTE: %%
%%%%%%%%%%%
%%
%%   Snapshots taken from the repository represent work in progress and may
%%   not work or may contain conflicting material!  We therefore ask
%%   people _not_ to put them into distributions, archives, etc. without
%%   prior consultation with the LaTeX Project Team.
%%
%% -----------------------------------------------------------------------
%%
%<package>\RequirePackage{expl3}
%<*dtx>
%\fi
\def\GetIdInfo$Id: #1.dtx #2 #3-#4-#5 #6 #7$#8{%
  \def\fileversion{#2}%
  \def\filedate{#3/#4/#5}%
  \ProvidesFile{#1.dtx}[#3/#4/#5 v#2 #8]%
}
%\iffalse
%</dtx>
%\fi
\GetIdInfo$Id$
          {Extension to NFSS2}

%
% \iffalse
%
%<*driver>
 \documentclass{ltxdoc}
%
 \begin{document}
 \DocInput{xnfss.dtx}
 \end{document}
%</driver>
%
% \fi
%
%
% \GetFileInfo{xnfss.dtx}
%
% \title{The \textsf{xnfss} package\thanks{This file
%         has version number \fileversion, last
%         revised \filedate.}}
% \author{FMi}
% \date{\filedate}
%
%  \maketitle
%
% \tableofcontents
%
%
%
% \section{Intro}
%
%    Basically |\fontencoding| is changed to accept a comma list of
%    encodings and |\selectfont| is changed to try these encodings in
%    order (keeping the other font characteristics) until it finds a
%    font or runs out of encodings. In the latter case it tries to find
%    a font by changing the characteristics to defaults.
%
%    The latter process could and should be made smarter, eg given
%\begin{verbatim}
%     encodings T1,OT1
%     family    xxx
%     series    yyy
%     shape     zzz
%\end{verbatim}
%    it will try
%\begin{verbatim}
%     T1/xxx/yyy/zzz
%    OT1/xxx/yyy/zzz
%     T1/xxx/yyy/<defaultshape>
%     T1/xxx/<defaultseries>/<defaultshape>
%     T1/<defaultfamily>/<defaultseries>/<defaultshape>
%     FAIL
%\end{verbatim}
%    instead of
%\begin{verbatim}
%     T1/xxx/yyy/zzz
%    OT1/xxx/yyy/zzz
%     T1/xxx/yyy/<defaultshape>
%    OT1/xxx/yyy/<defaultshape>
%     T1/xxx/<defaultseries>/<defaultshape>
%    OT1/xxx/<defaultseries>/<defaultshape>
%     ...
%\end{verbatim}
%    which might be a better approach.
%
% \section{Implementation}
%    \begin{macrocode}
%\RequirePackage{ldcsetup}
%\IgnoreWhiteSpace
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareRobustCommand\fontencoding[1]{\edef\glyph@collection{#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareRobustCommand\Xfontencoding[1]{%
    \expandafter\ifx\csname T@#1\endcsname\relax
      \@latex@error{Encoding scheme `#1' unknown}\@eha
    \else
      \edef\f@encoding{#1}%
      \ifx\cf@encoding\f@encoding
        \let\enc@update\relax
      \else
        \let\enc@update\@@enc@update
      \fi
    \fi
}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareRobustCommand\selectfont
        {%
    \ifx\f@linespread\baselinestretch \else
      \set@fontsize\baselinestretch\f@size\f@baselineskip \fi
    \expandafter\get@next@encoding\glyph@collection,\@nil
    \xdef\font@name{%
      \csname\curr@fontshape/\f@size\endcsname}%
    \Xpickup@font
    \font@name
    \size@update
    \enc@update
    }
%    \end{macrocode}
%
%    \begin{macrocode}
\def\get@next@encoding#1,#2\@nil{%
  \Xfontencoding{#1}%
  \def\sub@glyph@collection{#2}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\Xpickup@font{%
\@font@warning{Trying for \font@name ...}%
    \expandafter \ifx \font@name \relax
       \Xdefine@newfont
    \fi}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\Xdefine@newfont{%
\@font@warning{  ... undefined ... try to load it ...}%
  \begingroup
    \let\typeout\@font@info
    \escapechar\m@ne
    \expandafter\expandafter\expandafter
       \split@name\expandafter\string\font@name\@nil
      \try@load@fontshape % try always
    \expandafter\ifx
       \csname\curr@fontshape\endcsname \relax
\@font@warning{  ... unloadable ... }%
      \Xwrong@fontshape\else
\@font@warning{  ... loadable ... extract it}%
      \extract@font\fi
  \endgroup}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\Xwrong@fontshape{%
  \expandafter\get@next@encoding\sub@glyph@collection,\@nil
  \ifx\f@encoding\@empty
     \expandafter\get@next@encoding\glyph@collection,\@nil
     \wrong@fontshape
  \else
    \xdef\font@name{%
      \csname\curr@fontshape/\f@size\endcsname}%
    \Xpickup@font
  \fi
}
%    \end{macrocode}
%
%
\endinput
