% \iffalse
%% File xo-footnote.dtx (C) Copyright 1999-2000 Frank Mittelbach, David Carlisle, Chris Rowley
%%                      (C) Copyright 2001,2004-2007,2009 Frank Mittelbach, The LaTeX3 Project
%%                      (C) Copyright 2010-2012 The LaTeX3 Project
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% This file is part of the ``xor bundle'' (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%%
%% The released version of this bundle is available from CTAN.
%%
%% -----------------------------------------------------------------------
%%
%% The development version of the bundle can be found at
%%
%%    http://www.latex-project.org/svnroot/experimental/trunk/
%%
%% for those people who are interested.
%%
%%%%%%%%%%%
%% NOTE: %%
%%%%%%%%%%%
%%
%%   Snapshots taken from the repository represent work in progress and may
%%   not work or may contain conflicting material!  We therefore ask
%%   people _not_ to put them into distributions, archives, etc. without
%%   prior consultation with the LaTeX Project Team.
%%
%% -----------------------------------------------------------------------
%%
\RequirePackage{l3bootstrap}
\GetIdInfo $Id$
          {xo-footnote}
\ProvidesExplPackage{\ExplFileName}
  {\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
% \fi
%
%
%
%
%
% \subsection{Footnote setup}
%
%
%
%  \begin{macro}{\g_xor_footins_box}
%    We hide the fact that the insertion registers are all tied together. This
%    needs some further cleanup as it should not be done via |\cs_set_nopar:Npn| and
%    the reference to |\footins| should completely vanish.\footnote{fix}
%    \begin{macrocode}
\cs_new_eq:NN  \g_xor_footins_box \footins
\cs_new_nopar:Npn \g_xor_footins_int  {\count\footins}  
\cs_new_nopar:Npn \g_xor_footins_dim  {\dimen\footins}  
\cs_new_nopar:Npn \g_xor_footins_skip {\skip\footins}  
\cs_new_nopar:Npn \g_xor_footins_toks {\toks\footins}  
%    \end{macrocode}
%  \end{macro}
%
%
%  \begin{macro}{\g_xor_extrains_box}
%
%    \begin{macrocode}
\newinsert\g_xor_extrains_box
\newinsert\@kludgeins
\cs_new_nopar:Npn \g_xor_extrains_int  {\count\g_xor_extrains_box}  
\cs_new_nopar:Npn \g_xor_extrains_dim  {\dimen\g_xor_extrains_box}  
\cs_new_nopar:Npn \g_xor_extrains_skip {\skip\g_xor_extrains_box}  
\cs_new_nopar:Npn \g_xor_extrains_toks {\toks\g_xor_extrains_box}  

\g_xor_extrains_skip=10pt plus 10pt\relax
\g_xor_extrains_int=1000 \relax
\g_xor_extrains_dim=\textheight \relax

\cs_set_nopar:Npn  \@reinserts{%
  \ifvoid\footins\else\insert\footins{\unvbox\footins}\fi
  \ifvbox\@kludgeins\insert\@kludgeins
                      {\unvbox\@kludgeins}\fi
  \ifvoid\g_xor_extrains_box
  \else
    {\showoutput\showbox \g_xor_extrains_box }
    \insert\g_xor_extrains_box{\unvbox\g_xor_extrains_box}
  \fi
}
%    \end{macrocode}
%  \end{macro}
%
%
%
%
%
% \begin{macro}{\xor_initialize_column_footins_action:}
%    The |\xor_initialize_column_footins_action:| is a hook to add code to the
%    column initialization phase related to the footnote insertions. For
%    example, when all footnotes are accumulated in the last column we
%    need to make footnote insertions invisible when gathering
%    material for the first columns.
%    \begin{macrocode}
\cs_set_eq:NN \xor_initialize_column_footins_action:\prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\xor_initialize_page_footins_action:}
%    The |\xor_initialize_page_footins_action:| is a hook to add code when
%    we start a new page
%    \begin{macrocode}
\cs_set_eq:NN \xor_initialize_page_footins_action:\prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\xor_initialize_balance_footins_action:}
%    The |\xor_initialize_balance_footins_action:| is a hook to add code to the
%    balance initialization phase related to the footnote insertions.
%    \begin{macrocode}
\cs_set_eq:NN \xor_initialize_balance_footins_action:\prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\xor_column_end_footins_action:}
%    The |\xor_column_end_footins_action:| hook is called in the
%    |\xor_OR_grab_trial_cols:| and the |xor_OR_grab_best_cols:| output routine to do
%    something to the accumulated footnote insertions if
%    necessary. I.e., it is called for every column.
%    \begin{macrocode}
\cs_set_eq:NN \xor_column_end_footins_action:\prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
%
%
%    \begin{macrocode}
\DeclareObjectType{footnotesetup}{0}
%    \end{macrocode}
%
%
%
%
%
% \subsubsection{Helper stuff}
%
%
%
% \begin{macro}{\g_xor_final_footins_skip}
%    \begin{macrocode}
\skip_new:N \g_xor_final_footins_skip
%    \end{macrocode}
% \end{macro}
%
%  \begin{macro}{\g_xor_saved_footins_box}
%  \begin{macro}{\g_xor_saved_footins_dim}
%    
%    \begin{macrocode}
\box_new:N \g_xor_saved_footins_box
\dim_new:N \g_xor_saved_footins_dim
%    \end{macrocode}
%  \end{macro}
%  \end{macro}
%
%
%
%  \begin{macro}{\g_xor_footins_hsize_dim}
%    Horizontal size for footnotes needs to be set depending on style used.
%    \begin{macrocode}
\dim_new:N \g_xor_footins_hsize_dim
%    \end{macrocode}
%  \end{macro}
%



%  \begin{macro}{\g_xor_footins_col_int}
%    
%    \begin{macrocode}
\int_new:N \g_xor_footins_col_int
%    \end{macrocode}
%  \end{macro}

%  \begin{macro}{\g_xor_footins_multicolumn_final_run_bool}
%    
%    \begin{macrocode}
\bool_new:N \g_xor_footins_multicolumn_final_run_bool
%    \end{macrocode}
%  \end{macro}



%
% \subsubsection{Footnote setup standard}
%
%
% \begin{macro}{std (footnotesetup)}
%    \begin{macrocode}
\DeclareTemplateInterface{footnotesetup}{std}{0}{
   text-sep    : skip    ,
   max-height  : length  ,
 }
\DeclareTemplateCode{footnotesetup}{std}{0}{
   text-sep    = global \g_xor_footins_skip,
   max-height  = global \g_xor_footins_dim,
 }
 {
  \skip_gset:Nn \g_xor_footins_skip {10pt plus 5pt}
  \dim_gset:Nn  \g_xor_footins_dim  {.7\textheight}


  \AssignTemplateKeys
%    \end{macrocode}
%    One could make the width of the footnotes configurable (within
%    limits). Also, need to check when it actually gets assigned. This may not
%    be the right place
%    \begin{macrocode}
  \dim_gset:Nn \g_xor_footins_hsize_dim \columnwidth
  \int_gset:Nn \g_xor_footins_int       \c_one_thousand
%    \end{macrocode}
%    
%    \begin{macrocode}
  \cs_set_eq:NN \xor_initialize_page_footins_action:    \prg_do_nothing:
  \cs_set_eq:NN \xor_initialize_column_footins_action:  \prg_do_nothing:
  \cs_set_eq:NN \xor_initialize_balance_footins_action: \prg_do_nothing:
  \cs_set_eq:NN \xor_column_end_footins_action:         \prg_do_nothing:
 }
%    \end{macrocode}
%  \end{macro}
%
%
%
% \subsubsection{Footnote setup ftnright}
%
% In this section we provide the code for running all footnotes in the
% last column.
%
% \begin{macro}{ftnright (footnotesetup)}
%
%    \begin{macrocode}
\DeclareTemplateInterface{footnotesetup}{ftnright}{0}{
   text-sep    : skip    ,
   max-height  : length  ,
 }
\DeclareTemplateCode{footnotesetup}{ftnright}{0}{
   text-sep    = global \g_xor_final_footins_skip,
   max-height  = global \g_xor_footins_dim,
 }
 {

  \skip_gset:Nn \g_xor_final_footins_skip {10pt plus 5pt}
  \dim_gset:Nn  \g_xor_footins_dim \textheight

  \dim_gset:Nn  \g_xor_footins_hsize_dim \columnwidth

  \AssignTemplateKeys

  \cs_set_eq:NN \xor_initialize_page_footins_action:   \xor_initialize_page_footins_ftnright:
  \cs_set_eq:NN \xor_initialize_column_footins_action: \xor_initialize_column_footins_ftnright:
  \cs_set_eq:NN \xor_initialize_balance_footins_action:\prg_do_nothing: 
  \cs_set_eq:NN \xor_column_end_footins_action:        \xor_deal_with_footins_ftnright:

 }
%    \end{macrocode}
% \end{macro}
%
%
%
%
%
%
% \begin{macro}{\xor_initialize_page_footins_ftnright:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_page_footins_ftnright: {
%<*trace>
  \trace_push:n{xor_initialize_page_footins_ftnright:}
%</trace>
  \box_gclear:N \g_xor_footins_box
  \skip_gset:Nn \g_xor_footins_skip \c_zero_skip
  \int_gzero:N  \g_xor_footins_int
  \dim_gset:Nn  \g_xor_footins_dim \textheight
%<*trace>
  \trace_pop:n{xor_initialize_page_footins_ftnright:}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%
%  \begin{macro}{\xor_initialize_column_footins_ftnright:}
%    
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_column_footins_ftnright: { 
%<*trace>
  \trace:n{ftnspread:~ page =~ \int_use:N\g_xor_page_absolute_int}
  \trace:n{ftnspread:~ col~ =~ \int_use:N\g_xor_curr_col_int}
  \trace:n{ftnspread:~ int~ =~ \skip_use:N\g_xor_footins_int}
  \trace:n{ftnspread:~ skip =~ \skip_use:N\g_xor_footins_skip}
%</trace>
}
%    \end{macrocode}
%  \end{macro}
%
%
%
% \begin{macro}{\xor_deal_with_footins_ftnright:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_deal_with_footins_ftnright: {
%<*trace>
  \trace_push:n{xor_deal_with_footins_ftnright:}
%</trace>
%    \end{macrocode}
%    If we are not in the last column we save any footnotes accumulated in
%    |\g_xor_footins_box| in a separate |\g_xor_saved_footins_box| box. This
%    way any later code that checks |\g_xor_footins_box| for constraints will
%    not fire incorrectly.
%    \begin{macrocode}
     \int_compare:nNnTF \g_xor_curr_col_int < \g_xor_cols_int
      {
%<*trace>
       \trace:n{ftnspread:~not~ last~ col}
%</trace>
%    \end{macrocode}
%    For any column other than the last we simply return the footnotes so that
%    they show up in the next column.
%    \begin{macrocode}
 	  \box_if_empty:NF \g_xor_footins_box
             {
	      \insert\g_xor_footins_box
                     { \vbox_unpack_clear:N \g_xor_footins_box }
             }
%    \end{macrocode}
%    If we are in the second last column we also have to change the
%    procedure: we now have to modify the insertion register values so that from now on
%    footnotes need space in the column.\footnote{Not correctly
%    handled is the case that we have accumulated more than a full
%    column of footnotes before!}
%    \begin{macrocode}
       \int_set:Nn \l_tmpa_int \g_xor_cols_int
       \int_decr:N \l_tmpa_int
       \int_compare:nNnT \g_xor_curr_col_int = \l_tmpa_int % cur col = second
                                                           %           last col
         {
%<*trace>
       \trace:n{ftnspread:~second~ last~ col~ preparing~ typesetting}
%</trace>
	  \int_gset:Nn  \g_xor_footins_int  \c_one_thousand
	  \skip_gset:Nn \g_xor_footins_skip \g_xor_final_footins_skip
         }
      }
      {
%<*trace>
          \trace:n{ftnspread:~  last~ col}
          \box_if_empty:NF \g_xor_footins_box
            {
             \trace:n{ftnspread:~ footnotes~ not~ empty}
%    \end{macrocode}
%    Perhaps one can do something about the situation that a footnote got
%    split (other than prevent it), e.g., allowing it to get typeset on the
%    next column in that case \ldots
%    \begin{macrocode}
             \int_compare:nNnT \insertpenalties > 0
               { \trace:n{ftnspread:~ footnote~ got~ split} }
            }
%</trace>
      }
%<*trace>
  \trace_pop:n{xor_deal_with_footins_ftnright:}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \subsubsection{Footnote setup ftnrightspread}
%
% In this section we provide the code for running all footnotes in the
% last column.
%
% \begin{macro}{ftnrightspread (footnotesetup)}
%
%    \begin{macrocode}
\DeclareTemplateInterface{footnotesetup}{ftnrightspread}{0}{
   text-sep    : skip    ,
   max-height  : length  ,
 }
\DeclareTemplateCode{footnotesetup}{ftnrightspread}{0}{
   text-sep    = global \g_xor_final_footins_skip,
   max-height  = global \g_xor_footins_dim,
 }
 {

  \skip_gset:Nn \g_xor_final_footins_skip {10pt plus 5pt}
  \dim_gset:Nn  \g_xor_footins_dim \textheight

  \dim_gset:Nn  \g_xor_footins_hsize_dim \columnwidth

  \AssignTemplateKeys

  \cs_set_eq:NN \xor_initialize_page_footins_action:   \xor_initialize_page_footins_ftnrightspread:
  \cs_set_eq:NN \xor_initialize_column_footins_action: \xor_initialize_column_footins_ftnrightspread:
  \cs_set_eq:NN \xor_initialize_balance_footins_action:\xor_initialize_balance_footins_ftnrightspread:
  \cs_set_eq:NN \xor_column_end_footins_action:        \xor_deal_with_footins_ftnrightspread:

 }
%    \end{macrocode}
% \end{macro}
%
%


%
% \begin{macro}{\xor_initialize_balance_footins_ftnrightspread:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_balance_footins_ftnrightspread: {}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\xor_initialize_column_footins_ftnrightspread:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_column_footins_ftnrightspread: { 
  \xor_initialize_column_footins_ftnright:
}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \begin{macro}{\xor_initialize_page_footins_ftnrightspread:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_page_footins_ftnrightspread: {
%<*trace>
  \trace_push:n{ftnspread:~xor_initialize_page_footins_ftnrightspread:}
%</trace>
  \int_if_odd:nTF \g_xor_page_absolute_int
    {
%<*trace>
  \trace:n{ftnspread:~odd~ page}
%</trace>
     \int_compare:nNnTF \g_xor_cols_int = 1
        {
%<*trace>
         \trace:n{ftnspread:~single~ column~ prepare~ typesetting}
%</trace>
         \int_gset:Nn  \g_xor_footins_int  \c_one_thousand
         \skip_gset:Nn \g_xor_footins_skip \g_xor_final_footins_skip
        }
        {
         \skip_gset:Nn \g_xor_footins_skip \c_zero_skip
         \int_gzero:N  \g_xor_footins_int
         \dim_gset:Nn  \g_xor_footins_dim \textheight                   %%%% ????
       }
    }
    { 
%<*trace>
  \trace:n{ftnspread:~even~ page}
%</trace>
     \box_gclear:N \g_xor_footins_box
     \skip_gset:Nn \g_xor_footins_skip \c_zero_skip
     \int_gzero:N  \g_xor_footins_int
     \dim_gset:Nn  \g_xor_footins_dim \textheight
    }
%<*trace>
  \trace_pop:n{ftnspread:~xor_initialize_page_footins_ftnrightspread:}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%
%
%
%
% \begin{macro}{\xor_deal_with_footins_ftnrightspread:}
%    \begin{macrocode}

\cs_new_nopar:Npn \xor_deal_with_footins_ftnrightspread: {
%<*trace>
  \trace_push:n{ftnspread:~xor_deal_with_footins_ftnrightspread:}
%</trace>
  \int_if_odd:nTF \g_xor_page_absolute_int
    { \xor_deal_with_footins_ftnright: }
    {
     \box_if_empty:NF \g_xor_footins_box
	{
%<*trace>
         \trace:n{ftnspread:~use~ saved~ footins}
%</trace>
         \insert\g_xor_footins_box
            { \vbox_unpack_clear:N \g_xor_footins_box }
        }
    }
%<*trace>
  \trace_pop:n{ftnspread:~xor_deal_with_footins_ftnrightspread:}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \subsubsection{Footnote setup multicolumn}
%
% In this section we provide the code for running the footnotes in multiple
% columns across the bottom of the page.
%
% \begin{macro}{multicolumn (footnotesetup)}
%
%    \begin{macrocode}
\DeclareTemplateInterface{footnotesetup}{multicolumn}{0}{
   column-num  : integer   ,
   text-sep    : skip      ,
   max-height  : length    ,
 }
\DeclareTemplateCode{footnotesetup}{multicolumn}{0}{
   column-num  = global \g_xor_footins_col_int,
   text-sep    = global \g_xor_final_footins_skip,
   max-height  = global \g_xor_footins_dim,
 }
 {
  \int_gset:Nn  \g_xor_footins_col_int {3}
  \skip_gset:Nn \g_xor_final_footins_skip {10pt plus 5pt}
  \dim_gset:Nn  \g_xor_footins_dim  {.5\textheight}

  \AssignTemplateKeys

  \int_gset:Nn  \g_xor_footins_int  
                { \c_one_thousand / \g_xor_footins_col_int }

  \cs_set_eq:NN \xor_initialize_page_footins_action:   \xor_initialize_page_footins_multicolumn:
  \cs_set_eq:NN \xor_initialize_column_footins_action: \xor_initialize_column_footins_multicolumn:
  \cs_set_eq:NN \xor_initialize_balance_footins_action:\prg_do_nothing: 
  \cs_set_eq:NN \xor_column_end_footins_action:        \xor_deal_with_footins_multicolumn:

  \dim_gset:Nn \g_xor_footins_hsize_dim
               {\textwidth / \g_xor_footins_col_int - \columnsep}
  \skip_gset:Nn \g_xor_footins_skip {\g_xor_final_footins_skip}
 }
%    \end{macrocode}
% \end{macro}
%
%
%


%  \begin{macro}{\xor_initialize_page_footins_multicolumn:}
%    
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_page_footins_multicolumn: {
%<*trace>
  \trace_push:n{xor_initialize_page_footins_multicolumn:}
%</trace>
  \box_gclear:N \g_xor_footins_box
  \box_gclear:N \g_xor_saved_footins_box
  \box_gclear:N \g_xor_extrains_box
%    \end{macrocode}
%    
%    \begin{macrocode}
  \bool_if:NTF \g_xor_footins_multicolumn_final_run_bool
    {
%<*trace>
     \trace:n{ftnmult:~ final~ run}
%</trace>
     \skip_gset:Nn \g_xor_footins_skip \c_zero_skip
     \int_gzero:N  \g_xor_footins_int
    }
%    \end{macrocode}
%    
%    \begin{macrocode}
    {
%<*trace>
     \trace:n{ftnmult:~ trial~ run}
%</trace>
     \int_gset:Nn  \g_xor_footins_int  
                   { \g_xor_cols_int * \c_one_thousand / \g_xor_footins_col_int }
     \skip_gset:Nn \g_xor_footins_skip {\g_xor_final_footins_skip}

     \dim_gzero:N \g_xor_saved_footins_dim 
    }
%<*trace>
  \trace_pop:n{xor_initialize_page_footins_multicolumn:}
%</trace>
}
%    \end{macrocode}
%  \end{macro}



%  \begin{macro}{\xor_initialize_column_footins_multicolumn:}
%    
%    \begin{macrocode}
\cs_set_nopar:Npn \xor_initialize_column_footins_multicolumn: {
%<*trace>
  \trace_push:n{xor_initialize_column_footins_multicolumn:}
%</trace>

  \box_gclear:N \g_xor_extrains_box
  \dim_compare:nNnT \g_xor_saved_footins_dim > \c_zero_dim
    { \insert\g_xor_extrains_box{\floatingpenalty \@MM
                                 \hrule width  \c_zero_dim 
                                        height \g_xor_saved_footins_dim} }
%<*trace>
  \trace_pop:n{xor_initialize_column_footins_multicolumn:}
%</trace>
}
%    \end{macrocode}
%  \end{macro}



%  \begin{macro}{\xor_deal_with_footins_multicolumn:}
%    
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_deal_with_footins_multicolumn: {
%<*trace>
  \trace_push:n{xor_deal_with_footins_multicolumn:}
%</trace>
  \box_if_empty:NF\g_xor_footins_box
        {
	 \vbox_gset:Nn \g_xor_saved_footins_box
	      {\vbox_unpack_clear:N\g_xor_saved_footins_box
	       \vbox_unpack_clear:N\g_xor_footins_box}
	}
%    \end{macrocode}
%    
%    \begin{macrocode}
  \int_compare:nNnT \g_xor_curr_col_int = \g_xor_cols_int
    {
     \xor_format_footins_multicolumn:NN 
	\g_xor_saved_footins_box
	\g_xor_footins_col_int

     \bool_if:NTF \g_xor_footins_multicolumn_final_run_bool
      {
%<*trace>
       \trace:n{ftnmult:~ do~ final~ typesetting}
%</trace>
%    \end{macrocode}
%    If the result of formatting all footnotes changed from last trial to this
%    one, we have to do another run or might end up with overprinting
%    text. The solution below is too trivial though since a footnote near the
%    bottom of the last column may get pushed to the next page in which case
%    the space requirement may get less again. Some more fine-grain
%    approximation is probably needed one day.
%    \begin{macrocode}
       \dim_compare:nNnTF \g_xor_saved_footins_dim < {\ht \g_xor_saved_footins_box }
         {
%<*trace>
          \trace:n{Ooops~ footnote~ space~ needed~ changed:~
                   before~ \dim_use:N \g_xor_saved_footins_dim \space 
                   now~ \dim_use:N \ht \g_xor_saved_footins_box }
          \trace:n{g_xor_trial_rerun_requested_bool ~<-~ true}
%</trace>
          \dim_gset:Nn \g_xor_saved_footins_dim {\ht \g_xor_saved_footins_box }
          \bool_gset_true:N \g_xor_trial_rerun_requested_bool
         }
         {
          \bool_gset_false:N \g_xor_footins_multicolumn_final_run_bool
         }
%    \end{macrocode}
%    We don't actually have to set |\g_xor_trial_rerun_requested_bool| back to
%    false since that is done already by the general loop.
%    \begin{macrocode}
      }
      {
%<*trace>
       \trace:n{ftnmult:~ trial~ run}
       \trace:n{g_xor_trial_rerun_requested_bool ~<-~ true}
%</trace>
       \bool_gset_true:N \g_xor_footins_multicolumn_final_run_bool
       \bool_gset_true:N \g_xor_trial_rerun_requested_bool

       \dim_gset:Nn \g_xor_saved_footins_dim {\ht \g_xor_saved_footins_box }
%<*trace>
       \trace:n{calculated~footnote~ space:~ 
                     \dim_use:N \g_xor_saved_footins_dim }
%</trace>
      }
    }
%<*trace>
  \trace_pop:n{xor_deal_with_footins_multicolumn:}
%</trace>
}
%    \end{macrocode}
%  \end{macro}
%
%
%
%  \begin{macro}{\xor_format_footins_multicolumn:NN}
%    
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_format_footins_multicolumn:NN #1 #2 {
      \box_if_empty:NF #1
           { \vbox_gset:Nn #1
		 {
		  \rigidbalance #1 {#2} {1pt}
		 }
	    }
}
%    \end{macrocode}
%  \end{macro}



%  \begin{macro}{\rigidbalance}
%    Straight stolen out of the \TeX book. Something more configurable etc
%    needs to be used one day but this gets us off the ground \ldots
%    \begin{macrocode}
\newcount\k \newdimen\h
\cs_set_nopar:Npn \rigidbalance#1#2#3{\setbox0=\box#1\relax \k=#2\relax \h=#3\relax
  \hbox to\textwidth{\splittopskip=\h \vbadness=10000~ \hfilneg
  \valign{##\vfil\cr\dosplits}}}
\cs_set_nopar:Npn \dosplits{\ifnum\k>0 \noalign{\hfil}\splitoff
  \global\advance\k-1\cr\dosplits\fi}
\cs_set_nopar:Npn \splitoff{\dimen0=\ht0\relax \divide\dimen0 by\k\relax  \advance\dimen0 by\h
  \vsplit0 to \dimen0\relax }
%    \end{macrocode}
%  \end{macro}




%  \begin{macro}{\@footnotetext}
%    Of course we also have to adjust the generation of footnotes itself. At
%    the moment  we simply use the standard \LaTeXe{} interface any only
%    adjust it a little bit to support different line sizes (using
%    |\g_xor_footins_hsize_dim|). Eventually this needs a complete rewrite to
%    allow setting other characteristics.
%    \begin{macrocode}
\cs_set:Npn \@footnotetext#1{\insert\footins{%
    \reset@font\footnotesize
    \interlinepenalty\interfootnotelinepenalty
    \splittopskip\footnotesep
    \splitmaxdepth \dp\strutbox \floatingpenalty \@MM
    \hsize\g_xor_footins_hsize_dim \@parboxrestore
    \protected@edef\@currentlabel{%
       \csname p@footnote\endcsname\@thefnmark
    }%
    \color@begingroup
      \@makefntext{%
        \rule\z@\footnotesep\ignorespaces#1\@finalstrut\strutbox}%
    \color@endgroup
\par\penalty-5\relax}}
%    \end{macrocode}
%  \end{macro}
%
%
%
%
%
%
%
%
% \subsubsection{Footnote setup margin}
%
%
%    Setting |max-height| as done below has not the desired effect and
%    needs investigation.\footnote{FIX!}
%
%    Probably broken since I added the new method for dealing with
%    footnotes.\footnote{check/fix}
%
%  \begin{macro}{margin (footnotesetup)}
%    \begin{macrocode}
\DeclareTemplateInterface{footnotesetup}{margin}{0}{
   max-height  : length ,
 }
\DeclareTemplateCode{footnotesetup}{margin}{0}{
   max-height  = global \g_xor_footins_dim,
 }
 {

  \dim_gset:Nn \g_xor_footins_dim {.7\textheight}

  \AssignTemplateKeys

  \dim_gset:Nn  \g_xor_footins_hsize_dim \marginparwidth

  \cs_set_eq:NN \xor_initialize_page_footins_action:   \xor_initialize_footins_margin:
  \cs_set_eq:NN \xor_initialize_column_footins_action: \prg_do_nothing:
  \cs_set_eq:NN \xor_initialize_balance_footins_action:\prg_do_nothing:
  \cs_set_eq:NN \xor_column_end_footins_action:        \xor_deal_with_footins_margin:

%    \end{macrocode}
%    If the footnote do not appear within the columns we have to
%    ensure that the |\insert| does not change the page
%    calculations. This needs changes in two places:
%    \begin{macrocode}
  \int_gzero:N  \g_xor_footins_int
  \skip_gset:Nn \g_xor_footins_skip \c_zero_skip

 }
%    \end{macrocode}
%  \end{macro}
%
%
%
%
% \begin{macro}{\xor_deal_with_footins_margin:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_deal_with_footins_margin: {
%<*trace>
  \trace_push:n{xor_deal_with_footins_margin:}
%</trace>
  \box_if_empty:NF\g_xor_footins_box
     {
      \vbox_gset:Nn \g_xor_saved_footins_box
           {\vbox_unpack_clear:N\g_xor_saved_footins_box
            \vbox_unpack_clear:N\g_xor_footins_box}
     }
%<*trace>
  \trace_pop:n{xor_deal_with_footins_margin:}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%
%
%
% \begin{macro}{\xor_initialize_footins_margin:}
%    \begin{macrocode}
\cs_new_nopar:Npn \xor_initialize_footins_margin: {
  \box_gclear:N \g_xor_saved_footins_box
}
%    \end{macrocode}
% \end{macro}
%
%
