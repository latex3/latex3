% \iffalse meta-comment
%
% xhead.dtx
%
%    This program is provided under the terms of the
% LaTeX Project Public License distributed from CTAN
% archives in directory macros/latex/base/lppl.txt.
%
% Author: Peter Wilson (CUA)
%         now at: peter.r.wilson@boeing.com
% Copyright 2001 Peter R. Wilson
%
% \fi
% \CheckSum{1378}
%
% \changes{v0.1}{2001/05/20}{First public alpha release}
%
% \def\fileversion{v0.1}
% \def\filedate{2001/10/30}
% \title{The LaTeX \Lpack{xhead} and \Lpack{head} packages for configurable
%        headers\thanks{This
%        file has version number \fileversion, last revised
%        \filedate.}}
%
% \author{%
% Peter Wilson\\
% Catholic University of America \\
% Now at \texttt{peter.r.wilson@boeing.com}
% }
% \date{\filedate}
% \maketitle
%
% \begin{abstract}
% The \Lpack{xhead} and \Lpack{head} packages are for configuring
% headers and footers. The \Lpack{head} package uses standard LaTeX
% constructs while the \Lpack{xhead} package is a first attempt
% at using the experimental LaTeX templates.
%
% Both packages provide the same functions. Currently they may only
% be used safely with classes that define both |\chapter| and |\mainmatter|.
%
% \end{abstract}
%
% \tableofcontents
% \listoftables
%
% \StopEventually{}
%
%
%
% \section{Introduction}
%
% This document provides the commented source
% for the LaTeX \Lpack{xhead} and \Lpack{head} packages, which are
% designed for configurable headers and footers; the packages
% are based on a small portion of the \Lpack{memoir} class~\cite{MEMOIR}.
%
%
% The macros forming the package files are defined in sections~\ref{sec:xid}
% and~\ref{sec:id}.
%
% This manual is typeset according to the conventions of the
% \LaTeX{} \textsc{docstrip} utility which enables the automatic
% extraction of the \LaTeX{} macro source files~\cite{GOOSSENS94}.
%
%
%
% \subsection{Page Styles}
%
%    The page style \pstyle{foo} is defined by defining the command
%    |\ps@foo|.   This command should make only local definitions.
%    There should be no stray spaces in the definition, since they
%    could lead to mysterious extra spaces in the output.
%
%    The |\ps@...| command defines the macros |\@oddhead|,
%    |\@oddfoot|, |\@evenhead|, and |\@evenfoot| to define the running
%    heads and feet---e.g., |\@oddhead| is the macro to produce the
%    contents of the heading box for odd-numbered pages.  It is called
%    inside an |\hbox| of width |\textwidth|.
%
% \subsubsection{Marking conventions}
%
%    To make headings determined by the sectioning commands, the page
%    style defines the commands |\chaptermark|, |\sectionmark|,
%    \ldots,\\
%     where |\chaptermark{|\meta{TEXT}|}| is called by
%    |\chapter| to set a mark, and so on.
%
%    The |\...mark| commands and the |\...head| macros are defined
%    with the help of the following macros.  (All the |\...mark|
%    commands should be initialized to no-ops.)
%
%    \LaTeX{} extends \TeX's |\mark| facility by producing two kinds
%    of marks, a `left' and a `right' mark, using the following
%    commands:
%    \begin{flushleft}
%     |\markboth{|\meta{LEFT}|}{|\meta{RIGHT}|}|: Adds both marks.
%
%     |\markright{|\meta{RIGHT}|}|: Adds a `right' mark.
%
%     |\leftmark|: Used in the |\@oddhead|, |\@oddfoot|, |\@evenhead|
%                  or |\@evenfoot| macros, it gets the current `left'
%                  mark.  |\leftmark| works like \TeX's |\botmark|
%                  command.
%
%     |\rightmark|: Used in the |\@oddhead|, |\@oddfoot|, |\@evenhead|
%                   or  |\@evenfoot| macros, it gets the current
%                   `right' mark. |\rightmark| works like \TeX's
%                   |\firstmark| command.
%    \end{flushleft}
%
%    The marking commands work reasonably well for right marks
%    `numbered within' left marks--e.g., the left mark is changed by a
%    |\chapter| command and the right mark is changed by a |\section|
%    command.  However, it does produce somewhat anomalous results if
%    two |\markboth|'s occur on the same page.
%
%
%    Commands like |\tableofcontents| that should set the marks in some
%    page styles use a |\@mkboth| command, which is |\let| by the
%    pagestyle command (|\ps@...|)  to |\markboth| for setting the
%    heading or to |\@gobbletwo| to do nothing.
%
% \subsection{Defining page styles}
%
%    The packages provide a set of commands for the user to define new
% pagestyles. Essentially defining a pagestyle consists of defining the
% macros |\@evenhead{}|, |\@oddhead{}|, |\@evenfoot{}|, and |\@oddfoot{}|.
% For these packages, each header and footer is treated as three parts: a left,
% center, and right part. In this case, defining a pagestyle consists of
% specifying these 12 portions of the running headers and footers. The
% width of the headers/footers may also be specified, rules may be drawn
% below the headers and/or above the footers, and the complete header and/or
% footer may be offset with respect to the textblock when the width is not
% the same as the textwidth.
%
%
% \section{A driver for this document} \label{sec:docstrip}
%
% The next series of code contains the documentation driver file for
% \LaTeX, i.e., the file that will produce the documentation you are
% currently reading. This will be extracted from this file by the
% \textsc{docstrip} program.
%
%    \begin{macrocode}
%<*driver>
\documentclass{l3doc}
\usepackage{url}
\usepackage{docmfp}
  \newcommand{\DescribeTemplate}[1]{\Describe{templates:}{(template)}{#1}}
  \newenvironment{Template}[1]{\begin{Code}{templates:}{(template)}{#1}}%
                               {\end{Code}}
  \newenvironment{Instance}[1]{\begin{Code}{instances:}{(instance)}{#1}}%
                              {\end{Code}}
  \newenvironment{Key}[1]{\Describe{keys:}{(key)}{#1}}%
                         {}
  \newenvironment{KeyMacro}[2]{\begin{Code}{keys:}{(key)}{#1}
                               \begin{macro}{#2}}%
                         {\end{macro}\end{Code}}
%    \end{macrocode}
%
%    We do not want the following basic elements to appear in the index.
%    \begin{macrocode}
\DoNotIndex{\',\.,\@M,\@@input,\@addtoreset,\@arabic,\@badmath}
\DoNotIndex{\@centercr,\@cite}
\DoNotIndex{\@dotsep,\@empty,\@float,\@gobble,\@gobbletwo,\@ignoretrue}
\DoNotIndex{\@input,\@ixpt,\@m}
\DoNotIndex{\@minus,\@mkboth,\@ne,\@nil,\@nomath,\@plus,\@set@topoint}
\DoNotIndex{\@tempboxa,\@tempcnta,\@tempdima,\@tempdimb}
\DoNotIndex{\@tempswafalse,\@tempswatrue,\@viipt,\@viiipt,\@vipt}
\DoNotIndex{\@vpt,\@warning,\@xiipt,\@xipt,\@xivpt,\@xpt,\@xviipt}
\DoNotIndex{\@xxpt,\@xxvpt,\\,\ ,\addpenalty,\addtolength,\addvspace}
\DoNotIndex{\advance,\Alph,\alph}
\DoNotIndex{\arabic,\ast,\begin,\begingroup,\bfseries,\bgroup,\box}
\DoNotIndex{\bullet}
\DoNotIndex{\cdot,\cite,\CodelineIndex,\cr,\day,\DeclareOption}
\DoNotIndex{\def,\DisableCrossrefs,\divide,\DocInput,\documentclass}
\DoNotIndex{\DoNotIndex,\egroup,\ifdim,\else,\fi,\em,\endtrivlist}
\DoNotIndex{\EnableCrossrefs,\end,\end@dblfloat,\end@float,\endgroup}
\DoNotIndex{\endlist,\everycr,\everypar,\ExecuteOptions,\expandafter}
\DoNotIndex{\fbox}
\DoNotIndex{\filedate,\filename,\fileversion,\fontsize,\framebox,\gdef}
\DoNotIndex{\global,\halign,\hangindent,\hbox,\hfil,\hfill,\hrule}
\DoNotIndex{\hsize,\hskip,\hspace,\hss,\if@tempswa,\ifcase,\or,\fi,\fi}
\DoNotIndex{\ifhmode,\ifvmode,\ifnum,\iftrue,\ifx,\fi,\fi,\fi,\fi,\fi}
\DoNotIndex{\input}
\DoNotIndex{\jobname,\kern,\leavevmode,\let,\leftmark}
\DoNotIndex{\list,\llap,\long,\m@ne,\m@th,\mark,\markboth,\markright}
\DoNotIndex{\month,\newcommand,\newcounter,\newenvironment}
\DoNotIndex{\NeedsTeXFormat,\newdimen}
\DoNotIndex{\newlength,\newpage,\nobreak,\noindent,\null,\number}
\DoNotIndex{\numberline,\OldMakeindex,\OnlyDescription,\p@}
\DoNotIndex{\pagestyle,\par,\paragraph,\paragraphmark,\parfillskip}
\DoNotIndex{\penalty,\PrintChanges,\PrintIndex,\ProcessOptions}
\DoNotIndex{\protect,\ProvidesClass,\raggedbottom,\raggedright}
\DoNotIndex{\refstepcounter,\relax,\renewcommand,\reset@font}
\DoNotIndex{\rightmargin,\rightmark,\rightskip,\rlap,\rmfamily,\roman}
\DoNotIndex{\roman,\secdef,\selectfont,\setbox,\setcounter,\setlength}
\DoNotIndex{\settowidth,\sfcode,\skip,\sloppy,\slshape,\space}
\DoNotIndex{\symbol,\the,\trivlist,\typeout,\tw@,\undefined,\uppercase}
\DoNotIndex{\usecounter,\usefont,\usepackage,\vfil,\vfill,\viiipt}
\DoNotIndex{\viipt,\vipt,\vskip,\vspace}
\DoNotIndex{\wd,\xiipt,\year,\z@}
\DoNotIndex{\@namedef,\@nameuse,\csname,\endcsname}
%    \end{macrocode}
%    We do want an index, using linenumbers, but not update information.
%    \begin{macrocode}
\EnableCrossrefs
\CodelineIndex
%% \RecordChanges
%    \end{macrocode}
%    We use so many \file{docstrip} modules that we set the
%    \texttt{StandardModuleDepth} counter to 1.
%    \begin{macrocode}
\setcounter{StandardModuleDepth}{1}
%    \end{macrocode}
%    Some commonly used abbreviations
%    \begin{macrocode}
\newcommand*{\Lopt}[1]{\textsf {#1}}            % typeset an option
\newcommand*{\Lcount}[1]{\textsl {\small#1}}    % typeset a counter
\newcommand*{\pstyle}[1]{\textsl {#1}}          % typeset a pagestyle
\newcommand*{\Lenv}[1]{\texttt {#1}}            % typeset an environment
\newcommand*{\Lpack}[1]{\textsf {#1}}           % typeset a package
\providecommand*{\marg}[1]{\texttt{\{}\meta{#1}\texttt{\}}} % mandatory arg
\providecommand*{\oarg}[1]{\texttt{[}\meta{#1}\texttt{]}}   % optional arg
%    \end{macrocode}
%    We want the full details printed.
%    \begin{macrocode}
\begin{document}
\DocInput{xhead.dtx}
\PrintIndex
%% \PrintChanges
\end{document}
%</driver>
%    \end{macrocode}
%
%
%
%
%
% \section{xhead package code} \label{sec:xid}
%
%    The \Lpack{xhead} package can only be used with LaTeX2e,
% so we make
%    sure that an appropriate message is displayed when another TeX
%    format is used.
%    \begin{macrocode}
%<*xhead>
%    \end{macrocode}
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{xhead}[2001/10/30 v0.1 configurable headers]
\RequirePackage{template}
\RequirePackage{xparse}
\IgnoreWhiteSpace

%    \end{macrocode}
%
%
%
% \subsection{Initial Code} \label{sec:xic}
%
%
% Note (2001/08/03): Old versions of the \Lpack{amsmath} package did odd
% things with |\@tempa|, |\@tempb| and |\@tempc|. I have now replaced
% any use of these with |\@memtempa|, etc.
%
%    In this part we define a few commands that are used later on.
%
% \begin{macro}{\xh@runwidth}
% \begin{macro}{\xh@hrulew}
% \begin{macro}{\xh@hruleh}
% \begin{macro}{\xh@frulew}
% \begin{macro}{\xh@fruleh}
% \begin{macro}{\xh@frules}
% Lengths for head and foot rules.
%    \begin{macrocode}
\newlength{\xh@runwidth}
\newlength{\xh@hrulew}
\newlength{\xh@hruleh}
\newlength{\xh@frulew}
\newlength{\xh@fruleh}
\newlength{\xh@frules}

%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\xh@hfbox}
% A |\parbox| set to the width of the header/footer.
%    \begin{macrocode}
\newcommand{\xh@hfbox}[1]{\parbox[b]{\xh@runwidth}{#1}}

%    \end{macrocode}
% \end{macro}
%
% \subsection{Templates}
%
% \DescribeTemplate{headfoot}
% |headfoot| is a template type with no arguments.
%    \begin{macrocode}
\DeclareTemplateType{headfoot}{0}
%    \end{macrocode}
%
% \begin{Template}{headfoot-std}
% This is the |std| form of the |headfoot| template for configurable
% headers and footers. It sets all keys
% such that headers and footers are blank.
%    \begin{macrocode}
\DeclareTemplate{headfoot}{std}{0}%
{
%    \end{macrocode}
% \begin{KeyMacro}{ehead-left}{\xh@eheadl}
% The contents of the left part of the even header (default --- empty).
%    \begin{macrocode}
  ehead-left   =f0 [] \xh@eheadl,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ehead-center}{\xh@eheadc}
% The contents of the center part of the even header (default --- empty).
%    \begin{macrocode}
  ehead-center =f0 [] \xh@eheadc,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ehead-right}{\xh@eheadr}
% The contents of the right part of the even header (default --- empty).
%    \begin{macrocode}
  ehead-right  =f0 [] \xh@eheadr,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ohead-left}{\xh@oheadl}
% The contents of the left part of the odd header (default --- empty).
%    \begin{macrocode}
  ohead-left   =f0 [] \xh@oheadl,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ohead-center}{\xh@oheadc}
% The contents of the center part of the odd header (default --- empty).
%    \begin{macrocode}
  ohead-center =f0 [] \xh@oheadc,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ohead-right}{\xh@oheadr}
% The contents of the right part of the odd header (default --- empty).
%    \begin{macrocode}
  ohead-right  =f0 [] \xh@oheadr,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{efoot-left}{\xh@efootl}
% The contents of the left part of the even footer (default --- empty).
%    \begin{macrocode}
  efoot-left   =f0 [] \xh@efootl,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{efoot-center}{\xh@efootc}
% The contents of the center part of the even footer (default --- empty).
%    \begin{macrocode}
  efoot-center =f0 [] \xh@efootc,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{efoot-right}{\xh@efootr}
% The contents of the right part of the even footer (default --- empty).
%    \begin{macrocode}
  efoot-right  =f0 [] \xh@efootr,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ofoot-left}{\xh@ofootl}
% The contents of the left part of the odd footer (default --- empty).
%    \begin{macrocode}
  ofoot-left   =f0 [] \xh@ofootl,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ofoot-center}{\xh@ofootc}
% The contents of the center part of the odd footer (default --- empty).
%    \begin{macrocode}
  ofoot-center =f0 [] \xh@ofootc,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ofoot-right}{\xh@offotr}
% The contents of the right part of the odd footer (default --- empty).
%    \begin{macrocode}
  ofoot-right  =f0 [] \xh@ofootr,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{headfoot-width}{\xh@runwidth}
% The total width of the headers and footers (default --- the |\textwidth|).
%    \begin{macrocode}
  headfoot-width =L [\textwidth] \xh@runwidth,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{headrule-width}{\xh@hrulew}
% The width of the header rule (default --- the |\textwidth|).
%    \begin{macrocode}
  headrule-width =l [\textwidth] \xh@hrulew,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{headrule-height}{\xh@hruleh}
% The height (thickness) of the header rule (default --- 0pt).
%    \begin{macrocode}
  headrule-height =l [0pt] \xh@hruleh,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{footrule-width}{\xh@frulew}
% The width of the footer rule (default --- the |\textwidth|).
%    \begin{macrocode}
  footrule-width =l [\textwidth] \xh@frulew,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{footrule-height}{\xh@frulew}
% The height (thickness) of the footer rule (default --- 0pt).
%    \begin{macrocode}
  footrule-height =l [0pt] \xh@fruleh,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{footrule-skip}{\xh@frules}
% The skip above the footer for the footer rule (default --- |\baselineskip|).
%    \begin{macrocode}
  footrule-skip =l [\baselineskip] \xh@frules,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ehead-pos}{\xh@eheadpos}
% The position of the even header with respect to the typeblock,
% which may be |flushleft|, |center|,
% or |flushright| (default --- |center|).
%    \begin{macrocode}
  ehead-pos =f0 [center] \xh@eheadpos,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ohead-pos}{\xh@oheadpos}
% The position of the odd header with respect to the typeblock,
% which may be |flushleft|, |center|,
% or |flushright| (default --- |center|).
%    \begin{macrocode}
  ohead-pos =f0 [center] \xh@oheadpos,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{efoot-pos}{\xh@efootpos}
% The position of the even footer with respect to the typeblock,
% which may be |flushleft|, |center|,
% or |flushright| (default --- |center|).
%    \begin{macrocode}
  efoot-pos =f0 [center] \xh@efootpos,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{ofoot-pos}{\xh@ofootpos}
% The position of the odd footer with respect to the typeblock,
% which may be |flushleft|, |center|,
% or |flushright| (default --- |center|).
%    \begin{macrocode}
  ofoot-pos =f0 [center] \xh@ofootpos,
%    \end{macrocode}
% \end{KeyMacro}
% \begin{KeyMacro}{marks}{\xh@psmarks}
% Code for defining the marks, if any (default --- empty).
%    \begin{macrocode}
  marks =f0 [] \xh@psmarks
%    \end{macrocode}
% \end{KeyMacro}
%
%    \begin{macrocode}
}%
{ \DoParameterAssignments
%    \end{macrocode}
% \begin{macro}{\xh@evenhpl}
% \begin{macro}{\xh@evenhpr}
% \begin{macro}{\xh@evenfpl}
% \begin{macro}{\xh@evenfpr}
% \begin{macro}{\xh@oddhpl}
% \begin{macro}{\xh@oddhpr}
% \begin{macro}{\xh@oddfpl}
% \begin{macro}{\xh@oddfpr}
% These are the spacings before and after the headers and footers. They
% are all initially defined to be |\hss| to give a centered position.
%    \begin{macrocode}
  \def\xh@evenhpl{\hss} \def\xh@evenhpr{\hss}
  \def\xh@evenfpl{\hss} \def\xh@evenfpr{\hss}
  \def\xh@oddhpl{\hss} \def\xh@oddhpr{\hss}
  \def\xh@oddfpl{\hss} \def\xh@oddfpr{\hss}
%    \end{macrocode}
% For |flushleft| the left spacing is |\relax| and the right is |\hss|.
%    \begin{macrocode}
  \def\@memtempa{flushleft}
  \ifx\xh@eheadpos\@memtempa
    \def\xh@evenhpl{\relax}
  \fi
  \ifx\xh@oheadpos\@memtempa
    \def\xh@oddhpl{\relax}
  \fi
  \ifx\xh@efootpos\@memtempa
    \def\xh@evenfpl{\relax}
  \fi
  \ifx\xh@ofootpos\@memtempa
    \def\xh@oddfpl{\relax}
  \fi
%    \end{macrocode}
% For |flushright| the left spacing is |\hss| and the
% right is |\relax|.
%    \begin{macrocode}
  \def\@memtempa{flushright}
  \ifx\xh@eheadpos\@memtempa
    \def\xh@evenhpr{\relax}
  \fi
  \ifx\xh@oheadpos\@memtempa
    \def\xh@oddhpr{\relax}
  \fi
  \ifx\xh@efootpos\@memtempa
    \def\xh@evenfpr{\relax}
  \fi
  \ifx\xh@ofootpos\@memtempa
    \def\xh@oddfpr{\relax}
  \fi
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\headrule}
% This macro draws a header rule, the dimensions of which are given
% by the keys |headrule-width| and |headrule-height|.
%    \begin{macrocode}
  \def\headrule{%
    \hrule\@width \xh@hrulew\@height \xh@hruleh \vskip -\xh@hruleh}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\footrule}
% This macro draws a footer rule, the dimensions and vertical displacement
% of which are given by the keys |footrule-width|, |footrule-height|
% and |footrule-skip|..
%    \begin{macrocode}
  \def\footrule{%
    \vskip -\xh@frules\vskip -\xh@fruleh
    \hrule\@width \xh@frulew\@height \xh@fruleh \vskip -\xh@frules}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@evenhead}
% The macro for printing an even header. The three parts of the header
% are put into parboxes, with fills between them, and the whole lot
% is put into a box the width of the header, including the head rule.
% Fills are put before and
% after the main box which control its position with respect to the
% typeblock.
%    \begin{macrocode}
  \def\@evenhead{%
    \xh@evenhpl\hbox to\xh@runwidth{\vbox{\hbox{%
      \rlap{\xh@hfbox{\raggedright\xh@eheadl\strut}}\hfill
      \xh@hfbox{\centering\xh@eheadc\strut}\hfill
      \llap{\xh@hfbox{\raggedleft\xh@eheadr\strut}}}%
      \headrule}}\xh@evenhpr}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@oddhead}
% The macro for printing an odd header.
%    \begin{macrocode}
  \def\@oddhead{%
    \xh@oddhpl\hbox to\xh@runwidth{\vbox{\hbox{%
      \rlap{\xh@hfbox{\raggedright\xh@oheadl\strut}}\hfill
      \xh@hfbox{\centering\xh@oheadc\strut}\hfill
      \llap{\xh@hfbox{\raggedleft\xh@oheadr\strut}}}%
      \headrule}}\xh@oddhpr}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@evenfoot}
% The macro for printing an even footer.
%    \begin{macrocode}
  \def\@evenfoot{%
    \xh@evenfpl\hbox to\xh@runwidth{\vbox{\footrule\hbox{%
      \rlap{\xh@hfbox{\raggedright\xh@efootl\strut}}\hfill
      \xh@hfbox{\centering\xh@efootc\strut}\hfill
      \llap{\xh@hfbox{\raggedleft\xh@efootr\strut}}}%
      }}\xh@evenfpr}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@oddfoot}
% The macro for printing an odd footer.
%    \begin{macrocode}
  \def\@oddfoot{%
    \xh@oddfpl\hbox to\xh@runwidth{\vbox{\footrule\hbox{%
      \rlap{\xh@hfbox{\raggedright\xh@ofootl\strut}}\hfill
      \xh@hfbox{\centering\xh@ofootc\strut}\hfill
      \llap{\xh@hfbox{\raggedleft\xh@ofootr\strut}}}%
      }}\xh@oddfpr}
%    \end{macrocode}
% \end{macro}
% Finally, process any extra code.
%    \begin{macrocode}
  \xh@psmarks
}

%    \end{macrocode}
% \end{Template}
%
% \subsection{empty instance}
%
% \begin{Instance}{headfoot-empty}
% The |empty| instance is the same as the |std| form.
%    \begin{macrocode}

\DeclareInstance{headfoot}{empty}{std}{}

%    \end{macrocode}
% \end{Instance}
%
%
% \subsection{plain instance}
%
% \begin{Instance}{headfoot-plain}
% With the |plain| instance the central footers contain the page numbers.
%    \begin{macrocode}
\DeclareInstance{headfoot}{plain}{std}{%
%    \end{macrocode}
% \begin{Key}{efoot-center}
% \begin{Key}{ofoot-center}
% Center the page number in the even and odd footers.
%    \begin{macrocode}
  efoot-center = \thepage,
  ofoot-center = \thepage,
}
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Instance}
%
%
% \subsection{headings instances}
%
% \begin{Instance}{headfoot-twoheadings}
% The |twoheadings| instance is for the |headings| page style in
% two-sided documents.
%
%    \begin{macrocode}
\DeclareInstance{headfoot}{twoheadings}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
% Code for defining the |\chaptermark| and |\sectionmark|.
%    \begin{macrocode}
  marks = \let\@mkboth\markboth
         \def\chaptermark##1{%
           \markboth{\MakeUppercase{%
             \ifnum \c@secnumdepth >\m@ne
               \if@mainmatter
                 \@chapapp\space\thechapter. \space %
               \fi
             \fi
             ##1}}{}}%
         \def\sectionmark##1{%
           \markright{\MakeUppercase{%
             \ifnum \c@secnumdepth > \z@
               \thesection. \space %
             \fi
             ##1}}},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ehead-left}
% \begin{Key}{ohead-right}
% Page number at the left of even page headers and the right on odd pages.
%    \begin{macrocode}
  ehead-left = \thepage,
  ohead-right = \thepage,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-right}
% The |\leftmark| (i.e., the |\chaptermark|) in a slanted font at the right
% of even headers.
%    \begin{macrocode}
  ehead-right = \slshape\leftmark,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-left}
% The |\rightmark| (i.e., the |\chaptermark| or |\sectionmark|)
% in a slanted font at the left
% of odd headers.
%    \begin{macrocode}
  ohead-left = \slshape\rightmark,
}
%    \end{macrocode}
% \end{Key}
% \end{Instance}
%
% \begin{Instance}{headfoot-oneheadings}
% The |oneheadings| instance is for the |headings| page style in
% one-sided documents.
%
%    \begin{macrocode}
\DeclareInstance{headfoot}{oneheadings}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
% Code for defining the |\chaptermark|.
%    \begin{macrocode}
  marks = \let\@mkboth\markboth
         \def\chaptermark##1{%
           \markright{\MakeUppercase{%
             \ifnum \c@secnumdepth >\m@ne
               \if@mainmatter
                 \@chapapp\space\thechapter. \space %
               \fi
             \fi
             ##1}}},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-left}
% The |\rightmark| (i.e., the |\chaptermark| or |\sectionmark|)
% in a slanted font at the left
% of odd headers.
%    \begin{macrocode}
  ohead-left = \slshape\rightmark,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ehead-right}
% The page number is at the right
% of even headers.
%    \begin{macrocode}
  ehead-right = \thepage,
}
%    \end{macrocode}
% \end{Key}
% \end{Instance}
%
%
% \subsection{myheadings instance}
%
% \begin{Instance}{headfoot-myheadings}
% The instance for the |myheadings| page style.
%    \begin{macrocode}
\DeclareInstance{headfoot}{myheadings}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
% Code for gobbling marks.
%    \begin{macrocode}
  marks = \let\@mkboth\@gobbletwo
         \let\chaptermark\@gobble
         \let\sectionmark\@gobble,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-left}
% \begin{Key}{ohead-right}
% The odd headers have the |\rightmark| and then the
%  page number right justified.
%    \begin{macrocode}
  ohead-left = \slshape\rightmark,
  ohead-right = \thepage,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-left}
% \begin{Key}{ehead-right}
% The left part of even headers have the page number and the
% |\leftmark| right justified.
%    \begin{macrocode}
  ehead-left = \thepage,
  ehead-right = \slshape\leftmark,
}
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Instance}
%
%
% \subsection{ruled instance}
%
%    Headers and footers are the same width as the type block, there
% is a rule under the headers, page numbers are set in the footers at
% the outside of the page. Even page headers have the chapter number and
% title at the left, and odd page headers have the section title at the
% right.
%
% \begin{macro}{\@ruledmarks}
% Code common to at least two instances.
%    \begin{macrocode}
\newcommand{\@ruledmarks}{%
  \let\@mkboth\markboth
  \def\chaptermark##1{%
    \markboth{%
      \ifnum \c@secnumdepth >\m@ne
        \if@mainmatter
          \thechapter. \space %
        \fi
      \fi
      ##1}{}}
  \def\sectionmark##1{\markright{##1}}}

%    \end{macrocode}
% \end{macro}
%
% \begin{Instance}{headfoot-ruled}
% For the |ruled| page style.
%    \begin{macrocode}
\DeclareInstance{headfoot}{ruled}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
%    \begin{macrocode}
  marks = \@ruledmarks,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{efoot-left}
% \begin{Key}{ofoot-right}
% Left part of even footers and the right part of odd footers
% has the page number.
%    \begin{macrocode}
  efoot-left = \thepage,
  ofoot-right = \thepage,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-left}
% Left part of even headers has the |\leftmark| in small caps.
%    \begin{macrocode}
  ehead-left = {\scshape\leftmark},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-right}
% Right part of odd headers has the |\rightmark|.
%    \begin{macrocode}
  ohead-right = \rightmark,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{headrule-width}
% \begin{Key}{headrule-height}
% The width and height of the header rule are |\textwidth| and 0.4pt.
%    \begin{macrocode}
  headrule-width = \textwidth,
  headrule-height = 0.4pt,
}
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Instance}
%
%
% \subsection{Ruled instance}
%
% This is the same as |ruled| except that the headers and footers are 10\%
% wider than the type block, sticking out into the fore edge.
%
% \begin{Instance}{headfoot-Ruled}
% For the |Ruled| page style.
%    \begin{macrocode}
\DeclareInstance{headfoot}{Ruled}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
%    \begin{macrocode}
  marks = \@ruledmarks,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{efoot-left}
% \begin{Key}{ofoot-right}
% The page number is at the left of even footers and the right of odd footers.
%    \begin{macrocode}
  efoot-left = \thepage,
  ofoot-right = \thepage,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-left}
% The |\leftmark|, in small caps, is at the left of even headers.
%    \begin{macrocode}
  ehead-left = {\scshape\leftmark},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-right}
% The |\rightmark| is at the right of odd headers.
%    \begin{macrocode}
  ohead-right = \rightmark,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{headrule-width}
% \begin{Key}{headrule-height}
% The width of the header rule is 10\% greater than the |\textwidth|.
% its height is 0.4pt.
%    \begin{macrocode}
  headrule-width = 1.1\textwidth,
  headrule-height = 0.4pt,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{headfoot-width}
% The width of the headers and footers is 10\% greater than the |\textwidth|.
%    \begin{macrocode}
  headfoot-width = 1.1\textwidth,
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ehead-pos}
% \begin{Key}{efoot-pos}
% Even headers and footers are flushright.
%    \begin{macrocode}
  ehead-pos = flushright,
  efoot-pos = flushright,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ohead-pos}
% \begin{Key}{ofoot-pos}
% Odd headers and footers are flushleft.
%    \begin{macrocode}
  ohead-pos = flushleft,
  ofoot-pos = flushleft,
}
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Instance}
%
% \begin{macro}{\headwidth}
% A new length.
%    \begin{macrocode}
\newlength{\headwidth}
  \setlength{\headwidth}{\textwidth}

%    \end{macrocode}
% \end{macro}
%
%
% \subsection{companion instance}
%
% \begin{Instance}{headfoot-companion}
% For headers and footers similar to those in the LaTeX companion series.
%    \begin{macrocode}
\DeclareInstance{headfoot}{companion}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
%    \begin{macrocode}
  marks = \let\@mkboth\markboth
         \def\chaptermark##1{\markboth{##1}{##1}}
         \def\sectionmark##1{\markright{%
           \ifnum \c@secnumdepth>\z@
             \thesection. \space %
           \fi
           ##1}},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{headfoot-width}
% \begin{Key}{headrule-width}
% \begin{Key}{headrule-height}
% The width of the headers, footers and the headrule has to be determined
% at run time, but the head rule height is 0.4pt.
%    \begin{macrocode}
  headfoot-width = \DelayEvaluation{\headwidth},
  headrule-width = \DelayEvaluation{\headwidth},
  headrule-height = 0.4pt,
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-pos}
% \begin{Key}{ohead-pos}
% Even headers are flushright and odd headers are flushleft.
%    \begin{macrocode}
  ehead-pos = flushright,
  ohead-pos = flushleft,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-left}
% \begin{Key}{ehead-right}
% Bold page number in left part of even header, and bold |\leftmark|
% in the right part.
%    \begin{macrocode}
  ehead-left = {\normalfont\bfseries\thepage},
  ehead-right = {\normalfont\bfseries\leftmark},
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ohead-left}
% \begin{Key}{ohead-right}
% Bold |\rightmark| at left of odd header and bold page number at the right.
%    \begin{macrocode}
  ohead-left = {\normalfont\bfseries\rightmark},
  ohead-right = {\normalfont\bfseries\thepage},
}
%    \end{macrocode}
% \end{Key}
% \end{Key}
% \end{Instance}
%
%
% \subsection{margins instance}
%
% The |margins| style is based on the page style used in Bringhurst's
% \textit{The Elements of Typographic Style}. The page numbers are at
% the bottom of the page aligned with the outside of the typeblock.
% The chapter title is in the outside margin on odd pages and the section
% title is in the outside margin on even pages. These `headers' are at about
% the seventh line of text. Even headers are set raggedleft and the odd
% headers raggedright in an italic font.
%
% \begin{macro}{\xh@tempdima}
% \begin{macro}{\xh@tempdimb}
% Two scratch lengths.
%    \begin{macrocode}
\newlength{\xh@tempdima}
\newlength{\xh@tempdimb}

%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\marginpicr}
% |\marginpicr|\marg{stuff} puts \meta{stuff} into a zero-sized picture \\
% at position |(\marginparsep, -\xh@tempdima)|.
%    \begin{macrocode}
\newcommand{\marginpicr}[1]{%
  \setlength{\unitlength}{1pt}
  \begin{picture}(0,0)
    \put(\strip@pt\marginparsep, -\strip@pt\xh@tempdima){%
      \begin{minipage}[t]{\marginparwidth}
        \raggedright\itshape #1
      \end{minipage}}
  \end{picture}
}
\setlength{\xh@tempdima}{\headsep}
  \addtolength{\xh@tempdima}{\topskip}
  \addtolength{\xh@tempdima}{7.3\baselineskip}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\marginpicl}
% |\marginpicl|\marg{stuff} puts \meta{stuff} into a zero-sized picture \\
% at position |(-\xh@tempdimb, -\xh@tempdima)|.
%    \begin{macrocode}
\newcommand{\marginpicl}[1]{%
  \setlength{\unitlength}{1pt}
  \begin{picture}(0,0)
    \put(-\strip@pt\xh@tempdimb, -\strip@pt\xh@tempdima){%
      \begin{minipage}[t]{\marginparwidth}
        \raggedleft\itshape #1
      \end{minipage}}
  \end{picture}
}
\setlength{\xh@tempdimb}{\marginparsep}
  \addtolength{\xh@tempdimb}{\marginparwidth}

%    \end{macrocode}
% \end{macro}
%
% \begin{Instance}{headfoot-margins}
% Puts marks into the margins.
%    \begin{macrocode}
\DeclareInstance{headfoot}{margins}{std}{%
%    \end{macrocode}
% \begin{Key}{marks}
%    \begin{macrocode}
  marks = \let\@mkboth\markboth
         \def\chaptermark##1{\markboth{##1}{##1}}
         \def\sectionmark##1{\markright{##1}},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{efoot-left}
% \begin{Key}{ofoot-right}
% The page number is at the left of even footers and the right of odd footers.
%    \begin{macrocode}
  efoot-left = \thepage,
  ofoot-right = \thepage,
%    \end{macrocode}
% \end{Key}
% \end{Key}
%
% \begin{Key}{ehead-left}
% |\rightmark| is in the left margin on even pages.
%    \begin{macrocode}
  ehead-left = \marginpicl{\rightmark},
%    \end{macrocode}
% \end{Key}
%
% \begin{Key}{ohead-right}
% |\leftmark| is in the right margin on odd pages.
%    \begin{macrocode}
  ohead-right = \marginpicr{\leftmark},
}
%    \end{macrocode}
% \end{Key}
% \end{Instance}
%
%
%
% \subsection{Document pagestyles}
%
% \begin{macro}{\ps@empty}
% \begin{macro}{\ps@plain}
% \begin{macro}{\ps@headings}
% \begin{macro}{\ps@myheadings}
% The `standard' page styles.
%    \begin{macrocode}
\DeclareDocumentCommand{\ps@empty}{}{\UseInstance{headfoot}{empty}}
\DeclareDocumentCommand{\ps@plain}{}{\UseInstance{headfoot}{plain}}
\DeclareDocumentCommand{\ps@headings}{}{%
  \if@twoside
    \UseInstance{headfoot}{twoheadings}
  \else
    \UseInstance{headfoot}{oneheadings}
  \fi
}
\DeclareDocumentCommand{\ps@myheadings}{}{\UseInstance{headfoot}{myheadings}}

%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\ps@ruled}
% \begin{macro}{\ps@Ruled}
% \begin{macro}{\ps@companion}
% \begin{macro}{\ps@margins}
% Additional page styles.
%    \begin{macrocode}
\DeclareDocumentCommand{\ps@ruled}{}{\UseInstance{headfoot}{ruled}}
\DeclareDocumentCommand{\ps@Ruled}{}{\UseInstance{headfoot}{Ruled}}
\DeclareDocumentCommand{\ps@companion}{}{%
  \setlength{\headwidth}{\textwidth}
    \addtolength{\headwidth}{\marginparsep}
    \addtolength{\headwidth}{\marginparwidth}
  \UseInstance{headfoot}{companion}}
\DeclareDocumentCommand{\ps@margins}{}{\UseInstance{headfoot}{margins}}

%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\aliaspagestyle}
% The command |\aliaspagestyle|\marg{alias}\marg{original}
% defines the \meta{alias} pagestyle to be an alias for the
% \meta{original} pagestyle.
%    \begin{macrocode}
\newcommand{\aliaspagestyle}[2]{%
  \@namedef{ps@#1}{\@nameuse{ps@#2}}}

%    \end{macrocode}
% \end{macro}
%
%
%    The end of the package definitions.
%    \begin{macrocode}
%</xhead>
%    \end{macrocode}
%
%
%
%
%
% \section{head package code} \label{sec:id}
%
%    The \Lpack{head} package can only be used with LaTeX2e,
% so we make
%    sure that an appropriate message is displayed when another TeX
%    format is used.
%    \begin{macrocode}
%<*head>
%    \end{macrocode}
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{head}[2001/10/30 v0.1 configurable headers]
%    \end{macrocode}
%
%
%
% \subsection{Initial Code} \label{sec:ic}
%
%
%    In this part we define a few commands that are used later on.
%
%    \begin{macrocode}
\newif\ifsamename
\providecommand{\nametest}[2]{%
  \samenamefalse
  \begingroup
    \def\@memtempa{#1} \def\@memtempb{#2}
    \ifx\@memtempa\@memtempb
      \endgroup
      \samenametrue
    \else
      \endgroup
    \fi
}

%    \end{macrocode}
%
%
% \subsection{Main Code} \label{sec:mc}
%
%
%
%    In the following \meta{style} is the name of a pagestyle being defined
% (e.g., |ruled|).
%
%
% \begin{macro}{\makeevenhead}
% The command
% |\makeevenhead{|\meta{style}|}{|\meta{left}|}{|\meta{center}|}{|\meta{right}|}|
% specifies that the left, center and right portions of the even header for
% pagestyle \meta{style} are defined as the other three arguments, respectively.
% Internally it defines the commands |\styleeheadl|, |\styleeheadc| and
% |\styleeheadr| to be \meta{left}, \meta{center} and \meta{right} respectively.
%    \begin{macrocode}
\newcommand{\makeevenhead}[4]{%
  \@namedef{#1eheadl}{#2}
  \@namedef{#1eheadc}{#3}
  \@namedef{#1eheadr}{#4}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\makeoddhead}
% \begin{macro}{\makeevenfoot}
% \begin{macro}{\makeoddfoot}
%  These three macros are similar to |\makeevenhead| except that they are
% for the oddhead, evenfoot and oddfoot.
%    \begin{macrocode}
\newcommand{\makeoddhead}[4]{%
  \@namedef{#1oheadl}{#2}
  \@namedef{#1oheadc}{#3}
  \@namedef{#1oheadr}{#4}
}
\newcommand{\makeevenfoot}[4]{%
  \@namedef{#1efootl}{#2}
  \@namedef{#1efootc}{#3}
  \@namedef{#1efootr}{#4}
}
\newcommand{\makeoddfoot}[4]{%
  \@namedef{#1ofootl}{#2}
  \@namedef{#1ofootc}{#3}
  \@namedef{#1ofootr}{#4}
}

%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\makerunningwidth}
%  The macro |\makerunningwidth{|\meta{style}|}{|\meta{length}|}| sets the
% width of the headers and footers of pagestyle \meta{style} to be \meta{length}.
%    \begin{macrocode}
\newcommand{\makerunningwidth}[2]{%
  \@namedef{#1runwidth}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\normalrulethickness}
% \begin{macro}{\footruleheight}
% \begin{macro}{\footruleskip}
% \begin{macro}{\makeheadrule}
% \begin{macro}{\makefootrule}
% |\normalrulethickness| is the thickness of a normal horizontal
% or vertical rule.
% |\footruleheight| is the height of a normal rule above a footer (actually zero).
% |\footruleskip| is a distance sufficient to ensure that a foot rule
% will appear between the bottom of the textblock and above any actual footer.
%    \begin{macrocode}
\newcommand{\normalrulethickness}{0.4pt}
\newcommand{\footruleheight}{\z@skip}
\newcommand{\footruleskip}{0.3\normalbaselineskip}
%    \end{macrocode}
% The macro |\makeheadrule{|\meta{style}|}{|\meta{width}|}{|\meta{height}|}|
% specifies the width and height of the header rule for \meta{style}.
%
% Similarly
% |\makefootrule{|\meta{style}|}{|\meta{width}|}{|\meta{height}|}{|\meta{skip}|}|
% specifies the width, height and skip for the footrule.
%    \begin{macrocode}
\newcommand{\makeheadrule}[3]{%
  \@namedef{#1headrule}{%
    \hrule\@width #2\@height #3 \vskip-#3}
}
\newcommand{\makefootrule}[4]{%
  \@namedef{#1footrule}{%
    \vskip-#4\vskip-#3
    \hrule\@width #2\@height #3 \vskip #4}
}

%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\makeheadposition}
% |\makeheadposition{|\meta{style}|}{|\meta{eheadpos}|}{|\meta{oheadpos}|}{|\meta{efootpos}|}{|\meta{ofootpos}|}|
% specifies the horizontal positioning of the even and odd headers and footers,
% respectively,
% for the pagestyle \meta{style}. Each of the \meta{...pos} arguments may be
% either |flushleft|, |center| or |flushright|, with the obvious meanings.
% An empty argument (or an unrecognised one) is equivalent to |center|.
%    \begin{macrocode}
\newcommand{\makeheadposition}[5]{%
%    \end{macrocode}
% Do the even head position first.
%    \begin{macrocode}
  \nametest{flushleft}{#2}
  \ifsamename
    \@namedef{#1evenhpl}{\relax} \@namedef{#1evenhpr}{\hss}
  \else
    \nametest{flushright}{#2}
    \ifsamename
      \@namedef{#1evenhpl}{\hss} \@namedef{#1evenhpr}{\relax}
    \else
      \@namedef{#1evenhpl}{\hss} \@namedef{#1evenhpr}{\hss}
    \fi
  \fi
%    \end{macrocode}
% And similarly for the odd head and even \& odd footers.
%    \begin{macrocode}
  \nametest{flushleft}{#3}
  \ifsamename
    \@namedef{#1oddhpl}{\relax} \@namedef{#1oddhpr}{\hss}
  \else
    \nametest{flushright}{#3}
    \ifsamename
      \@namedef{#1oddhpl}{\hss} \@namedef{#1oddhpr}{\relax}
    \else
      \@namedef{#1oddhpl}{\hss} \@namedef{#1oddhpr}{\hss}
    \fi
  \fi
  \nametest{flushleft}{#4}
  \ifsamename
    \@namedef{#1evenfpl}{\relax} \@namedef{#1evenfpr}{\hss}
  \else
    \nametest{flushright}{#4}
    \ifsamename
      \@namedef{#1evenfpl}{\hss} \@namedef{#1evenfpr}{\relax}
    \else
      \@namedef{#1evenfpl}{\hss} \@namedef{#1evenfpr}{\hss}
    \fi
  \fi
  \nametest{flushleft}{#5}
  \ifsamename
    \@namedef{#1oddfpl}{\relax} \@namedef{#1oddfpr}{\hss}
  \else
    \nametest{flushright}{#5}
    \ifsamename
      \@namedef{#1oddfpl}{\hss} \@namedef{#1oddfpr}{\relax}
    \else
      \@namedef{#1oddfpl}{\hss} \@namedef{#1oddfpr}{\hss}
    \fi
  \fi
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\makepshook}
% The macro |\makepshook{|\meta{style}|}{|\meta{code}|}| specifies that
% \meta{code} is the definition of the hook for pagestyle \meta{style}.
%    \begin{macrocode}
\newcommand{\makepshook}[2]{%
  \@namedef{#1pshook}{#2}
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\makepagestyle}
%  At last we can put everything together for defining a new pagestyle,
% via the macro |\makepagestyle{|\meta{style}|}| which initially sets up
% a new pagestyle \meta{style} corresponding the LaTeX |empty|
% pagestyle. The prior macros can then be used to make modifications
% to the style.
%    \begin{macrocode}
\newcommand{\makepagestyle}[1]{%
%    \end{macrocode}
% First define the macro |\ps@style|, which in turn defines the macros
% |\@evenhead|, |\@oddhead|, |\@evenfoot| and |\@oddfoot|.
%    \begin{macrocode}
  \@namedef{ps@#1}{%
    \def\@evenhead{%
%    \end{macrocode}
% The code for the definition of |\@evenhead| and friends is based on code
% from Piet van Oostrum's \Lpack{fancyhdr} package~\cite{FANCYHDR}. The three
% parts of the header are put into parboxes, with fills between them, and
% the whole lot is put into a box the width of the header. Fillers are put
% before and after the main box which control the header position.
%
% First the left filler which is either |\relax| or |\hss|, and then
% start the main box.
%    \begin{macrocode}
      \@nameuse{#1evenhpl}\hbox to\@nameuse{#1runwidth}{\vbox{\hbox{%
%    \end{macrocode}
% The left part of the header.
%    \begin{macrocode}
        \rlap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedright\@nameuse{#1eheadl}\strut}}\hfill
%    \end{macrocode}
% The center part of the header.
%    \begin{macrocode}
              \parbox[b]{\@nameuse{#1runwidth}}{%
          \centering\@nameuse{#1eheadc}\strut}\hfill
%    \end{macrocode}
% The right part of the header.
%    \begin{macrocode}
        \llap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedleft\@nameuse{#1eheadr}\strut}}}%
%    \end{macrocode}
% Finally, the header rule and finish with the right filler, which
% is either |\relax| or |\hss|.
%    \begin{macrocode}
        \@nameuse{#1headrule}}}\@nameuse{#1evenhpr}}
%    \end{macrocode}
% The code for the |\@oddhead|, |\@evenfoot| and |\@oddfoot| follows
% a similar pattern. Here is |\@oddhead|.
%    \begin{macrocode}
    \def\@oddhead{%
      \@nameuse{#1oddhpl}\hbox to\@nameuse{#1runwidth}{\vbox{\hbox{%
        \rlap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedright\@nameuse{#1oheadl}\strut}}\hfill
              \parbox[b]{\@nameuse{#1runwidth}}{%
          \centering\@nameuse{#1oheadc}\strut}\hfill
        \llap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedleft\@nameuse{#1oheadr}\strut}}}%
        \@nameuse{#1headrule}}}\@nameuse{#1oddhpr}}
%    \end{macrocode}
% And |\@evenfoot|. For the footers the rules come \emph{before} any foot
% entries.
%    \begin{macrocode}
    \def\@evenfoot{%
      \@nameuse{#1evenfpl}\hbox to\@nameuse{#1runwidth}{\vbox{\@nameuse{#1footrule}\hbox{%
        \rlap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedright\@nameuse{#1efootl}\strut}}\hfill
              \parbox[b]{\@nameuse{#1runwidth}}{%
          \centering\@nameuse{#1efootc}\strut}\hfill
        \llap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedleft\@nameuse{#1efootr}\strut}}}%
        }}\@nameuse{#1evenfpr}}
%    \end{macrocode}
% Lastly the |\@oddfoot|.
%    \begin{macrocode}
    \def\@oddfoot{%
      \@nameuse{#1oddfpl}\hbox to\@nameuse{#1runwidth}{\vbox{\@nameuse{#1footrule}\hbox{%
        \rlap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedright\@nameuse{#1ofootl}\strut}}\hfill
              \parbox[b]{\@nameuse{#1runwidth}}{%
          \centering\@nameuse{#1ofootc}\strut}\hfill
        \llap{\parbox[b]{\@nameuse{#1runwidth}}{%
          \raggedleft\@nameuse{#1ofootr}\strut}}}%
        }}\@nameuse{#1oddfpr}}
%    \end{macrocode}
% To finish off the definition of |\ps@style|, add in a hook which can be
% defined so that it adds additional code, if required.
%    \begin{macrocode}
    \@nameuse{#1pshook}
  }
%    \end{macrocode}
% The final part of setting up the new pagestyle is defining all the macros
% called by |\ps@style|, and giving them default values. Make the headers
% and footers empty.
%    \begin{macrocode}
  \makeevenhead{#1}{}{}{}
  \makeoddhead{#1}{}{}{}
  \makeevenfoot{#1}{}{}{}
  \makeoddfoot{#1}{}{}{}
%    \end{macrocode}
% Make the headers/footers the same width as the |\textwidth|, center
% them, and ensure
% that the rules have zero height so that they will be invisible.
%    \begin{macrocode}
  \makerunningwidth{#1}{\textwidth}
  \makeheadposition{#1}{}{}{}{}
  \makeheadrule{#1}{\textwidth}{0pt}
  \makefootrule{#1}{\textwidth}{\footruleheight}{\footruleskip}
%    \end{macrocode}
% Finally, there is no additional code needed, so make the hook empty, and
% we are done.
%    \begin{macrocode}
  \makepshook{#1}{}
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\aliaspagestyle}
% The command |\aliaspagestyle{|\meta{aliasl}|}{|\meta{original}|}|
% defines the \meta{alias} pagestyle to be an alias for the
% \meta{original} pagestyle.
%    \begin{macrocode}
\newcommand{\aliaspagestyle}[2]{%
  \@namedef{ps@#1}{\@nameuse{ps@#2}}}

%    \end{macrocode}
% \end{macro}
%
%    The pagestyles \pstyle{empty} and \pstyle{plain} are defined
%    in \file{latex.dtx}. However, I will redefine them here, just in
% case someone takes a fancy to modifying them.
%
%
% \subsection{empty pagestyle}
%
% \begin{macro}{\ps@empty}
% The \pstyle{empty} pagestyle is simple, it's just what we get when
% we call |\makepagestyle|.
%    \begin{macrocode}
\makepagestyle{empty}

%    \end{macrocode}
% \end{macro}
%
%
%
% \subsection{plain pagestyle}
%
% \begin{macro}{\ps@plain}
% The \pstyle{plain} pagestyle is also simple, it just puts the
% page number at the bottom middle of the page.
% we call |\makepagestyle|.
%    \begin{macrocode}
\makepagestyle{plain}
  \makeevenfoot{plain}{}{\thepage}{}
  \makeoddfoot{plain}{}{\thepage}{}

%    \end{macrocode}
% \end{macro}
%
%
% \subsection{headings pagestyle}
%
% \begin{macro}{\ps@headings}
%    The \pstyle{headings} pagestyle behaves differently for
% twosided and onesided printing. This is a rewrite of the
% standard style.
%    \begin{macrocode}
\if@twoside
%    \end{macrocode}
% The footer is empty and the header contains the page number and
% one of the marks.
%    \begin{macrocode}
  \makepagestyle{headings}
    \makepshook{headings}{%
      \let\@mkboth\markboth
      \def\chaptermark##1{%
        \markboth{\MakeUppercase{%
          \ifnum \c@secnumdepth >\m@ne
            \if@mainmatter
              \@chapapp\ \thechapter. \ %
            \fi
          \fi
          ##1}}{}}%
       \def\sectionmark##1{%
         \markright{\MakeUppercase{%
           \ifnum \c@secnumdepth > \z@
             \thesection. \ %
           \fi
           ##1}}}}
    \makeevenhead{headings}{\thepage}{}{\slshape\leftmark}
    \makeoddhead{headings}{\slshape\rightmark}{}{\thepage}
\else
%    \end{macrocode}
% For one sided printing even and odd pages are treated the same,
% so no need to bother with the evenhead, and
% just the |\rightmark| is used.
%    \begin{macrocode}
  \makepagestyle{headings}
    \makepshook{headings}{%
      \let\@mkboth\markboth
      \def\chaptermark##1{%
        \markright{\MakeUppercase{%
          \ifnum \c@secnumdepth >\m@ne
            \if@mainmatter
              \@chapapp\ \thechapter. \ %
            \fi
          \fi
          ##1}}}}
    \makeoddhead{headings}{\slshape\rightmark}{}{\thepage}
\fi

%    \end{macrocode}
% \end{macro}
%
%
% \subsection{myheadings pagestyle}
%
% \begin{macro}{\ps@myheadings}
%    The \pstyle{myheadings} page style is simpler because the user
% has to specify the contents using |\markboth| and |\markright|
% commands. This is the definition used in the standard classes.
%    \begin{macrocode}
\def\ps@myheadings{%
  \let\@oddfoot\@empty\let\@evenfoot\@empty
  \def\@evenhead{\thepage\hfil{\slshape\leftmark}}%
  \def\@oddhead{{\slshape\rightmark}\hfil\thepage}%
  \let\@mkboth\@gobbletwo
  \let\chaptermark\@gobble
  \let\sectionmark\@gobble
}

%    \end{macrocode}
% \end{macro}
%
%
% \subsection{ruled pagestyle}
%
%
%
% \begin{macro}{\ps@ruled}
%    Partly to show how it is done, the package provides a \pstyle{ruled} pagestyle.
% In this style the headers and footers are the same width as the textblock,
% there is a rule under the header, page numbers are set in the footers
% at the outside of the page. Even page headers have the chapter number
% and title at the left, and odd page headers have the section title
% at the right.
%
%    Start by making the (empty) \pstyle{ruled} pagestyle.
%    \begin{macrocode}
\makepagestyle{ruled}
%    \end{macrocode}
% There is no need to change the default width (which is the |\textwidth|),
% nor the default positions (centered),
% nor to make the footrule visible. We do, though, have to put the page
% numbers into the footers.
%    \begin{macrocode}
\makeevenfoot{ruled}{\thepage}{}{}
\makeoddfoot{ruled}{}{}{\thepage}
%    \end{macrocode}
% Make the header rule visible and equal to the |\textwidth|.
%    \begin{macrocode}
\makeheadrule{ruled}{\textwidth}{\normalrulethickness}
%    \end{macrocode}
%
% \begin{macro}{\@ruledmarks}
% We have to make sure that the |\chapter| and |\section| commands make
% the appropriate marks for use in the headers. We use the hook for this.
% Note that contrary to normal LaTeX practice, the titles are not
% automatically upper-cased.
%    \begin{macrocode}
\newcommand{\@ruledmarks}{%
  \let\@mkboth\markboth
  \def\chaptermark##1{%
    \markboth{%
      \ifnum \c@secnumdepth >\m@ne
        \if@mainmatter
          \thechapter. \ %
        \fi
      \fi
      ##1}{}}
  \def\sectionmark##1{%
    \markright{##1}}
}
\makepshook{ruled}{\@ruledmarks}
%    \end{macrocode}
% \end{macro}
%
% We can now define the even page header which is to have the chapter title
% at the left. As the chapter mark did no upper-casing we will print it
% using small caps, but just use the normal font for section title on
% the odd page header.
%    \begin{macrocode}
\makeevenhead{ruled}{\scshape\leftmark}{}{}
\makeoddhead{ruled}{}{}{\rightmark}

%    \end{macrocode}
% \end{macro}
% This is all that we need to do for the \pstyle{ruled} pagestyle.
%
% \subsection{Ruled pagestyle}
%
% \begin{macro}{\ps@Ruled}
%    Also define a \pstyle{Ruled} pagestyle similar to \pstyle{ruled} except that the
% headers and footers are 10\% wider than the textblock, sticking out
% into the fore edge.
%    \begin{macrocode}
\makepagestyle{Ruled}
\makerunningwidth{Ruled}{1.1\textwidth}
\makeheadposition{Ruled}{flushright}{flushleft}{flushright}{flushleft}
\makeevenfoot{Ruled}{\thepage}{}{}
\makeoddfoot{Ruled}{}{}{\thepage}
\makeheadrule{Ruled}{1.1\textwidth}{\normalrulethickness}
\makepshook{Ruled}{\@ruledmarks}
\makeevenhead{Ruled}{\scshape\leftmark}{}{}
\makeoddhead{Ruled}{}{}{\rightmark}

%    \end{macrocode}
% \end{macro}
%
% \subsection{companion pagestyle}
%
% \begin{macro}{\headwidth}
% \begin{macro}{\ps@companion}
% A \pstyle{companion} pagestyle like the one in the LaTeX Companion series.
% We need the |\headwidth| length for this.
%    \begin{macrocode}
\newlength{\headwidth}

\makepagestyle{companion}
\setlength{\headwidth}{\textwidth}
  \addtolength{\headwidth}{\marginparsep}
  \addtolength{\headwidth}{\marginparwidth}
\makerunningwidth{companion}{\headwidth}
\makeheadrule{companion}{\headwidth}{\normalrulethickness}
\makeheadposition{companion}{flushright}{flushleft}{}{}
\makepshook{companion}{%
  \let\@mkboth\markboth
  \def\chaptermark##1{\markboth{##1}{##1}}    % left mark & right marks
  \def\sectionmark##1{\markright{%
    \ifnum \c@secnumdepth>\z@
      \thesection. \ %
    \fi
    ##1}}
}
\makeevenhead{companion}{\normalfont\bfseries\thepage}{}{\normalfont\bfseries\leftmark}
\makeoddhead{companion}{\normalfont\bfseries\rightmark}{}{\normalfont\bfseries\thepage}

%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{margins pagestyle}
%
% A style like that in Bringhurst's \textit{The Elements of Typographic Style}.
%
%    \begin{macrocode}
\makepagestyle{margins}
\makeevenfoot{margins}{\thepage}{}{}
\makeoddfoot{margins}{}{}{\thepage}

%    \end{macrocode}
%
% \begin{macro}{\xh@tempdima}
% \begin{macro}{\xh@tempdimb}
% Two scratch lengths.
%    \begin{macrocode}
\newlength{\xh@tempdima}
\newlength{\xh@tempdimb}

%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\marginpicr}
% |\marginpicr|\marg{stuff} puts \meta{stuff} into a zero-sized picture \\
% at position |(\marginparsep, -\xh@tempdima)|.
%    \begin{macrocode}
\newcommand{\marginpicr}[1]{%
  \setlength{\unitlength}{1pt}
  \begin{picture}(0,0)
    \put(\strip@pt\marginparsep, -\strip@pt\xh@tempdima){%
      \begin{minipage}[t]{\marginparwidth}
        \raggedright\itshape #1
      \end{minipage}}
  \end{picture}
}
\setlength{\xh@tempdima}{\headsep}
  \addtolength{\xh@tempdima}{\topskip}
  \addtolength{\xh@tempdima}{7.3\baselineskip}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\marginpicl}
% |\marginpicl|\marg{stuff} puts \meta{stuff} into a zero-sized picture \\
% at position |(-\xh@tempdimb, -\xh@tempdima)|.
%    \begin{macrocode}
\newcommand{\marginpicl}[1]{%
  \setlength{\unitlength}{1pt}
  \begin{picture}(0,0)
    \put(-\strip@pt\xh@tempdimb, -\strip@pt\xh@tempdima){%
      \begin{minipage}[t]{\marginparwidth}
        \raggedleft\itshape #1
      \end{minipage}}
  \end{picture}
}
\setlength{\xh@tempdimb}{\marginparsep}
  \addtolength{\xh@tempdimb}{\marginparwidth}

%    \end{macrocode}
% \end{macro}
%
% Set the marks.
%    \begin{macrocode}
\makepshook{margins}{%
  \let\@mkboth\markboth
  \def\chaptermark##1{\markboth{##1}{##1}}
  \def\sectionmark##1{\markright{##1}}
}
%    \end{macrocode}
%
% Put the marks on the page.
%    \begin{macrocode}
\makeevenhead{margins}{\marginpicl{\rightmark}}{}{}
\makeoddhead{margins}{}{}{\marginpicr{\leftmark}}

%    \end{macrocode}
%
%    The end of the package definitions.
%    \begin{macrocode}
%</head>
%    \end{macrocode}
%
%
%
%
% \bibliographystyle{alpha}
%
% \begin{thebibliography}{GMSN94A}
%
%
% \bibitem[GMS94]{GOOSSENS94}
% Michel Goossens, Frank Mittelbach, and Alexander Samarin.
% \newblock {\em The LaTeX Companion}.
% \newblock Addison-Wesley Publishing Company, 1994.
%
%
% \bibitem[Oos96]{FANCYHDR}
% Piet van Oostrum.
% \newblock \emph{Page layout in LaTeX}.
% \newblock June, 1996.
% \newblock (Available from CTAN in
%            \texttt{/macros/latex/contrib/supported/fancyhdr})
%
% \bibitem[Wil01]{MEMOIR}
% Peter Wilson.
% \newblock \emph{The LaTeX memoir class for configurable book typesetting:
%                 Source code}.
% \newblock July, 2001.
% \newblock (Available from CTAN in
%            \texttt{/macros/latex/contrib/supported/memoir})
%
%
%
%
% \end{thebibliography}
%
%
% \Finale
%
\endinput

%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}


