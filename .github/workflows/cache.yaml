# This workflow makes sure that there is always a cache present for the main branch.
# This cache can be picked up by all other branches, so it ensures that even new
# branches and tags don't have to download a complete copy of TeX Live.
#
# Since GitHub keeps unused caches for one week, we need to run at least once a week
# to ensure that the cache always stays around. To avoid timing issues and issues
# when an update fails for some reason, we run twice per week.

name: Keep TeX Live cache up-to-date
on:
  schedule:
    # Run every tuesday and saturday at 02:48. The time has been chosen at random.
    - cron: '48 2 * * 2,6'

jobs:
  cache:
    runs-on: ubuntu-20.04
    name: Update TeX Live
    steps:
      # GitHub Actions don't regenerate the test if the key doesn't change, so
      # we integrate a random UUID into the key to keep them different.
      # DO NOT CHANGE THIS
      - name: Generate unique ID
        id: get-id
        run: |
          echo -n ::set-output name=id::
          cat /proc/sys/kernel/random/uuid
      # Actually load the cache. Since we never reuse the key, we need restore-keys
      # to indicate the prefix of our caches. This loads the newest cache with this
      # prefix in the key.
      #
      # If we want to force regeneration of the cache, increase the number after
      # *both* instances of "texlive-v" and synchronize the other workflow files.
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: ~/texlive
          key: texlive-v1-${{ steps.get-id.outputs.id }}
          restore-keys: texlive-v1-
      - name: Install TeX Live
        uses: zauguin/install-texlive@v1
        with:
          # List the required TeX Live packages in a separate file to allow reuse in
          # different workflows.
          package_file: .github/tl_packages
