%
% Copyright (C) 2009-2012 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage{xparse}

\begin{document}
\START
\AUTHOR{Joseph Wright}
\ExplSyntaxOn

\OMIT
\cs_new:Npn \TYPELONG #1 {
  \if_meaning:w #1 \par
    \TYPE { <<par>> }
  \else:
    \TYPE { (#1) }
  \fi:
}
\TIMO

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Basic~definitions~with~valid~arguments~(types~s,~o~m)}{
  \DeclareDocumentCommand \foo { m m m } { \TYPE { (#1) (#2) (#3) } }
  \foo a b c
  \foo {text} t {text}
  \DeclareDocumentCommand \foo { m m +m }
    { \TYPE { (#1) (#2) } \TYPELONG {#3} }
  \foo d  e \par
  \foo {text} {text} { }
  \DeclareDocumentCommand \foo { o m m } { \TYPE { (#1) (#2) (#3) } }
  \foo [stuff] f g
  \foo f g
  \foo [] f g
  \DeclareDocumentCommand \foo { m o m } { \TYPE { (#1) (#2) (#3) } }
  \foo h[opt] i
  \foo h~~~[opt] i
  \foo h i
  \DeclareDocumentCommand \foo { m m o } { \TYPE { (#1) (#2) (#3) } }
  \foo j k[opt]
  \foo j k~[not-opt]
  \foo j k
  \DeclareDocumentCommand \foo { s o m } { \TYPE { (#1) (#2) (#3) } }
  \foo l
  \foo * l
  \foo [opt] m
  \foo * [opt] m
  \DeclareDocumentCommand \foo { s +o m }
    { \TYPE { (#1) (#2) } \TYPELONG {#3} }
  \foo l
  \foo * l
  \foo [opt] m
  \foo * [\par] m
}

\TEST{Nesting~optional~arguments}{
  \DeclareDocumentCommand \foo { o m } { \TYPE { (#1) (#2) } }
  \foo [ option ] { text }
  \foo [ [ option ] ] { text }
  \foo [ { [ option ] } ] { text }
  \foo [ { [ } ] { text }
  \foo [ { ] } ] { text }
  \foo [ { option } ] { text }
  \foo [ [ { option } ] ] { text }
  \foo [ [ { option } ] [ { option } ] ] { text }
}

\TEST{Invalid~arguments~(types~s,~o~m)}{
  \DeclareDocumentCommand \foo { m m m } { \TYPE { (#1) (#2) (#3) } }
  \foo a \par b
  \DeclareDocumentCommand \foo { m +m m } { \TYPE { (#1) (#2) (#3) } }
  \foo a b \par
  \DeclareDocumentCommand \foo { o m m } { \TYPE { (#1) (#2) (#3) } }
  \foo [ a b \par
  \DeclareDocumentCommand \foo { m o m } { \TYPE { (#1) (#2) (#3) } }
  \foo a [ b \par
}

\TEST{More~variation~of~type~with~valid~arguments}{
  \DeclareDocumentCommand \foo { g o m } { \TYPE { (#1) (#2) (#3) } }
  \foo a b c
  \foo {text} b c
  \foo ~{text} [opt] {text}
  \DeclareDocumentCommand \foo { m m G{default} }
    { \TYPE { (#1) (#2) (#3) } }
  \foo d e f
  \foo d e {text}
  \foo d e~{text}
  \DeclareDocumentCommand \foo { l m m } { \TYPE { (#1) (#2) (#3) } }
  \foo g~ {h} i
  \DeclareDocumentCommand \foo { u{stop} m m }
    { \TYPE { (#1) (#2) (#3) } }
  \foo jstophere
  \foo stophere
}

\TEST{Variation~of~type~with~invalid~arguments}{
  \DeclareDocumentCommand \foo { g o m } { \TYPE { (#1) (#2) (#3) } }
  \foo {\par} b c
  \DeclareDocumentCommand \foo { m m G{default} }
    { \TYPE { (#1) (#2) (#3) } }
  \foo d e {\par}
  \DeclareDocumentCommand \foo { l m m } { \TYPE { (#1) (#2) (#3) } }
  \foo g~ h i \par
  \DeclareDocumentCommand \foo { u{stop} m m }
    { \TYPE { (#1) (#2) (#3) } }
  \foo j \par
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Optional~argument~tests~(expect~paired~TRUEs~and~FALSEs)}{
  \DeclareDocumentCommand \foo { o m }
    { \IfNoValueTF {#1} \TRUE \FALSE #2 }
  \foo            { \TRUE }
  \foo [ ]        { \FALSE }
  \foo [ \FALSE ] { \FALSE }
  \DeclareDocumentCommand \foo { D<>{default} m }
    { \IfNoValueTF {#1} \TRUE \FALSE #2 }
  \foo            { \FALSE }
  \foo < >        { \FALSE }
  \foo < \FALSE > { \FALSE }
  \DeclareDocumentCommand \foo { s m }
    { \IfBooleanTF #1 \TRUE \FALSE #2 }
  \foo *           { \TRUE }
  \foo             { \FALSE }
  \DeclareDocumentCommand \foo { m t+ }
    { \IfBooleanTF #2 \TRUE \FALSE #1 }
  \foo { \TRUE }    +
  \foo { \FALSE }
  \foo { \FALSE } ~ +
}

\TEST{Awkward~`NoValue'~checks~(expect~T/F/F/F/F)}{
  \DeclareDocumentCommand \foo { o m }
    { \IfNoValueTF {#1} \TRUE \FALSE }
  \OMIT
  \tl_set:Nn \testa { -NoValue- }
  \cs_set_protected_nopar:Npn \testb { -NoValue- }
  \cs_set:Npn \testc #1#2#3 { }
  \TIMO
  \foo { }
  \foo [\testa] { }
  \foo [\testb] { }
  \foo [\testc] { }
  \foo [-NoValue-] { }
}

\TEST { Nested~optional~arguments } {
  \DeclareDocumentCommand \foo { o } { \showtokens {#1} }
  \foo
  \foo [ bar ]
  \foo [ {]} ]
  \foo [ {[} ]
  \foo [ [ ] ]
  \foo [ [ bar ] ]
  \foo [ [ bar ] [ baz ] ]
  \foo [ [ ] [ ] [ ] [ ] [ ] { ] } ]
  \foo [ { a } [ { b } [ { c } ] { d } [ { e } ] { f } ] { g } [ { h } ] { i } ]
}

\TEST{Processing~arguments}{
  \OMIT
  \cs_set:Npn \foo:nn #1#2 { \TYPE { #1, #2 } }
  \TIMO
  \DeclareDocumentCommand \foo
    { >{\SplitArgument{1}{,}}d() }
    { \IfNoValueTF {#1} { \TYPE #1 } { \foo:nn #1 } }
  \foo (1,2)
  \foo
  \foo (3)
  \DeclareDocumentCommand \foo
    { >{\SplitArgument{1}{,}}D(){0,0} }
    { \foo:nn #1 }
  \foo (1,2)
  \foo
  \foo (3)
}

\TEST{Optional~argument~tests~expand~(expect~T/F/F/F/T)}{
  \DeclareDocumentCommand \foo { o m }
    { \tl_set:Nx \test { \IfNoValueTF {#1} {TRUE} {FALSE} }
      \tl_show:N \test }
  \foo {bar}
  \foo [] {bar}
  \foo [opt]{bar}
  \DeclareDocumentCommand \foo { s m }
    { \tl_set:Nx \test { \IfBooleanTF {#1} {TRUE} {FALSE} }
      \tl_show:N \test }
  \foo {bar}
  \foo *{bar}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Fully~expandable~functions}{
  \DeclareExpandableDocumentCommand \foo { o m }
    { (#1) (#2) }
  \TYPE { \foo [a] {b} }
  \TYPE { \foo     {c} }
  \DeclareExpandableDocumentCommand \foo { s o m }
    { (#1) (#2) (#3) }
  \TYPE { \foo [a] {b} }
  \TYPE { \foo     {c} }
  \TYPE { \foo * [a] {b} }
  \TYPE { \foo *     {c} }
  \DeclareExpandableDocumentCommand \foo { o m o m }
    { (#1) (#2) (#3) (#4) }
  \TYPE { \foo     {b}     {d} }
  \TYPE { \foo     {b}     {d} }
  \TYPE { \foo [a] {b}     {d} }
  \TYPE { \foo     {b} [c] {d} }
  \TYPE { \foo [a] {b} [c] {d} }
}

\TEST{Fully~expandable~long~functions}{
  \OMIT
  \DeclareExpandableDocumentCommand \foo { +o +m }
    { (#1) (#2) }
  \TIMO
  \TYPE { \foo [ \par ] {b} }
  \TYPE { \foo     { \par } }
  \OMIT
  \DeclareExpandableDocumentCommand \foo { +s +o +m }
    { (#1) (#2) (#3) }
  \TIMO
  \TYPE { \foo [ \par ] {b}      }
  \TYPE { \foo          { \par } }
  \TYPE { \foo * [ \par ] {b}      }
  \TYPE { \foo *          { \par } }
  \OMIT
  \DeclareExpandableDocumentCommand \foo { +o +m +o +m }
    { (#1) (#2) (#3) (#4) }
  \TIMO
  \TYPE { \foo          { \par }         {d}      }
  \TYPE { \foo          {b}              { \par } }
  \TYPE { \foo [ \par ] {b}              {d}      }
  \TYPE { \foo          {b}     [ \par ] {d}      }
  \TYPE { \foo [ \par ] { \par} [ \par ] { \par } }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
