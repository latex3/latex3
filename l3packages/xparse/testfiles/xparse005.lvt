%
% Copyright (C) 2018,2019 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff
\RequirePackage{xparse}

\begin{document}

\START
\AUTHOR{Bruno Le Floch}

\ExplSyntaxOn

\TEST { Invalid~'!' }
  {
    \NewDocumentCommand { \testA } { ! u{.} } { }
    \NewDocumentCommand { \testA } { ! o r() } { }
    \NewDocumentCommand { \testA } { ! + o m } { }
    \NewDocumentCommand { \testA } { ! ! o } { }
    \NewDocumentCommand { \testA } { ! + ! } { }
    \NewDocumentCommand { \testA } { + ! } { }
    \NewDocumentCommand { \testA } { ! } { }
    \NewDocumentCommand { \testA } { + + m } { }
    \NewExpandableDocumentCommand { \testA } { ! o } { }
    \NewExpandableDocumentCommand { \testA } { ! m o } { }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_new_protected:Npn \test:nw #1 #2 \q_stop
  { \TYPE { \tl_to_str:n { | #1 | #2 | } } }
\TIMO

\TEST { Valid~'!'~and~avoid~dropping~spaces }
  {
    \NewDocumentCommand { \testA } { m ! + o o }
      { \test:nw { #1 | #2 | #3 } }
    \testA \par \use_none:nn \ERROR \q_stop
    \testA {a} ~ [b] \q_stop
    \testA {a} [b] ~ \c_space_token \q_stop
    \testA {a} [b] \c_space_token [d] \q_stop
    \use:x { \testA {a} [b] ~ \c_space_tl [c[d]] ~ \c_space_token } \q_stop
    \NewDocumentCommand { \testB } { m ! + s s }
      { \test:nw { #1 | #2 | #3 } }
    \testB \par \use_none:nn \ERROR \q_stop
    \testB {a} ~ * \q_stop
    \testB {a} * ~ \c_space_token \q_stop
    \testB {a} * \c_space_token * \q_stop
    \use:x { \testB {a} * ~ \c_space_tl * ~ \c_space_token } \q_stop
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Signature~normalized~or~not }
  {
    \NewDocumentCommand { \testC } { ! + o } { }
    \ShowDocumentCommandArgSpec \testC
    \NewDocumentCommand { \testD } { + ! o } { }
    \ShowDocumentCommandArgSpec \testD
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% The following tests are outside to allow \ExplSyntaxOff and \obeylines
\TEST { Environment~body~valid } { }

\NewDocumentEnvironment { env1 } { o >{\SplitList{\par}} + b { } }
  { \TYPE { \tl_to_str:n {|#1|#2|} } }
  { \TYPE { \tl_to_str:n {|#1|} } }
\NewDocumentEnvironment { env2 } { ! o ! b { \obeylines } }
  { \TYPE { \tl_to_str:n {|#1|#2|} } }
  { \TYPE { \tl_to_str:n {|#1|} } }
\ExplSyntaxOff
\begin{env1} [...]
  \begin{any}
    \begin{unbalanced}
    \end{environments}
    \begin{provided}

    \end{nesting}
  \end{works}
  \begin{out}
  \end{!}
\end{env1}
\begin{env2} [...]
  \begin{any}
    \begin{unbalanced}
    \end{environments}
    \begin{provided}
    \end{nesting}
  \end{works}
  \begin{out}
  \end{!}
\end{env2}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Body~invalid }
  {
    \begin{env1}\end{env2}
    \begin{env2}
      \par
      \endgroup % error recovery for runaway args is not great: we need this \endgroup
    \end{env2}
    \NewDocumentCommand{\testE} { b{} } { }
    \NewDocumentEnvironment{env3} { b{} m } { } { }
  }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
