%
% Copyright (C) 2018,2019 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage[enable-debug]{expl3}
\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff
\RequirePackage{xparse}

\begin{document}

\START
\AUTHOR{Bruno Le Floch}

\ExplSyntaxOn

\TEST { Invalid~'!' }
  {
    \NewDocumentCommand { \testA } { ! u{.} } { }
    \NewDocumentCommand { \testA } { ! o r() } { }
    \NewDocumentCommand { \testA } { ! + o m } { }
    \NewDocumentCommand { \testA } { ! ! o } { }
    \NewDocumentCommand { \testA } { ! + ! } { }
    \NewDocumentCommand { \testA } { + ! } { }
    \NewDocumentCommand { \testA } { ! } { }
    \NewDocumentCommand { \testA } { + + m } { }
    \NewExpandableDocumentCommand { \testA } { ! o } { }
    \NewExpandableDocumentCommand { \testA } { ! m o } { }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
\cs_new_protected:Npn \test:nw #1 #2 \q_stop
  { \TYPE { \tl_to_str:n { | #1 | #2 | } } }
\TIMO

\TEST { Valid~'!'~and~avoid~dropping~spaces }
  {
    \NewDocumentCommand { \testA } { m ! + o o }
      { \test:nw { #1 | #2 | #3 } }
    \testA \par \use_none:nn \ERROR \q_stop
    \testA {a} ~ [b] \q_stop
    \testA {a} [b] ~ \c_space_token \q_stop
    \testA {a} [b] \c_space_token [d] \q_stop
    \use:x { \testA {a} [b] ~ \c_space_tl [c[d]] ~ \c_space_token } \q_stop
    \NewDocumentCommand { \testB } { m ! + s s }
      { \test:nw { #1 | #2 | #3 } }
    \testB \par \use_none:nn \ERROR \q_stop
    \testB {a} ~ * \q_stop
    \testB {a} * ~ \c_space_token \q_stop
    \testB {a} * \c_space_token * \q_stop
    \use:x { \testB {a} * ~ \c_space_tl * ~ \c_space_token } \q_stop
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Signature~normalized~or~not }
  {
    \NewDocumentCommand { \testC } { ! + o } { }
    \ShowDocumentCommandArgSpec \testC
    \NewDocumentCommand { \testD } { + ! o } { }
    \ShowDocumentCommandArgSpec \testD
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% The following tests are outside to allow \ExplSyntaxOff and \obeylines
\TEST { Environment~body~valid } { }

\NewDocumentEnvironment { env1 } { o >{\SplitList{\par}} + b }
  { \TYPE { \tl_to_str:n {|#1|#2|} } }
  { \TYPE { \tl_to_str:n {|#1|} } }
\NewDocumentEnvironment { env2 } { ! o ! b }
  { \TYPE { \tl_to_str:n {|#1|#2|} } }
  { \TYPE { \tl_to_str:n {|#1|} } }
\ExplSyntaxOff
\begin{env1} [...]
  \begin{any}
    \begin{unbalanced}
    \end{environments}
    \begin{provided}

    \end{nesting}
  \end{works}
  \begin{out}
  \end{!}
\end{env1}
\begin{env2} [...]
  \begin{any}
    \begin{unbalanced}
    \end{environments}
    \begin{provided}
    \end{nesting}
  \end{works}
  \begin{out}
  \end{!}
\end{env2}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST { Body~invalid }
  {
    \begin{env1}\end{env2}
    \begin{env2}
      \par
    \end{env2}
    \NewDocumentCommand{\testE} { b } { }
    \NewDocumentEnvironment{env3} { b m } { } { }
  }

% The rest of this test tests all of xparse's messages.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Invalid~signatures }
  {
    \DeclareExpandableDocumentCommand { \testA } { u } { } { }
    \ProvideDocumentCommand { \testA } { O } { }
    \NewDocumentEnvironment { testA } { D [ ] } { } { }
    \NewDocumentEnvironment { testA } { ! + >{\TrimSpaces} } { } { }
    \NewDocumentCommand { \testA } { ! o m } { }
    \NewDocumentEnvironment { testA } { ! o m } { } { }
    \NewDocumentCommand { \testA } { mmmmmmmmmmmm } { }
    \NewDocumentEnvironment { testA } { mmmmmmmmmmmm } { } { }
    \NewDocumentCommand { \testA } { !!m } { }
    \NewDocumentEnvironment { testA } { !!m } { } { }
    \NewDocumentCommand { \testA } { X } { }
    \NewDocumentEnvironment { testA } { X } { } { }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Already~or~not~yet~defined }
  {
    \NewDocumentCommand { \space } { } { }
    \TYPE{|\meaning\space|}
    \NewDocumentEnvironment { foo } { m } { \TYPE { foo } } { }
    \NewDocumentEnvironment { foo } { } { } { }
    \begin{foo}{\ERROR}
    \end{foo}
    \RenewDocumentCommand { \testA } { m } { }
    \RenewDocumentEnvironment { testA } { m } { } { }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Not~definable / multi-char }
  {
    \NewDocumentCommand { + } { } { }
    \NewDocumentCommand { space } { } { }
    \NewDocumentCommand { \testA } { r\(\) } { }
    \NewDocumentCommand { \testB } { r{ab}{cd} } { }
    \IfBooleanTF { foo } { \TRUE } { \FALSE }
    \IfBooleanT { \foo } { \TRUE }
    \IfBooleanF { ? } { \FALSE }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Invalid~signatures~for~expandable~commands }
  {
    \NewExpandableDocumentCommand { \testA } { m o } { }
    \NewExpandableDocumentCommand { \testA } { +m m } { }
    \NewExpandableDocumentCommand { \testA } { v } { }
    \NewExpandableDocumentCommand { \testA } { g } { }
    \NewExpandableDocumentCommand { \testA } { o l } { }
    \NewExpandableDocumentCommand { \testA } { o u { + } } { }
    \NewExpandableDocumentCommand { \testA } { >{\TrimSpaces} m } { }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Arg~spec }
  {
    \GetDocumentCommandArgSpec { \space }
    \TYPE { \meaning \ArgumentSpecification }
    \ShowDocumentCommandArgSpec { \undefined }
    \GetDocumentEnvironmentArgSpec { verbatim }
    \TYPE { \meaning \ArgumentSpecification }
    \ShowDocumentEnvironmentArgSpec { undefined }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST { Run-time~errors }
  {
    \NewDocumentCommand { \testA }
      { O{#2} O{#4#1} m O{#3#5} m }
      { \TYPE { \exp_not:n { #1 | #2 | #3 | #4 | #5 } } \NEWLINE }
    \testA {\C}{\E}
    \NewDocumentEnvironment { testB }
      { O{#2} O{#4#1} m O{#3#5} m }
      { \TYPE { \exp_not:n { #1 | #2 | #3 | #4 | #5 } } \NEWLINE }
      { }
    \begin{testB}{\C}{\E}\end{testB}
    \NewDocumentCommand { \testC } { >{\SplitArgument{2}{,}} m } { }
    \testC { a,b,c,d }
    \NewDocumentEnvironment { testD } { >{\SplitArgument{2}{,}} m } { } { }
    \begin{testD}{a,b,c,d}
    \end{testD}
    \NewDocumentCommand { \testE } { v } { \TYPE {#1} }
    \testE+\TYPE+
    \NewDocumentEnvironment { testF } { v } { \TYPE {#1} } { }
    \begin{testF}+\TYPE+
    \end{testF}
  }
\ExplSyntaxOff
\NewDocumentCommand { \testG } { v } { \TYPE {#1} }
\testG+
\TYPE+
\NewDocumentEnvironment { testH } { v } { \TYPE {#1} } { }
\begin{testH}+
\TYPE+
\end{testH}
\ExplSyntaxOn


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
