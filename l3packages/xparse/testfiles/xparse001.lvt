%
% Copyright (C) 2009-2012 LaTeX3 Project
%

\documentclass{minimal}
\input{regression-test}

\RequirePackage{xparse}

\begin{document}
\START
\AUTHOR{Joseph Wright, Frank Mittelbach}
\ExplSyntaxOn

\OMIT
\cs_new:Npn \xparse_show:N #1 {
  \cs_show:N #1
  \cs_show:c { \cs_to_str:N #1 ~code }
}
\cs_new:Npn \xparse_show_env:n #1 {
  \cs_show:c { environment~#1 }
  \cs_show:c { environment~#1~code }
}
\tl_new:N \l_test_tl
\TIMO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Checking~for~existing~definitions}{
  \OMIT
  \DeclareDocumentCommand \foo { } { }
  \TIMO
  \NewDocumentCommand \foo { } { }
  \OMIT
  \cs_undefine:N \foo
  \TIMO
  \RenewDocumentCommand \foo { } { }
  \OMIT
  \DeclareDocumentCommand \foo { } { First~definition }
  \TIMO
  \ProvideDocumentCommand \foo { } { Second~definition }
  \xparse_show:N \foo
}

\TEST{Commands~with~simple~mandatory~arguments}{
  \DeclareDocumentCommand \foo { m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m }
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m }
    { (#1) (#2) (#3) (#4) (#5) (#6) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo
}

\TEST{Command~with~too~many~arguments}{
  \DeclareDocumentCommand \foo { m m m m m m m m m m } { }
  \xparse_show:N \foo
}

\TEST{Commands~with~one~long~mandatory~argument}{
  \DeclareDocumentCommand \foo { +m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m +m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m +m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m +m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m +m }
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m +m }
    { (#1) (#2) (#3) (#4) (#5) (#6) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m +m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m +m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m +m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo
}

\TEST{Commands~with~one~processed~mandatory~argument}{
  \DeclareDocumentCommand \foo { >{\foo}m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m >{\foo}m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m >{\foo}m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) (#6)  }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo
}

\TEST{Arguments~read~up~to~first~brace}{
  \OMIT
  \DeclareDocumentCommand \foo { l m } {
    \tl_set:Nn \l_test_tl { (#1) (#2) }
    \tl_show:N \l_test_tl
  }
  \TIMO
  \foo \bar {1}
  \foo 100  {2}
  \OMIT
  \DeclareDocumentCommand \foo { +l m } {
    \tl_set:Nn \l_test_tl { (#1) (#2) }
    \tl_show:N \l_test_tl
  }
  \TIMO
  \foo \bar

  {1}
  \foo 100

  {2}
}

\TEST{Various~mandatory~combinations}{
  \DeclareDocumentCommand \foo { l m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m l m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { u{end} u{stop!} } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { l l l } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { +l >{\foo}u{end} } { (#1) (#2) }
  \xparse_show:N \foo
}

\TEST{Optional~argument~creation}{
  \DeclareDocumentCommand \foo { s o m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { t+ d() +m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { +t\par O{default} m m m }
    { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m o m o } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m g o m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m G{test} s m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
}

\TEST{Unknown~argument~types}{
  \DeclareDocumentCommand \foo { m m n } { }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { a b c } { }
  \xparse_show:N \foo
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Some~valid~expandable~functions}{
  \DeclareExpandableDocumentCommand \foo { m } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +m } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +o +m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { s m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o s m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
}

\TEST{Not~valid~as~expandable~functions}{
  \DeclareExpandableDocumentCommand \foo { m o } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o +m } { (#1) (#2) }
  \xparse_show:N \foo
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Checking~for~existing~environments}{
  \OMIT
  \DeclareDocumentEnvironment { foo } { } { } { }
  \TIMO
  \NewDocumentEnvironment { foo } { } { } { }
  \OMIT
  \cs_undefine:N \environment_begin_foo:w
  \cs_undefine:N \foo
  \TIMO
  \RenewDocumentEnvironment { foo } { } { } { }
  \OMIT
  \DeclareDocumentEnvironment { foo } { } { First } { First }
  \TIMO
  \ProvideDocumentEnvironment { foo } { } { Second } { Second }
  \xparse_show_env:n { foo }
}

\TEST{Valid~environment~declarations}{
  \DeclareDocumentEnvironment { foo } { m m m }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { s o m }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { s o +m }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { u{stop} o m }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { m o o }
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\OMIT
 \DeclareDocumentEnvironment { bar } {  } {  } {  }
 \DeclareDocumentEnvironment { barI } { m } {  } {  }
 \DeclareDocumentEnvironment { barII } { o m } {  } {  }
\TIMO


\TEST{Environment~groups:~should~show~"outside"~and~1}{
   \tl_set:Nn \l_test_tl {outside}
   \begin{bar}
    \tl_set:Nn \l_test_tl {inside}
   \end{bar}
   \tl_show:N \l_test_tl  \int_show:N \currentgrouplevel
%%%%%%%%
   \tl_set:Nn \l_test_tl {outside}
   \begin{barI} {A}
     \tl_set:Nn \l_test_tl {inside}
   \end{barI}
   \tl_show:N \l_test_tl   \int_show:N \currentgrouplevel
%%%%%%%%
   \tl_set:Nn \l_test_tl {outside}
   \begin{barII} [B]{C}
     \tl_set:Nn \l_test_tl {inside}
   \end{barII}
   \tl_show:N \l_test_tl   \int_show:N \currentgrouplevel
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
 \DeclareDocumentEnvironment { bazI } { m } {  }
     { \tl_show:n { ( #1 ) } }
 \DeclareDocumentEnvironment { bazII } { m m } {  }
     { \tl_show:n { ( #1 ) ( #2 ) } }
 \DeclareDocumentEnvironment { bazIII } { m m m } {  }
     { \tl_show:n { ( #1 ) ( #2 ) ( #3 ) } }
 \DeclareDocumentEnvironment { bazIIIa } { o o o } {  }
     { \tl_show:n { ( #1 ) ( #2 ) ( #3 ) } }
 \DeclareDocumentEnvironment { bazIIId } { o m o } {  }
     { \tl_show:n { ( #1 ) ( #2 ) ( #3 ) } }
\TIMO

\TEST{Passing~args~to~end~of~environments:~display~correct~args}{
  \begin{bazI}{A}         \end{bazI}       1234
  \begin{bazII}{A}{B}     \end{bazII}      1234
  \begin{bazIII}{A}{B}{C} \end{bazIII}     1234
  \begin{bazIIIa}[A]{B}   \end{bazIIIa}    1234
}

\TEST { Nested~environments } {
  \OMIT
    \DeclareDocumentEnvironment { baz } { o }
      { \begin{foo} } { \end{foo} }
    \DeclareDocumentEnvironment { foo } { } { } { }
  \TIMO
  \begin { baz }
    \tl_show:c { @currenvir }
  \end { baz }
  \tl_show:c { @currenvir }
}

\OMIT
\DeclareDocumentEnvironment { test } { o }{ start } { stop! }
\TIMO
\TEST { Passing~arguments~to~the~end~with~more~complex~cases }
  {
    \hbox_set:Nn \l_tmpa_box
      {
         \begin{test}
           middle
         \end{test}
         \begin{test} [ ]
           middle
         \end{test}
      }
    \box_show:N \l_tmpa_box  
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
